load("@aspect_rules_esbuild//esbuild:defs.bzl", "esbuild")
load("@aspect_rules_js//js:defs.bzl", "js_binary")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")

package(default_visibility = ["//visibility:public"])

copy_file(
    name = "copy_worker_js",
    src = "@aspect_rules_js//js/private/worker:worker.js",
    out = "protocol/worker.cjs",
)

ts_project(
    name = "worker_lib",
    srcs = glob([
        "**/*.mts",
        "**/*.cts",
    ]),
    data = [":copy_worker_js"],
    declaration = True,
    tsconfig = "tsconfig.json",
    deps = [
        "//:node_modules/@angular/compiler-cli",
        "//:node_modules/@types/node",
        "//:node_modules/memfs",
        "//:node_modules/typescript",
    ],
)

js_binary(
    name = "worker_angular",
    data = [":worker_lib"],
    entry_point = ":index.mjs",
)

js_binary(
    name = "worker_ts",
    data = [":worker_lib"],
    entry_point = ":index.mjs",
    fixed_args = ["--vanilla-ts"],
)

esbuild(
    name = "bundle",
    srcs = [":copy_worker_js"],
    entry_point = ":index.mjs",
    external = [
        "typescript",
        "@angular/compiler-cli",
    ],
    format = "esm",
    minify = True,
    output = "worker_bundle.mjs",
    platform = "node",
    sourcemap = "inline",
    target = "es2022",
    deps = [":worker_lib"],
)
