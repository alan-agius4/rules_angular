var Bo=Object.create;var Ce=Object.defineProperty;var Do=Object.getOwnPropertyDescriptor;var jo=Object.getOwnPropertyNames;var Mo=Object.getPrototypeOf,Lo=Object.prototype.hasOwnProperty;var mt=(s=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(s,{get:(e,i)=>(typeof require<"u"?require:e)[i]}):s)(function(s){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+s+'" is not supported')});var Uo=(s,e)=>()=>(s&&(e=s(s=0)),e);var H=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),Wo=(s,e)=>{for(var i in e)Ce(s,i,{get:e[i],enumerable:!0})},Ji=(s,e,i,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of jo(e))!Lo.call(s,a)&&a!==i&&Ce(s,a,{get:()=>e[a],enumerable:!(o=Do(e,a))||o.enumerable});return s};var Xi=(s,e,i)=>(i=s!=null?Bo(Mo(s)):{},Ji(e||!s||!s.__esModule?Ce(i,"default",{value:s,enumerable:!0}):i,s)),qo=s=>Ji(Ce({},"__esModule",{value:!0}),s);var Tt=H(De=>{"use strict";Object.defineProperty(De,"__esModule",{value:!0});De.constants=void 0;De.constants={O_RDONLY:0,O_WRONLY:1,O_RDWR:2,S_IFMT:61440,S_IFREG:32768,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960,S_IFSOCK:49152,O_CREAT:64,O_EXCL:128,O_NOCTTY:256,O_TRUNC:512,O_APPEND:1024,O_DIRECTORY:65536,O_NOATIME:262144,O_NOFOLLOW:131072,O_SYNC:1052672,O_SYMLINK:2097152,O_DIRECT:16384,O_NONBLOCK:2048,S_IRWXU:448,S_IRUSR:256,S_IWUSR:128,S_IXUSR:64,S_IRWXG:56,S_IRGRP:32,S_IWGRP:16,S_IXGRP:8,S_IRWXO:7,S_IROTH:4,S_IWOTH:2,S_IXOTH:1,F_OK:0,R_OK:4,W_OK:2,X_OK:1,UV_FS_SYMLINK_DIR:1,UV_FS_SYMLINK_JUNCTION:2,UV_FS_COPYFILE_EXCL:1,UV_FS_COPYFILE_FICLONE:2,UV_FS_COPYFILE_FICLONE_FORCE:4,COPYFILE_EXCL:1,COPYFILE_FICLONE:2,COPYFILE_FICLONE_FORCE:4}});var Me=H(he=>{"use strict";Object.defineProperty(he,"__esModule",{value:!0});he.Stats=void 0;var Vo=Tt(),{S_IFMT:zo,S_IFDIR:Ho,S_IFREG:Ko,S_IFBLK:Yo,S_IFCHR:Go,S_IFLNK:Jo,S_IFIFO:Xo,S_IFSOCK:Zo}=Vo.constants,je=class s{static build(e,i=!1){let o=new s,{uid:a,gid:c,atime:f,mtime:g,ctime:w}=e,l=i?v=>BigInt(v):v=>v;o.uid=l(a),o.gid=l(c),o.rdev=l(0),o.blksize=l(4096),o.ino=l(e.ino),o.size=l(e.getSize()),o.blocks=l(1),o.atime=f,o.mtime=g,o.ctime=w,o.birthtime=w,o.atimeMs=l(f.getTime()),o.mtimeMs=l(g.getTime());let h=l(w.getTime());if(o.ctimeMs=h,o.birthtimeMs=h,i){o.atimeNs=BigInt(f.getTime())*BigInt(1e6),o.mtimeNs=BigInt(g.getTime())*BigInt(1e6);let v=BigInt(w.getTime())*BigInt(1e6);o.ctimeNs=v,o.birthtimeNs=v}return o.dev=l(0),o.mode=l(e.mode),o.nlink=l(e.nlink),o}_checkModeProperty(e){return(Number(this.mode)&zo)===e}isDirectory(){return this._checkModeProperty(Ho)}isFile(){return this._checkModeProperty(Ko)}isBlockDevice(){return this._checkModeProperty(Yo)}isCharacterDevice(){return this._checkModeProperty(Go)}isSymbolicLink(){return this._checkModeProperty(Jo)}isFIFO(){return this._checkModeProperty(Xo)}isSocket(){return this._checkModeProperty(Zo)}};he.Stats=je;he.default=je});var Vt=H(kt=>{"use strict";Object.defineProperty(kt,"__esModule",{value:!0});kt.bufferFrom=kt.bufferAllocUnsafe=kt.Buffer=void 0;var Le=mt("buffer");Object.defineProperty(kt,"Buffer",{enumerable:!0,get:function(){return Le.Buffer}});function Zi(s,...e){return new Le.Buffer(s,...e)}var Qo=Le.Buffer.allocUnsafe||Zi;kt.bufferAllocUnsafe=Qo;var ts=Le.Buffer.from||Zi;kt.bufferFrom=ts});var Wr=H(rt=>{"use strict";Object.defineProperty(rt,"__esModule",{value:!0});rt.AssertionError=rt.RangeError=rt.TypeError=rt.Error=void 0;rt.message=en;rt.E=k;var Nt=mt("assert"),Mr=mt("util"),Qi=typeof Symbol>"u"?"_kCode":Symbol("code"),tn={};function Ur(s){return class extends s{constructor(i,...o){super(en(i,o)),this.code=i,this[Qi]=i,this.name=`${super.name} [${this[Qi]}]`}}}var We=typeof globalThis<"u"?globalThis:global,Lr=class extends We.Error{constructor(e){if(typeof e!="object"||e===null)throw new rt.TypeError("ERR_INVALID_ARG_TYPE","options","object");e.message?super(e.message):super(`${Mr.inspect(e.actual).slice(0,128)} ${e.operator} ${Mr.inspect(e.expected).slice(0,128)}`),this.generatedMessage=!e.message,this.name="AssertionError [ERR_ASSERTION]",this.code="ERR_ASSERTION",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,rt.Error.captureStackTrace(this,e.stackStartFunction)}};rt.AssertionError=Lr;function en(s,e){Nt.strictEqual(typeof s,"string");let i=tn[s];Nt(i,`An invalid error message key was used: ${s}.`);let o;if(typeof i=="function")o=i;else{if(o=Mr.format,e===void 0||e.length===0)return i;e.unshift(i)}return String(o.apply(null,e))}function k(s,e){tn[s]=typeof e=="function"?e:String(e)}rt.Error=Ur(We.Error);rt.TypeError=Ur(We.TypeError);rt.RangeError=Ur(We.RangeError);k("ERR_ARG_NOT_ITERABLE","%s must be iterable");k("ERR_ASSERTION","%s");k("ERR_BUFFER_OUT_OF_BOUNDS",is);k("ERR_CHILD_CLOSED_BEFORE_REPLY","Child closed before reply received");k("ERR_CONSOLE_WRITABLE_STREAM","Console expects a writable stream instance for %s");k("ERR_CPU_USAGE","Unable to obtain cpu usage %s");k("ERR_DNS_SET_SERVERS_FAILED",(s,e)=>`c-ares failed to set servers: "${s}" [${e}]`);k("ERR_FALSY_VALUE_REJECTION","Promise was rejected with falsy value");k("ERR_ENCODING_NOT_SUPPORTED",s=>`The "${s}" encoding is not supported`);k("ERR_ENCODING_INVALID_ENCODED_DATA",s=>`The encoded data was not valid for encoding ${s}`);k("ERR_HTTP_HEADERS_SENT","Cannot render headers after they are sent to the client");k("ERR_HTTP_INVALID_STATUS_CODE","Invalid status code: %s");k("ERR_HTTP_TRAILER_INVALID","Trailers are invalid with this transfer encoding");k("ERR_INDEX_OUT_OF_RANGE","Index out of range");k("ERR_INVALID_ARG_TYPE",es);k("ERR_INVALID_ARRAY_LENGTH",(s,e,i)=>(Nt.strictEqual(typeof i,"number"),`The array "${s}" (length ${i}) must be of length ${e}.`));k("ERR_INVALID_BUFFER_SIZE","Buffer size must be a multiple of %s");k("ERR_INVALID_CALLBACK","Callback must be a function");k("ERR_INVALID_CHAR","Invalid character in %s");k("ERR_INVALID_CURSOR_POS","Cannot set cursor row without setting its column");k("ERR_INVALID_FD",'"fd" must be a positive integer: %s');k("ERR_INVALID_FILE_URL_HOST",'File URL host must be "localhost" or empty on %s');k("ERR_INVALID_FILE_URL_PATH","File URL path %s");k("ERR_INVALID_HANDLE_TYPE","This handle type cannot be sent");k("ERR_INVALID_IP_ADDRESS","Invalid IP address: %s");k("ERR_INVALID_OPT_VALUE",(s,e)=>`The value "${String(e)}" is invalid for option "${s}"`);k("ERR_INVALID_OPT_VALUE_ENCODING",s=>`The value "${String(s)}" is invalid for option "encoding"`);k("ERR_INVALID_REPL_EVAL_CONFIG",'Cannot specify both "breakEvalOnSigint" and "eval" for REPL');k("ERR_INVALID_SYNC_FORK_INPUT","Asynchronous forks do not support Buffer, Uint8Array or string input: %s");k("ERR_INVALID_THIS",'Value of "this" must be of type %s');k("ERR_INVALID_TUPLE","%s must be an iterable %s tuple");k("ERR_INVALID_URL","Invalid URL: %s");k("ERR_INVALID_URL_SCHEME",s=>`The URL must be ${Ue(s,"scheme")}`);k("ERR_IPC_CHANNEL_CLOSED","Channel closed");k("ERR_IPC_DISCONNECTED","IPC channel is already disconnected");k("ERR_IPC_ONE_PIPE","Child process can have only one IPC pipe");k("ERR_IPC_SYNC_FORK","IPC cannot be used with synchronous forks");k("ERR_MISSING_ARGS",rs);k("ERR_MULTIPLE_CALLBACK","Callback called multiple times");k("ERR_NAPI_CONS_FUNCTION","Constructor must be a function");k("ERR_NAPI_CONS_PROTOTYPE_OBJECT","Constructor.prototype must be an object");k("ERR_NO_CRYPTO","Node.js is not compiled with OpenSSL crypto support");k("ERR_NO_LONGER_SUPPORTED","%s is no longer supported");k("ERR_PARSE_HISTORY_DATA","Could not parse history data in %s");k("ERR_SOCKET_ALREADY_BOUND","Socket is already bound");k("ERR_SOCKET_BAD_PORT","Port should be > 0 and < 65536");k("ERR_SOCKET_BAD_TYPE","Bad socket type specified. Valid types are: udp4, udp6");k("ERR_SOCKET_CANNOT_SEND","Unable to send data");k("ERR_SOCKET_CLOSED","Socket is closed");k("ERR_SOCKET_DGRAM_NOT_RUNNING","Not running");k("ERR_STDERR_CLOSE","process.stderr cannot be closed");k("ERR_STDOUT_CLOSE","process.stdout cannot be closed");k("ERR_STREAM_WRAP","Stream has StringDecoder set or is in objectMode");k("ERR_TLS_CERT_ALTNAME_INVALID","Hostname/IP does not match certificate's altnames: %s");k("ERR_TLS_DH_PARAM_SIZE",s=>`DH parameter size ${s} is less than 2048`);k("ERR_TLS_HANDSHAKE_TIMEOUT","TLS handshake timeout");k("ERR_TLS_RENEGOTIATION_FAILED","Failed to renegotiate");k("ERR_TLS_REQUIRED_SERVER_NAME",'"servername" is required parameter for Server.addContext');k("ERR_TLS_SESSION_ATTACK","TSL session renegotiation attack detected");k("ERR_TRANSFORM_ALREADY_TRANSFORMING","Calling transform done when still transforming");k("ERR_TRANSFORM_WITH_LENGTH_0","Calling transform done when writableState.length != 0");k("ERR_UNKNOWN_ENCODING","Unknown encoding: %s");k("ERR_UNKNOWN_SIGNAL","Unknown signal: %s");k("ERR_UNKNOWN_STDIN_TYPE","Unknown stdin file type");k("ERR_UNKNOWN_STREAM_TYPE","Unknown stream file type");k("ERR_V8BREAKITERATOR","Full ICU data not installed. See https://github.com/nodejs/node/wiki/Intl");function es(s,e,i){Nt(s,"name is required");let o;e.includes("not ")?(o="must not be",e=e.split("not ")[1]):o="must be";let a;if(Array.isArray(s))a=`The ${s.map(f=>`"${f}"`).join(", ")} arguments ${o} ${Ue(e,"type")}`;else if(s.includes(" argument"))a=`The ${s} ${o} ${Ue(e,"type")}`;else{let c=s.includes(".")?"property":"argument";a=`The "${s}" ${c} ${o} ${Ue(e,"type")}`}return arguments.length>=3&&(a+=`. Received type ${i!==null?typeof i:"null"}`),a}function rs(...s){Nt(s.length>0,"At least one arg needs to be specified");let e="The ",i=s.length;switch(s=s.map(o=>`"${o}"`),i){case 1:e+=`${s[0]} argument`;break;case 2:e+=`${s[0]} and ${s[1]} arguments`;break;default:e+=s.slice(0,i-1).join(", "),e+=`, and ${s[i-1]} arguments`;break}return`${e} must be specified`}function Ue(s,e){if(Nt(s,"expected is required"),Nt(typeof e=="string","thing is required"),Array.isArray(s)){let i=s.length;return Nt(i>0,"At least one expected value needs to be specified"),s=s.map(o=>String(o)),i>2?`one of ${e} ${s.slice(0,i-1).join(", ")}, or `+s[i-1]:i===2?`one of ${e} ${s[0]} or ${s[1]}`:`of ${e} ${s[0]}`}else return`of ${e} ${String(s)}`}function is(s,e){return e?"Attempt to write outside buffer bounds":`"${s}" is outside of buffer bounds`}});var fe=H(Dt=>{"use strict";Object.defineProperty(Dt,"__esModule",{value:!0});Dt.ENCODING_UTF8=void 0;Dt.assertEncoding=os;Dt.strToEncoding=ss;var qr=Vt(),ns=Wr();Dt.ENCODING_UTF8="utf8";function os(s){if(s&&!qr.Buffer.isEncoding(s))throw new ns.TypeError("ERR_INVALID_OPT_VALUE_ENCODING",s)}function ss(s,e){return!e||e===Dt.ENCODING_UTF8?s:e==="buffer"?new qr.Buffer(s):new qr.Buffer(s).toString(e)}});var $e=H(de=>{"use strict";Object.defineProperty(de,"__esModule",{value:!0});de.Dirent=void 0;var as=Tt(),cs=fe(),{S_IFMT:ps,S_IFDIR:us,S_IFREG:ls,S_IFBLK:hs,S_IFCHR:fs,S_IFLNK:ds,S_IFIFO:ys,S_IFSOCK:gs}=as.constants,qe=class s{constructor(){this.name="",this.path="",this.parentPath="",this.mode=0}static build(e,i){let o=new s,{mode:a}=e.getNode();return o.name=(0,cs.strToEncoding)(e.getName(),i),o.mode=a,o.path=e.getParentPath(),o.parentPath=o.path,o}_checkModeProperty(e){return(this.mode&ps)===e}isDirectory(){return this._checkModeProperty(us)}isFile(){return this._checkModeProperty(ls)}isBlockDevice(){return this._checkModeProperty(hs)}isCharacterDevice(){return this._checkModeProperty(fs)}isSymbolicLink(){return this._checkModeProperty(ds)}isFIFO(){return this._checkModeProperty(ys)}isSocket(){return this._checkModeProperty(gs)}};de.Dirent=qe;de.default=qe});var $r=H(Ve=>{"use strict";Object.defineProperty(Ve,"__esModule",{value:!0});Ve.createProcess=rn;var ms=()=>{if(typeof process<"u")return process;try{return mt("process")}catch{return}};function rn(){let s=ms()||{};return s.cwd||(s.cwd=()=>"/"),s.emitWarning||(s.emitWarning=(e,i)=>{console.warn(`${i}${i?": ":""}${e}`)}),s.env||(s.env={}),s}Ve.default=rn()});var an=H(ut=>{"use strict";Object.defineProperty(ut,"__esModule",{value:!0});ut.File=ut.Link=ut.Node=ut.SEP=void 0;var Ye=$r(),pt=Vt(),bs=Tt(),sn=mt("events"),ws=Me(),{S_IFMT:ze,S_IFDIR:nn,S_IFREG:Vr,S_IFLNK:on,O_APPEND:vs}=bs.constants,He=()=>{var s,e;return(e=(s=Ye.default.getuid)===null||s===void 0?void 0:s.call(Ye.default))!==null&&e!==void 0?e:0},Ke=()=>{var s,e;return(e=(s=Ye.default.getgid)===null||s===void 0?void 0:s.call(Ye.default))!==null&&e!==void 0?e:0};ut.SEP="/";var zr=class extends sn.EventEmitter{constructor(e,i=438){super(),this._uid=He(),this._gid=Ke(),this._atime=new Date,this._mtime=new Date,this._ctime=new Date,this._perm=438,this.mode=Vr,this._nlink=1,this._perm=i,this.mode|=i,this.ino=e}set ctime(e){this._ctime=e}get ctime(){return this._ctime}set uid(e){this._uid=e,this.ctime=new Date}get uid(){return this._uid}set gid(e){this._gid=e,this.ctime=new Date}get gid(){return this._gid}set atime(e){this._atime=e,this.ctime=new Date}get atime(){return this._atime}set mtime(e){this._mtime=e,this.ctime=new Date}get mtime(){return this._mtime}set perm(e){this._perm=e,this.ctime=new Date}get perm(){return this._perm}set nlink(e){this._nlink=e,this.ctime=new Date}get nlink(){return this._nlink}getString(e="utf8"){return this.atime=new Date,this.getBuffer().toString(e)}setString(e){this.buf=(0,pt.bufferFrom)(e,"utf8"),this.touch()}getBuffer(){return this.atime=new Date,this.buf||this.setBuffer((0,pt.bufferAllocUnsafe)(0)),(0,pt.bufferFrom)(this.buf)}setBuffer(e){this.buf=(0,pt.bufferFrom)(e),this.touch()}getSize(){return this.buf?this.buf.length:0}setModeProperty(e){this.mode=this.mode&~ze|e}setIsFile(){this.setModeProperty(Vr)}setIsDirectory(){this.setModeProperty(nn)}setIsSymlink(){this.setModeProperty(on)}isFile(){return(this.mode&ze)===Vr}isDirectory(){return(this.mode&ze)===nn}isSymlink(){return(this.mode&ze)===on}makeSymlink(e){this.symlink=e,this.setIsSymlink()}write(e,i=0,o=e.length,a=0){if(this.buf||(this.buf=(0,pt.bufferAllocUnsafe)(0)),a+o>this.buf.length){let c=(0,pt.bufferAllocUnsafe)(a+o);this.buf.copy(c,0,0,this.buf.length),this.buf=c}return e.copy(this.buf,a,i,i+o),this.touch(),o}read(e,i=0,o=e.byteLength,a=0){this.atime=new Date,this.buf||(this.buf=(0,pt.bufferAllocUnsafe)(0));let c=o;c>e.byteLength&&(c=e.byteLength),c+a>this.buf.length&&(c=this.buf.length-a);let f=e instanceof pt.Buffer?e:pt.Buffer.from(e.buffer);return this.buf.copy(f,i,a,a+c),c}truncate(e=0){if(!e)this.buf=(0,pt.bufferAllocUnsafe)(0);else if(this.buf||(this.buf=(0,pt.bufferAllocUnsafe)(0)),e<=this.buf.length)this.buf=this.buf.slice(0,e);else{let i=(0,pt.bufferAllocUnsafe)(e);this.buf.copy(i),i.fill(0,this.buf.length),this.buf=i}this.touch()}chmod(e){this.perm=e,this.mode=this.mode&-512|e,this.touch()}chown(e,i){this.uid=e,this.gid=i,this.touch()}touch(){this.mtime=new Date,this.emit("change",this)}canRead(e=He(),i=Ke()){return!!(this.perm&4||i===this.gid&&this.perm&32||e===this.uid&&this.perm&256)}canWrite(e=He(),i=Ke()){return!!(this.perm&2||i===this.gid&&this.perm&16||e===this.uid&&this.perm&128)}canExecute(e=He(),i=Ke()){return!!(this.perm&1||i===this.gid&&this.perm&8||e===this.uid&&this.perm&64)}del(){this.emit("delete",this)}toJSON(){return{ino:this.ino,uid:this.uid,gid:this.gid,atime:this.atime.getTime(),mtime:this.mtime.getTime(),ctime:this.ctime.getTime(),perm:this.perm,mode:this.mode,nlink:this.nlink,symlink:this.symlink,data:this.getString()}}};ut.Node=zr;var Hr=class s extends sn.EventEmitter{get steps(){return this._steps}set steps(e){this._steps=e;for(let[i,o]of this.children.entries())i==="."||i===".."||o?.syncSteps()}constructor(e,i,o){super(),this.children=new Map,this._steps=[],this.ino=0,this.length=0,this.vol=e,this.parent=i,this.name=o,this.syncSteps()}setNode(e){this.node=e,this.ino=e.ino}getNode(){return this.node}createChild(e,i=this.vol.createNode()){let o=new s(this.vol,this,e);return o.setNode(i),i.isDirectory()&&(o.children.set(".",o),o.getNode().nlink++),this.setChild(e,o),o}setChild(e,i=new s(this.vol,this,e)){return this.children.set(e,i),i.parent=this,this.length++,i.getNode().isDirectory()&&(i.children.set("..",this),this.getNode().nlink++),this.getNode().mtime=new Date,this.emit("child:add",i,this),i}deleteChild(e){e.getNode().isDirectory()&&(e.children.delete(".."),this.getNode().nlink--),this.children.delete(e.getName()),this.length--,this.getNode().mtime=new Date,this.emit("child:delete",e,this)}getChild(e){return this.getNode().mtime=new Date,this.children.get(e)}getPath(){return this.steps.join(ut.SEP)}getParentPath(){return this.steps.slice(0,-1).join(ut.SEP)}getName(){return this.steps[this.steps.length-1]}toJSON(){return{steps:this.steps,ino:this.ino,children:Array.from(this.children.keys())}}syncSteps(){this.steps=this.parent?this.parent.steps.concat([this.name]):[this.name]}};ut.Link=Hr;var Kr=class{constructor(e,i,o,a){this.link=e,this.node=i,this.flags=o,this.fd=a,this.position=0,this.flags&vs&&(this.position=this.getSize())}getString(e="utf8"){return this.node.getString()}setString(e){this.node.setString(e)}getBuffer(){return this.node.getBuffer()}setBuffer(e){this.node.setBuffer(e)}getSize(){return this.node.getSize()}truncate(e){this.node.truncate(e)}seekTo(e){this.position=e}stats(){return ws.default.build(this.node)}write(e,i=0,o=e.length,a){typeof a!="number"&&(a=this.position);let c=this.node.write(e,i,o,a);return this.position=a+c,c}read(e,i=0,o=e.byteLength,a){typeof a!="number"&&(a=this.position);let c=this.node.read(e,i,o,a);return this.position=a+c,c}chmod(e){this.node.chmod(e)}chown(e,i){this.node.chown(e,i)}};ut.File=Kr});var cn=H(Gr=>{"use strict";Object.defineProperty(Gr,"__esModule",{value:!0});var Yr;typeof setImmediate=="function"?Yr=setImmediate.bind(typeof globalThis<"u"?globalThis:global):Yr=setTimeout.bind(typeof globalThis<"u"?globalThis:global);Gr.default=Yr});var Xr=H(Jr=>{"use strict";Object.defineProperty(Jr,"__esModule",{value:!0});Jr.default=typeof queueMicrotask=="function"?queueMicrotask:s=>Promise.resolve().then(()=>s()).catch(()=>{})});var pn=H(Zr=>{"use strict";Object.defineProperty(Zr,"__esModule",{value:!0});function _s(s,e,i){let o=setTimeout.apply(typeof globalThis<"u"?globalThis:global,arguments);return o&&typeof o=="object"&&typeof o.unref=="function"&&o.unref(),o}Zr.default=_s});var Qe=H(Ht=>{"use strict";Object.defineProperty(Ht,"__esModule",{value:!0});Ht.FLAGS=Ht.ERRSTR=void 0;var Ss=Tt();Ht.ERRSTR={PATH_STR:"path must be a string or Buffer",FD:"fd must be a file descriptor",MODE_INT:"mode must be an int",CB:"callback must be a function",UID:"uid must be an unsigned int",GID:"gid must be an unsigned int",LEN:"len must be an integer",ATIME:"atime must be an integer",MTIME:"mtime must be an integer",PREFIX:"filename prefix is required",BUFFER:"buffer must be an instance of Buffer or StaticBuffer",OFFSET:"offset must be an integer",LENGTH:"length must be an integer",POSITION:"position must be an integer"};var{O_RDONLY:un,O_WRONLY:Ge,O_RDWR:zt,O_CREAT:Pt,O_EXCL:Je,O_TRUNC:Xe,O_APPEND:Ze,O_SYNC:ln}=Ss.constants,hn;(function(s){s[s.r=un]="r",s[s["r+"]=zt]="r+",s[s.rs=un|ln]="rs",s[s.sr=s.rs]="sr",s[s["rs+"]=zt|ln]="rs+",s[s["sr+"]=s["rs+"]]="sr+",s[s.w=Ge|Pt|Xe]="w",s[s.wx=Ge|Pt|Xe|Je]="wx",s[s.xw=s.wx]="xw",s[s["w+"]=zt|Pt|Xe]="w+",s[s["wx+"]=zt|Pt|Xe|Je]="wx+",s[s["xw+"]=s["wx+"]]="xw+",s[s.a=Ge|Ze|Pt]="a",s[s.ax=Ge|Ze|Pt|Je]="ax",s[s.xa=s.ax]="xa",s[s["a+"]=zt|Ze|Pt]="a+",s[s["ax+"]=zt|Ze|Pt|Je]="ax+",s[s["xa+"]=s["ax+"]]="xa+"})(hn||(Ht.FLAGS=hn={}))});var Yt=H(z=>{"use strict";Object.defineProperty(z,"__esModule",{value:!0});z.unixify=z.getWriteSyncArgs=z.getWriteArgs=z.bufToUint8=z.isWin=void 0;z.promisify=Rs;z.validateCallback=dn;z.modeToNumber=yn;z.nullCheck=gn;z.pathToFilename=ks;z.createError=Vs;z.genRndStr6=mn;z.flagsToNumber=zs;z.isFd=bn;z.validateFd=ei;z.streamToBuffer=Hs;z.dataToBuffer=ri;z.bufferToEncoding=Js;z.isReadableStream=Xs;var Kt=Qe(),Qr=Wr(),ti=Vt(),Es=fe(),fn=Vt(),Os=Xr();z.isWin=process.platform==="win32";function Rs(s,e,i=o=>o){return(...o)=>new Promise((a,c)=>{s[e].bind(s)(...o,(f,g)=>f?c(f):a(i(g)))})}function dn(s){if(typeof s!="function")throw TypeError(Kt.ERRSTR.CB);return s}function Fs(s,e){if(typeof s=="number")return s;if(typeof s=="string")return parseInt(s,8);if(e)return yn(e)}function yn(s,e){let i=Fs(s,e);if(typeof i!="number"||isNaN(i))throw new TypeError(Kt.ERRSTR.MODE_INT);return i}function gn(s,e){if((""+s).indexOf("\0")!==-1){let i=new Error("Path must be a string without null bytes");if(i.code="ENOENT",typeof e!="function")throw i;return(0,Os.default)(()=>{e(i)}),!1}return!0}function Ts(s){if(s.hostname!=="")throw new Qr.TypeError("ERR_INVALID_FILE_URL_HOST",process.platform);let e=s.pathname;for(let i=0;i<e.length;i++)if(e[i]==="%"){let o=e.codePointAt(i+2)|32;if(e[i+1]==="2"&&o===102)throw new Qr.TypeError("ERR_INVALID_FILE_URL_PATH","must not include encoded / characters")}return decodeURIComponent(e)}function ks(s){if(typeof s!="string"&&!ti.Buffer.isBuffer(s)){try{if(!(s instanceof mt("url").URL))throw new TypeError(Kt.ERRSTR.PATH_STR)}catch{throw new TypeError(Kt.ERRSTR.PATH_STR)}s=Ts(s)}let e=String(s);return gn(e),e}var Ns="ENOENT",Ps="EBADF",As="EINVAL",Is="EPERM",Cs="EPROTO",xs="EEXIST",Bs="ENOTDIR",Ds="EMFILE",js="EACCES",Ms="EISDIR",Ls="ENOTEMPTY",Us="ENOSYS",Ws="ERR_FS_EISDIR",qs="ERR_OUT_OF_RANGE";function $s(s,e="",i="",o=""){let a="";switch(i&&(a=` '${i}'`),o&&(a+=` -> '${o}'`),s){case Ns:return`ENOENT: no such file or directory, ${e}${a}`;case Ps:return`EBADF: bad file descriptor, ${e}${a}`;case As:return`EINVAL: invalid argument, ${e}${a}`;case Is:return`EPERM: operation not permitted, ${e}${a}`;case Cs:return`EPROTO: protocol error, ${e}${a}`;case xs:return`EEXIST: file already exists, ${e}${a}`;case Bs:return`ENOTDIR: not a directory, ${e}${a}`;case Ms:return`EISDIR: illegal operation on a directory, ${e}${a}`;case js:return`EACCES: permission denied, ${e}${a}`;case Ls:return`ENOTEMPTY: directory not empty, ${e}${a}`;case Ds:return`EMFILE: too many open files, ${e}${a}`;case Us:return`ENOSYS: function not implemented, ${e}${a}`;case Ws:return`[ERR_FS_EISDIR]: Path is a directory: ${e} returned EISDIR (is a directory) ${i}`;case qs:return`[ERR_OUT_OF_RANGE]: value out of range, ${e}${a}`;default:return`${s}: error occurred, ${e}${a}`}}function Vs(s,e="",i="",o="",a=Error){let c=new a($s(s,e,i,o));return c.code=s,i&&(c.path=i),c}function mn(){let s=(Math.random()+1).toString(36).substring(2,8);return s.length===6?s:mn()}function zs(s){if(typeof s=="number")return s;if(typeof s=="string"){let e=Kt.FLAGS[s];if(typeof e<"u")return e}throw new Qr.TypeError("ERR_INVALID_OPT_VALUE","flags",s)}function bn(s){return s>>>0===s}function ei(s){if(!bn(s))throw TypeError(Kt.ERRSTR.FD)}function Hs(s){let e=[];return new Promise((i,o)=>{s.on("data",a=>e.push(a)),s.on("end",()=>i(ti.Buffer.concat(e))),s.on("error",o)})}function ri(s,e=Es.ENCODING_UTF8){return ti.Buffer.isBuffer(s)?s:s instanceof Uint8Array?(0,fn.bufferFrom)(s):(0,fn.bufferFrom)(String(s),e)}var Ks=s=>new Uint8Array(s.buffer,s.byteOffset,s.byteLength);z.bufToUint8=Ks;var Ys=(s,e,i,o,a,c)=>{ei(s);let f=0,g,w=null,l,h,v=typeof e,I=typeof i,A=typeof o,D=typeof a;v!=="string"?I==="function"?h=i:A==="function"?(f=i|0,h=o):D==="function"?(f=i|0,g=o,h=a):(f=i|0,g=o,w=a,h=c):I==="function"?h=i:A==="function"?(w=i,h=o):D==="function"&&(w=i,l=o,h=a);let L=ri(e,l);v!=="string"?typeof g>"u"&&(g=L.length):(f=0,g=L.length);let F=dn(h);return[s,v==="string",L,f,g,w,F]};z.getWriteArgs=Ys;var Gs=(s,e,i,o,a)=>{ei(s);let c,f,g,w,l=typeof e!="string";l?(f=(i||0)|0,g=o,w=a):(w=i,c=o);let h=ri(e,c);return l?typeof g>"u"&&(g=h.length):(f=0,g=h.length),[s,h,f||0,g,w]};z.getWriteSyncArgs=Gs;function Js(s,e){return!e||e==="buffer"?s:s.toString(e)}function Xs(s){return s!==null&&typeof s=="object"&&typeof s.pipe=="function"&&typeof s.on=="function"&&s.readable===!0}var Zs=(s,e)=>{let i=s[e];return e>0&&(i==="/"||z.isWin&&i==="\\")},Qs=s=>{let e=s.length-1;if(e<2)return s;for(;Zs(s,e);)e--;return s.substr(0,e+1)},ta=(s,e)=>{if(typeof s!="string")throw new TypeError("expected a string");return s=s.replace(/[\\\/]+/g,"/"),e!==!1&&(s=Qs(s)),s},ea=(s,e=!0)=>z.isWin?(s=ta(s,e),s.replace(/^([a-zA-Z]+:|\.\/)/,"")):s;z.unixify=ea});var wn=H(tr=>{"use strict";Object.defineProperty(tr,"__esModule",{value:!0});tr.FileHandle=void 0;var et=Yt(),ii=class{constructor(e,i){this.fs=e,this.fd=i}appendFile(e,i){return(0,et.promisify)(this.fs,"appendFile")(this.fd,e,i)}chmod(e){return(0,et.promisify)(this.fs,"fchmod")(this.fd,e)}chown(e,i){return(0,et.promisify)(this.fs,"fchown")(this.fd,e,i)}close(){return(0,et.promisify)(this.fs,"close")(this.fd)}datasync(){return(0,et.promisify)(this.fs,"fdatasync")(this.fd)}readableWebStream(e){return new ReadableStream({pull:async i=>{let o=await this.readFile();i.enqueue(o),i.close()}})}read(e,i,o,a){return(0,et.promisify)(this.fs,"read",c=>({bytesRead:c,buffer:e}))(this.fd,e,i,o,a)}readv(e,i){return(0,et.promisify)(this.fs,"readv",o=>({bytesRead:o,buffers:e}))(this.fd,e,i)}readFile(e){return(0,et.promisify)(this.fs,"readFile")(this.fd,e)}stat(e){return(0,et.promisify)(this.fs,"fstat")(this.fd,e)}sync(){return(0,et.promisify)(this.fs,"fsync")(this.fd)}truncate(e){return(0,et.promisify)(this.fs,"ftruncate")(this.fd,e)}utimes(e,i){return(0,et.promisify)(this.fs,"futimes")(this.fd,e,i)}write(e,i,o,a){return(0,et.promisify)(this.fs,"write",c=>({bytesWritten:c,buffer:e}))(this.fd,e,i,o,a)}writev(e,i){return(0,et.promisify)(this.fs,"writev",o=>({bytesWritten:o,buffers:e}))(this.fd,e,i)}writeFile(e,i){return(0,et.promisify)(this.fs,"writeFile")(this.fd,e,i)}};tr.FileHandle=ii});var vn=H(er=>{"use strict";Object.defineProperty(er,"__esModule",{value:!0});er.FsPromises=void 0;var q=Yt(),ra=Tt(),ni=class{constructor(e,i){this.fs=e,this.FileHandle=i,this.constants=ra.constants,this.cp=(0,q.promisify)(this.fs,"cp"),this.opendir=(0,q.promisify)(this.fs,"opendir"),this.statfs=(0,q.promisify)(this.fs,"statfs"),this.lutimes=(0,q.promisify)(this.fs,"lutimes"),this.access=(0,q.promisify)(this.fs,"access"),this.chmod=(0,q.promisify)(this.fs,"chmod"),this.chown=(0,q.promisify)(this.fs,"chown"),this.copyFile=(0,q.promisify)(this.fs,"copyFile"),this.lchmod=(0,q.promisify)(this.fs,"lchmod"),this.lchown=(0,q.promisify)(this.fs,"lchown"),this.link=(0,q.promisify)(this.fs,"link"),this.lstat=(0,q.promisify)(this.fs,"lstat"),this.mkdir=(0,q.promisify)(this.fs,"mkdir"),this.mkdtemp=(0,q.promisify)(this.fs,"mkdtemp"),this.readdir=(0,q.promisify)(this.fs,"readdir"),this.readlink=(0,q.promisify)(this.fs,"readlink"),this.realpath=(0,q.promisify)(this.fs,"realpath"),this.rename=(0,q.promisify)(this.fs,"rename"),this.rmdir=(0,q.promisify)(this.fs,"rmdir"),this.rm=(0,q.promisify)(this.fs,"rm"),this.stat=(0,q.promisify)(this.fs,"stat"),this.symlink=(0,q.promisify)(this.fs,"symlink"),this.truncate=(0,q.promisify)(this.fs,"truncate"),this.unlink=(0,q.promisify)(this.fs,"unlink"),this.utimes=(0,q.promisify)(this.fs,"utimes"),this.readFile=(o,a)=>(0,q.promisify)(this.fs,"readFile")(o instanceof this.FileHandle?o.fd:o,a),this.appendFile=(o,a,c)=>(0,q.promisify)(this.fs,"appendFile")(o instanceof this.FileHandle?o.fd:o,a,c),this.open=(o,a="r",c)=>(0,q.promisify)(this.fs,"open",f=>new this.FileHandle(this.fs,f))(o,a,c),this.writeFile=(o,a,c)=>((0,q.isReadableStream)(a)?(0,q.streamToBuffer)(a):Promise.resolve(a)).then(g=>(0,q.promisify)(this.fs,"writeFile")(o instanceof this.FileHandle?o.fd:o,g,c)),this.watch=()=>{throw new Error("Not implemented")}}};er.FsPromises=ni});var Yn={};Wo(Yn,{__addDisposableResource:()=>zn,__assign:()=>rr,__asyncDelegator:()=>jn,__asyncGenerator:()=>Dn,__asyncValues:()=>Mn,__await:()=>Gt,__awaiter:()=>Pn,__classPrivateFieldGet:()=>qn,__classPrivateFieldIn:()=>Vn,__classPrivateFieldSet:()=>$n,__createBinding:()=>nr,__decorate:()=>En,__disposeResources:()=>Hn,__esDecorate:()=>Rn,__exportStar:()=>In,__extends:()=>_n,__generator:()=>An,__importDefault:()=>Wn,__importStar:()=>Un,__makeTemplateObject:()=>Ln,__metadata:()=>Nn,__param:()=>On,__propKey:()=>Tn,__read:()=>ai,__rest:()=>Sn,__rewriteRelativeImportExtension:()=>Kn,__runInitializers:()=>Fn,__setFunctionName:()=>kn,__spread:()=>Cn,__spreadArray:()=>Bn,__spreadArrays:()=>xn,__values:()=>ir,default:()=>oa});function _n(s,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");oi(s,e);function i(){this.constructor=s}s.prototype=e===null?Object.create(e):(i.prototype=e.prototype,new i)}function Sn(s,e){var i={};for(var o in s)Object.prototype.hasOwnProperty.call(s,o)&&e.indexOf(o)<0&&(i[o]=s[o]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,o=Object.getOwnPropertySymbols(s);a<o.length;a++)e.indexOf(o[a])<0&&Object.prototype.propertyIsEnumerable.call(s,o[a])&&(i[o[a]]=s[o[a]]);return i}function En(s,e,i,o){var a=arguments.length,c=a<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,i):o,f;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")c=Reflect.decorate(s,e,i,o);else for(var g=s.length-1;g>=0;g--)(f=s[g])&&(c=(a<3?f(c):a>3?f(e,i,c):f(e,i))||c);return a>3&&c&&Object.defineProperty(e,i,c),c}function On(s,e){return function(i,o){e(i,o,s)}}function Rn(s,e,i,o,a,c){function f(m){if(m!==void 0&&typeof m!="function")throw new TypeError("Function expected");return m}for(var g=o.kind,w=g==="getter"?"get":g==="setter"?"set":"value",l=!e&&s?o.static?s:s.prototype:null,h=e||(l?Object.getOwnPropertyDescriptor(l,o.name):{}),v,I=!1,A=i.length-1;A>=0;A--){var D={};for(var L in o)D[L]=L==="access"?{}:o[L];for(var L in o.access)D.access[L]=o.access[L];D.addInitializer=function(m){if(I)throw new TypeError("Cannot add initializers after decoration has completed");c.push(f(m||null))};var F=(0,i[A])(g==="accessor"?{get:h.get,set:h.set}:h[w],D);if(g==="accessor"){if(F===void 0)continue;if(F===null||typeof F!="object")throw new TypeError("Object expected");(v=f(F.get))&&(h.get=v),(v=f(F.set))&&(h.set=v),(v=f(F.init))&&a.unshift(v)}else(v=f(F))&&(g==="field"?a.unshift(v):h[w]=v)}l&&Object.defineProperty(l,o.name,h),I=!0}function Fn(s,e,i){for(var o=arguments.length>2,a=0;a<e.length;a++)i=o?e[a].call(s,i):e[a].call(s);return o?i:void 0}function Tn(s){return typeof s=="symbol"?s:"".concat(s)}function kn(s,e,i){return typeof e=="symbol"&&(e=e.description?"[".concat(e.description,"]"):""),Object.defineProperty(s,"name",{configurable:!0,value:i?"".concat(i," ",e):e})}function Nn(s,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(s,e)}function Pn(s,e,i,o){function a(c){return c instanceof i?c:new i(function(f){f(c)})}return new(i||(i=Promise))(function(c,f){function g(h){try{l(o.next(h))}catch(v){f(v)}}function w(h){try{l(o.throw(h))}catch(v){f(v)}}function l(h){h.done?c(h.value):a(h.value).then(g,w)}l((o=o.apply(s,e||[])).next())})}function An(s,e){var i={label:0,sent:function(){if(c[0]&1)throw c[1];return c[1]},trys:[],ops:[]},o,a,c,f=Object.create((typeof Iterator=="function"?Iterator:Object).prototype);return f.next=g(0),f.throw=g(1),f.return=g(2),typeof Symbol=="function"&&(f[Symbol.iterator]=function(){return this}),f;function g(l){return function(h){return w([l,h])}}function w(l){if(o)throw new TypeError("Generator is already executing.");for(;f&&(f=0,l[0]&&(i=0)),i;)try{if(o=1,a&&(c=l[0]&2?a.return:l[0]?a.throw||((c=a.return)&&c.call(a),0):a.next)&&!(c=c.call(a,l[1])).done)return c;switch(a=0,c&&(l=[l[0]&2,c.value]),l[0]){case 0:case 1:c=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,a=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(c=i.trys,!(c=c.length>0&&c[c.length-1])&&(l[0]===6||l[0]===2)){i=0;continue}if(l[0]===3&&(!c||l[1]>c[0]&&l[1]<c[3])){i.label=l[1];break}if(l[0]===6&&i.label<c[1]){i.label=c[1],c=l;break}if(c&&i.label<c[2]){i.label=c[2],i.ops.push(l);break}c[2]&&i.ops.pop(),i.trys.pop();continue}l=e.call(s,i)}catch(h){l=[6,h],a=0}finally{o=c=0}if(l[0]&5)throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}}function In(s,e){for(var i in s)i!=="default"&&!Object.prototype.hasOwnProperty.call(e,i)&&nr(e,s,i)}function ir(s){var e=typeof Symbol=="function"&&Symbol.iterator,i=e&&s[e],o=0;if(i)return i.call(s);if(s&&typeof s.length=="number")return{next:function(){return s&&o>=s.length&&(s=void 0),{value:s&&s[o++],done:!s}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function ai(s,e){var i=typeof Symbol=="function"&&s[Symbol.iterator];if(!i)return s;var o=i.call(s),a,c=[],f;try{for(;(e===void 0||e-- >0)&&!(a=o.next()).done;)c.push(a.value)}catch(g){f={error:g}}finally{try{a&&!a.done&&(i=o.return)&&i.call(o)}finally{if(f)throw f.error}}return c}function Cn(){for(var s=[],e=0;e<arguments.length;e++)s=s.concat(ai(arguments[e]));return s}function xn(){for(var s=0,e=0,i=arguments.length;e<i;e++)s+=arguments[e].length;for(var o=Array(s),a=0,e=0;e<i;e++)for(var c=arguments[e],f=0,g=c.length;f<g;f++,a++)o[a]=c[f];return o}function Bn(s,e,i){if(i||arguments.length===2)for(var o=0,a=e.length,c;o<a;o++)(c||!(o in e))&&(c||(c=Array.prototype.slice.call(e,0,o)),c[o]=e[o]);return s.concat(c||Array.prototype.slice.call(e))}function Gt(s){return this instanceof Gt?(this.v=s,this):new Gt(s)}function Dn(s,e,i){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var o=i.apply(s,e||[]),a,c=[];return a=Object.create((typeof AsyncIterator=="function"?AsyncIterator:Object).prototype),g("next"),g("throw"),g("return",f),a[Symbol.asyncIterator]=function(){return this},a;function f(A){return function(D){return Promise.resolve(D).then(A,v)}}function g(A,D){o[A]&&(a[A]=function(L){return new Promise(function(F,m){c.push([A,L,F,m])>1||w(A,L)})},D&&(a[A]=D(a[A])))}function w(A,D){try{l(o[A](D))}catch(L){I(c[0][3],L)}}function l(A){A.value instanceof Gt?Promise.resolve(A.value.v).then(h,v):I(c[0][2],A)}function h(A){w("next",A)}function v(A){w("throw",A)}function I(A,D){A(D),c.shift(),c.length&&w(c[0][0],c[0][1])}}function jn(s){var e,i;return e={},o("next"),o("throw",function(a){throw a}),o("return"),e[Symbol.iterator]=function(){return this},e;function o(a,c){e[a]=s[a]?function(f){return(i=!i)?{value:Gt(s[a](f)),done:!1}:c?c(f):f}:c}}function Mn(s){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=s[Symbol.asyncIterator],i;return e?e.call(s):(s=typeof ir=="function"?ir(s):s[Symbol.iterator](),i={},o("next"),o("throw"),o("return"),i[Symbol.asyncIterator]=function(){return this},i);function o(c){i[c]=s[c]&&function(f){return new Promise(function(g,w){f=s[c](f),a(g,w,f.done,f.value)})}}function a(c,f,g,w){Promise.resolve(w).then(function(l){c({value:l,done:g})},f)}}function Ln(s,e){return Object.defineProperty?Object.defineProperty(s,"raw",{value:e}):s.raw=e,s}function Un(s){if(s&&s.__esModule)return s;var e={};if(s!=null)for(var i=si(s),o=0;o<i.length;o++)i[o]!=="default"&&nr(e,s,i[o]);return ia(e,s),e}function Wn(s){return s&&s.__esModule?s:{default:s}}function qn(s,e,i,o){if(i==="a"&&!o)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?s!==e||!o:!e.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?o:i==="a"?o.call(s):o?o.value:e.get(s)}function $n(s,e,i,o,a){if(o==="m")throw new TypeError("Private method is not writable");if(o==="a"&&!a)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?s!==e||!a:!e.has(s))throw new TypeError("Cannot write private member to an object whose class did not declare it");return o==="a"?a.call(s,i):a?a.value=i:e.set(s,i),i}function Vn(s,e){if(e===null||typeof e!="object"&&typeof e!="function")throw new TypeError("Cannot use 'in' operator on non-object");return typeof s=="function"?e===s:s.has(e)}function zn(s,e,i){if(e!=null){if(typeof e!="object"&&typeof e!="function")throw new TypeError("Object expected.");var o,a;if(i){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");o=e[Symbol.asyncDispose]}if(o===void 0){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");o=e[Symbol.dispose],i&&(a=o)}if(typeof o!="function")throw new TypeError("Object not disposable.");a&&(o=function(){try{a.call(this)}catch(c){return Promise.reject(c)}}),s.stack.push({value:e,dispose:o,async:i})}else i&&s.stack.push({async:!0});return e}function Hn(s){function e(c){s.error=s.hasError?new na(c,s.error,"An error was suppressed during disposal."):c,s.hasError=!0}var i,o=0;function a(){for(;i=s.stack.pop();)try{if(!i.async&&o===1)return o=0,s.stack.push(i),Promise.resolve().then(a);if(i.dispose){var c=i.dispose.call(i.value);if(i.async)return o|=2,Promise.resolve(c).then(a,function(f){return e(f),a()})}else o|=1}catch(f){e(f)}if(o===1)return s.hasError?Promise.reject(s.error):Promise.resolve();if(s.hasError)throw s.error}return a()}function Kn(s,e){return typeof s=="string"&&/^\.\.?\//.test(s)?s.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i,function(i,o,a,c,f){return o?e?".jsx":".js":a&&(!c||!f)?i:a+c+"."+f.toLowerCase()+"js"}):s}var oi,rr,nr,ia,si,na,oa,Gn=Uo(()=>{oi=function(s,e){return oi=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(i,o){i.__proto__=o}||function(i,o){for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(i[a]=o[a])},oi(s,e)};rr=function(){return rr=Object.assign||function(e){for(var i,o=1,a=arguments.length;o<a;o++){i=arguments[o];for(var c in i)Object.prototype.hasOwnProperty.call(i,c)&&(e[c]=i[c])}return e},rr.apply(this,arguments)};nr=Object.create?function(s,e,i,o){o===void 0&&(o=i);var a=Object.getOwnPropertyDescriptor(e,i);(!a||("get"in a?!e.__esModule:a.writable||a.configurable))&&(a={enumerable:!0,get:function(){return e[i]}}),Object.defineProperty(s,o,a)}:function(s,e,i,o){o===void 0&&(o=i),s[o]=e[i]};ia=Object.create?function(s,e){Object.defineProperty(s,"default",{enumerable:!0,value:e})}:function(s,e){s.default=e},si=function(s){return si=Object.getOwnPropertyNames||function(e){var i=[];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(i[i.length]=o);return i},si(s)};na=typeof SuppressedError=="function"?SuppressedError:function(s,e,i){var o=new Error(i);return o.name="SuppressedError",o.error=s,o.suppressed=e,o};oa={__extends:_n,__assign:rr,__rest:Sn,__decorate:En,__param:On,__esDecorate:Rn,__runInitializers:Fn,__propKey:Tn,__setFunctionName:kn,__metadata:Nn,__awaiter:Pn,__generator:An,__createBinding:nr,__exportStar:In,__values:ir,__read:ai,__spread:Cn,__spreadArrays:xn,__spreadArray:Bn,__await:Gt,__asyncGenerator:Dn,__asyncDelegator:jn,__asyncValues:Mn,__makeTemplateObject:Ln,__importStar:Un,__importDefault:Wn,__classPrivateFieldGet:qn,__classPrivateFieldSet:$n,__classPrivateFieldIn:Vn,__addDisposableResource:zn,__disposeResources:Hn,__rewriteRelativeImportExtension:Kn}});var Jn=H(or=>{"use strict";Object.defineProperty(or,"__esModule",{value:!0});or.printTree=void 0;var sa=(s="",e)=>{let i="",o=e.length-1;for(;o>=0&&!e[o];o--);for(let a=0;a<=o;a++){let c=e[a];if(!c)continue;let f=a===o,g=c(s+(f?" ":"\u2502")+"  "),w=g?f?"\u2514\u2500":"\u251C\u2500":"\u2502";i+=`
`+s+w+(g?" "+g:"")}return i};or.printTree=sa});var Xn=H(sr=>{"use strict";Object.defineProperty(sr,"__esModule",{value:!0});sr.printBinary=void 0;var aa=(s="",e)=>{let i=e[0],o=e[1],a="";return i&&(a+=`
`+s+"\u2190 "+i(s+"  ")),o&&(a+=`
`+s+"\u2192 "+o(s+"  ")),a};sr.printBinary=aa});var Qn=H(ar=>{"use strict";Object.defineProperty(ar,"__esModule",{value:!0});var Zn=(Gn(),qo(Yn));Zn.__exportStar(Jn(),ar);Zn.__exportStar(Xn(),ar)});var to=H(tt=>{"use strict";Object.defineProperty(tt,"__esModule",{value:!0});tt.newNotAllowedError=tt.newTypeMismatchError=tt.newNotFoundError=tt.assertCanWrite=tt.assertName=tt.basename=tt.ctx=void 0;var ca=(s={})=>Object.assign({separator:"/",syncHandleAllowed:!1,mode:"read"},s);tt.ctx=ca;var pa=(s,e)=>{s[s.length-1]===e&&(s=s.slice(0,-1));let i=s.lastIndexOf(e);return i===-1?s:s.slice(i+1)};tt.basename=pa;var ua=/^(\.{1,2})$|^(.*([\/\\]).*)$/,la=(s,e,i)=>{if(!s||ua.test(s))throw new TypeError(`Failed to execute '${e}' on '${i}': Name is not allowed.`)};tt.assertName=la;var ha=s=>{if(s!=="readwrite")throw new DOMException("The request is not allowed by the user agent or the platform in the current context.","NotAllowedError")};tt.assertCanWrite=ha;var fa=()=>new DOMException("A requested file or directory could not be found at the time an operation was processed.","NotFoundError");tt.newNotFoundError=fa;var da=()=>new DOMException("The path supplied exists, but was not an entry of requested type.","TypeMismatchError");tt.newTypeMismatchError=da;var ya=()=>new DOMException("Permission not granted.","NotAllowedError");tt.newNotAllowedError=ya});var eo=H(ye=>{"use strict";Object.defineProperty(ye,"__esModule",{value:!0});ye.toTreeSync=void 0;var ga=Qn(),ma=to(),ba=(s,e={})=>{var i;let o=e.separator||"/",a=e.dir||o;a[a.length-1]!==o&&(a+=o);let c=e.tab||"",f=(i=e.depth)!==null&&i!==void 0?i:10,g=" (...)";if(f>0){let l=s.readdirSync(a,{withFileTypes:!0});g=(0,ga.printTree)(c,l.map(h=>v=>h.isDirectory()?(0,ye.toTreeSync)(s,{dir:a+h.name,depth:f-1,tab:v}):h.isSymbolicLink()?""+h.name+" \u2192 "+s.readlinkSync(a+h.name):""+h.name))}return(0,ma.basename)(a,o)+o+g};ye.toTreeSync=ba});var oo=H(x=>{"use strict";Object.defineProperty(x,"__esModule",{value:!0});x.getWriteFileOptions=x.writeFileDefaults=x.getRealpathOptsAndCb=x.getRealpathOptions=x.getStatOptsAndCb=x.getStatOptions=x.getAppendFileOptsAndCb=x.getAppendFileOpts=x.getOpendirOptsAndCb=x.getOpendirOptions=x.getReaddirOptsAndCb=x.getReaddirOptions=x.getReadFileOptions=x.getRmOptsAndCb=x.getRmdirOptions=x.getDefaultOptsAndCb=x.getDefaultOpts=x.optsDefaults=x.getMkdirOptions=void 0;x.getOptions=no;x.optsGenerator=Ot;x.optsAndCbGenerator=jt;var cr=Qe(),wa=fe(),io=Yt(),ro={mode:511,recursive:!1},va=s=>typeof s=="number"?Object.assign({},ro,{mode:s}):Object.assign({},ro,s);x.getMkdirOptions=va;var _a=s=>`Expected options to be either an object or a string, but got ${s} instead`;function no(s,e){let i;if(e){let o=typeof e;switch(o){case"string":i=Object.assign({},s,{encoding:e});break;case"object":i=Object.assign({},s,e);break;default:throw TypeError(_a(o))}}else return s;return i.encoding!=="buffer"&&(0,wa.assertEncoding)(i.encoding),i}function Ot(s){return e=>no(s,e)}function jt(s){return(e,i)=>typeof e=="function"?[s(),e]:[s(e),(0,io.validateCallback)(i)]}x.optsDefaults={encoding:"utf8"};x.getDefaultOpts=Ot(x.optsDefaults);x.getDefaultOptsAndCb=jt(x.getDefaultOpts);var Sa={recursive:!1},Ea=s=>Object.assign({},Sa,s);x.getRmdirOptions=Ea;var Oa=Ot(x.optsDefaults);x.getRmOptsAndCb=jt(Oa);var Ra={flag:"r"};x.getReadFileOptions=Ot(Ra);var Fa={encoding:"utf8",recursive:!1,withFileTypes:!1};x.getReaddirOptions=Ot(Fa);x.getReaddirOptsAndCb=jt(x.getReaddirOptions);var Ta={encoding:"utf8",bufferSize:32,recursive:!1};x.getOpendirOptions=Ot(Ta);x.getOpendirOptsAndCb=jt(x.getOpendirOptions);var ka={encoding:"utf8",mode:438,flag:cr.FLAGS[cr.FLAGS.a]};x.getAppendFileOpts=Ot(ka);x.getAppendFileOptsAndCb=jt(x.getAppendFileOpts);var Na={bigint:!1},Pa=(s={})=>Object.assign({},Na,s);x.getStatOptions=Pa;var Aa=(s,e)=>typeof s=="function"?[(0,x.getStatOptions)(),s]:[(0,x.getStatOptions)(s),(0,io.validateCallback)(e)];x.getStatOptsAndCb=Aa;var Ia=x.optsDefaults;x.getRealpathOptions=Ot(Ia);x.getRealpathOptsAndCb=jt(x.getRealpathOptions);x.writeFileDefaults={encoding:"utf8",mode:438,flag:cr.FLAGS[cr.FLAGS.w]};x.getWriteFileOptions=Ot(x.writeFileDefaults)});var so=H(pr=>{"use strict";Object.defineProperty(pr,"__esModule",{value:!0});pr.Dir=void 0;var Ca=Yt(),xa=$e(),ci=class{constructor(e,i){this.link=e,this.options=i,this.iteratorInfo=[],this.path=e.getParentPath(),this.iteratorInfo.push(e.children[Symbol.iterator]())}wrapAsync(e,i,o){(0,Ca.validateCallback)(o),setImmediate(()=>{let a;try{a=e.apply(this,i)}catch(c){o(c);return}o(null,a)})}isFunction(e){return typeof e=="function"}promisify(e,i){return(...o)=>new Promise((a,c)=>{this.isFunction(e[i])?e[i].bind(e)(...o,(f,g)=>{f&&c(f),a(g)}):c("Not a function")})}closeBase(){}readBase(e){let i,o,a,c;do{do if({done:i,value:o}=e[e.length-1].next(),!i)[a,c]=o;else break;while(a==="."||a==="..");if(i){if(e.pop(),e.length===0)break;i=!1}else return this.options.recursive&&c.children.size&&e.push(c.children[Symbol.iterator]()),xa.default.build(c,this.options.encoding)}while(!i);return null}closeBaseAsync(e){this.wrapAsync(this.closeBase,[],e)}close(e){if(typeof e=="function")this.closeBaseAsync(e);else return this.promisify(this,"closeBaseAsync")()}closeSync(){this.closeBase()}readBaseAsync(e){this.wrapAsync(this.readBase,[this.iteratorInfo],e)}read(e){if(typeof e=="function")this.readBaseAsync(e);else return this.promisify(this,"readBaseAsync")()}readSync(){return this.readBase(this.iteratorInfo)}[Symbol.asyncIterator](){let e=[],i=this;e.push(i.link.children[Symbol.iterator]());let o={readBaseAsync(a){i.wrapAsync(i.readBase,[e],a)}};return{async next(){let a=await i.promisify(o,"readBaseAsync")();return a!==null?{done:!1,value:a}:{done:!0,value:void 0}},[Symbol.asyncIterator](){throw new Error("Not implemented")}}}};pr.Dir=ci});var mo=H(it=>{"use strict";Object.defineProperty(it,"__esModule",{value:!0});it.FSWatcher=it.StatWatcher=it.Volume=void 0;it.filenameToSteps=bt;it.pathToSteps=sc;it.dataToStr=ac;it.toUnixTimestamp=at;var vt=mt("path"),ur=an(),pi=Me(),Ba=$e(),Ct=Vt(),Jt=cn(),yr=Xr(),ho=$r(),Da=pn(),gr=mt("stream"),ja=Tt(),fo=mt("events"),Lt=fe(),Ma=wn(),yo=mt("util"),La=vn(),Ua=eo(),me=Qe(),U=oo(),_=Yt(),Wa=so(),qa=vt.resolve,{O_RDONLY:ui,O_WRONLY:ao,O_RDWR:$a,O_CREAT:co,O_EXCL:Va,O_TRUNC:za,O_APPEND:Ha,O_DIRECTORY:Ka,O_SYMLINK:po,F_OK:uo,COPYFILE_EXCL:Ya,COPYFILE_FICLONE_FORCE:Ga}=ja.constants,{sep:lt,relative:be,join:Ja,dirname:Xa}=vt.posix?vt.posix:vt,Za=128,Qa="EPERM",At="ENOENT",li="EBADF",tc="EINVAL",Mt="EEXIST",It="ENOTDIR",ec="EMFILE",wt="EACCES",lo="EISDIR",rc="ENOTEMPTY",ic="ENOSYS",nc="ERR_FS_EISDIR",oc="ERR_OUT_OF_RANGE",lr=(s,e=ho.default.cwd())=>qa(e,s);if(_.isWin){let s=lr;lr=(e,i)=>(0,_.unixify)(s(e,i))}function bt(s,e){let o=lr(s,e).substring(1);return o?o.split(lt):[]}function sc(s){return bt((0,_.pathToFilename)(s))}function ac(s,e=Lt.ENCODING_UTF8){return Ct.Buffer.isBuffer(s)?s.toString(e):s instanceof Uint8Array?(0,Ct.bufferFrom)(s).toString(e):String(s)}function at(s){if(typeof s=="string"&&+s==s)return+s;if(s instanceof Date)return s.getTime()/1e3;if(isFinite(s))return s<0?Date.now()/1e3:s;throw new Error("Cannot parse time: "+s)}function Xt(s){if(typeof s!="number")throw TypeError(me.ERRSTR.UID)}function Zt(s){if(typeof s!="number")throw TypeError(me.ERRSTR.GID)}function cc(s){let e={};function i(o,a){for(let c in a){let f=a[c],g=Ja(o,c);typeof f=="string"||f instanceof Ct.Buffer?e[g]=f:typeof f=="object"&&f!==null&&Object.keys(f).length>0?i(g,f):e[g]=null}}return i("",s),e}var ge=()=>{throw new Error("Not implemented")},hr=class s{static fromJSON(e,i){let o=new s;return o.fromJSON(e,i),o}static fromNestedJSON(e,i){let o=new s;return o.fromNestedJSON(e,i),o}get promises(){if(this.promisesApi===null)throw new Error("Promise is not supported in this environment.");return this.promisesApi}constructor(e={}){this.ino=0,this.inodes={},this.releasedInos=[],this.fds={},this.releasedFds=[],this.maxFiles=1e4,this.openFiles=0,this.promisesApi=new La.FsPromises(this,Ma.FileHandle),this.statWatchers={},this.cpSync=ge,this.statfsSync=ge,this.cp=ge,this.statfs=ge,this.openAsBlob=ge,this.props=Object.assign({Node:ur.Node,Link:ur.Link,File:ur.File},e);let i=this.createLink();i.setNode(this.createNode(!0));let o=this;this.StatWatcher=class extends fr{constructor(){super(o)}};let a=_t;this.ReadStream=class extends a{constructor(...f){super(o,...f)}};let c=ft;this.WriteStream=class extends c{constructor(...f){super(o,...f)}},this.FSWatcher=class extends dr{constructor(){super(o)}},i.setChild(".",i),i.getNode().nlink++,i.setChild("..",i),i.getNode().nlink++,this.root=i}createLink(e,i,o=!1,a){if(!e)return new this.props.Link(this,null,"");if(!i)throw new Error("createLink: name cannot be empty");return e.createChild(i,this.createNode(o,a))}deleteLink(e){let i=e.parent;return i?(i.deleteChild(e),!0):!1}newInoNumber(){let e=this.releasedInos.pop();return e||(this.ino=(this.ino+1)%4294967295,this.ino)}newFdNumber(){let e=this.releasedFds.pop();return typeof e=="number"?e:s.fd--}createNode(e=!1,i){i??(i=e?511:438);let o=new this.props.Node(this.newInoNumber(),i);return e&&o.setIsDirectory(),this.inodes[o.ino]=o,o}deleteNode(e){e.del(),delete this.inodes[e.ino],this.releasedInos.push(e.ino)}walk(e,i=!1,o=!1,a=!1,c){var f;let g,w;e instanceof ur.Link?(g=e.steps,w=lt+g.join(lt)):typeof e=="string"?(g=bt(e),w=e):(g=e,w=lt+g.join(lt));let l=this.root,h=0;for(;h<g.length;){let v=l.getNode();if(v.isDirectory()){if(a&&!v.canExecute())throw(0,_.createError)(wt,c,w)}else if(h<g.length-1)throw(0,_.createError)(It,c,w);if(l=(f=l.getChild(g[h]))!==null&&f!==void 0?f:null,!l){if(o)throw(0,_.createError)(At,c,w);return null}if(v=l?.getNode(),i&&v.isSymlink()){g=v.symlink.concat(g.slice(h+1)),l=this.root,h=0;continue}h++}return l}getLink(e){return this.walk(e,!1,!1,!1)}getLinkOrThrow(e,i){return this.walk(e,!1,!0,!0,i)}getResolvedLink(e){return this.walk(e,!0,!1,!1)}getResolvedLinkOrThrow(e,i){return this.walk(e,!0,!0,!0,i)}resolveSymlinks(e){return this.getResolvedLink(e.steps.slice(1))}getLinkAsDirOrThrow(e,i){let o=this.getLinkOrThrow(e,i);if(!o.getNode().isDirectory())throw(0,_.createError)(It,i,e);return o}getLinkParent(e){return this.getLink(e.slice(0,-1))}getLinkParentAsDirOrThrow(e,i){let o=(e instanceof Array?e:bt(e)).slice(0,-1),a=lt+o.join(lt),c=this.getLinkOrThrow(a,i);if(!c.getNode().isDirectory())throw(0,_.createError)(It,i,a);return c}getFileByFd(e){return this.fds[String(e)]}getFileByFdOrThrow(e,i){if(!(0,_.isFd)(e))throw TypeError(me.ERRSTR.FD);let o=this.getFileByFd(e);if(!o)throw(0,_.createError)(li,i);return o}wrapAsync(e,i,o){(0,_.validateCallback)(o),(0,Jt.default)(()=>{let a;try{a=e.apply(this,i)}catch(c){o(c);return}o(null,a)})}_toJSON(e=this.root,i={},o,a){let c=!0,f=e.children;e.getNode().isFile()&&(f=new Map([[e.getName(),e.parent.getChild(e.getName())]]),e=e.parent);for(let w of f.keys()){if(w==="."||w==="..")continue;c=!1;let l=e.getChild(w);if(!l)throw new Error("_toJSON: unexpected undefined");let h=l.getNode();if(h.isFile()){let v=l.getPath();o&&(v=be(o,v)),i[v]=a?h.getBuffer():h.getString()}else h.isDirectory()&&this._toJSON(l,i,o,a)}let g=e.getPath();return o&&(g=be(o,g)),g&&c&&(i[g]=null),i}toJSON(e,i={},o=!1,a=!1){let c=[];if(e){Array.isArray(e)||(e=[e]);for(let f of e){let g=(0,_.pathToFilename)(f),w=this.getResolvedLink(g);w&&c.push(w)}}else c.push(this.root);if(!c.length)return i;for(let f of c)this._toJSON(f,i,o?f.getPath():"",a);return i}fromJSON(e,i=ho.default.cwd()){for(let o in e){let a=e[o];if(o=lr(o,i),typeof a=="string"||a instanceof Ct.Buffer){let c=Xa(o);this.mkdirpBase(c,511),this.writeFileSync(o,a)}else this.mkdirpBase(o,511)}}fromNestedJSON(e,i){this.fromJSON(cc(e),i)}toTree(e={separator:lt}){return(0,Ua.toTreeSync)(this,e)}reset(){this.ino=0,this.inodes={},this.releasedInos=[],this.fds={},this.releasedFds=[],this.openFiles=0,this.root=this.createLink(),this.root.setNode(this.createNode(!0))}mountSync(e,i){this.fromJSON(i,e)}openLink(e,i,o=!0){if(this.openFiles>=this.maxFiles)throw(0,_.createError)(ec,"open",e.getPath());let a=e;o&&(a=this.getResolvedLinkOrThrow(e.getPath(),"open"));let c=a.getNode();if(c.isDirectory()){if((i&(ui|$a|ao))!==ui)throw(0,_.createError)(lo,"open",e.getPath())}else if(i&Ka)throw(0,_.createError)(It,"open",e.getPath());if(!(i&ao)&&!c.canRead()||!(i&ui)&&!c.canWrite())throw(0,_.createError)(wt,"open",e.getPath());let f=new this.props.File(e,c,i,this.newFdNumber());return this.fds[f.fd]=f,this.openFiles++,i&za&&f.truncate(),f}openFile(e,i,o,a=!0){let c=bt(e),f;try{if(f=a?this.getResolvedLinkOrThrow(e,"open"):this.getLinkOrThrow(e,"open"),f&&i&co&&i&Va)throw(0,_.createError)(Mt,"open",e)}catch(g){if(g.code===At&&i&co){let w=vt.dirname(e),l=this.getResolvedLinkOrThrow(w),h=l.getNode();if(!h.isDirectory())throw(0,_.createError)(It,"open",e);if(!h.canExecute()||!h.canWrite())throw(0,_.createError)(wt,"open",e);o??(o=438),f=this.createLink(l,c[c.length-1],!1,o)}else throw g}if(f)return this.openLink(f,i,a);throw(0,_.createError)(At,"open",e)}openBase(e,i,o,a=!0){let c=this.openFile(e,i,o,a);if(!c)throw(0,_.createError)(At,"open",e);return c.fd}openSync(e,i,o=438){let a=(0,_.modeToNumber)(o),c=(0,_.pathToFilename)(e),f=(0,_.flagsToNumber)(i);return this.openBase(c,f,a,!(f&po))}open(e,i,o,a){let c=o,f=a;typeof o=="function"&&(c=438,f=o),c=c||438;let g=(0,_.modeToNumber)(c),w=(0,_.pathToFilename)(e),l=(0,_.flagsToNumber)(i);this.wrapAsync(this.openBase,[w,l,g,!(l&po)],f)}closeFile(e){this.fds[e.fd]&&(this.openFiles--,delete this.fds[e.fd],this.releasedFds.push(e.fd))}closeSync(e){(0,_.validateFd)(e);let i=this.getFileByFdOrThrow(e,"close");this.closeFile(i)}close(e,i){(0,_.validateFd)(e),this.wrapAsync(this.closeSync,[e],i)}openFileOrGetById(e,i,o){if(typeof e=="number"){let a=this.fds[e];if(!a)throw(0,_.createError)(At);return a}else return this.openFile((0,_.pathToFilename)(e),i,o)}readBase(e,i,o,a,c){if(i.byteLength<a)throw(0,_.createError)(oc,"read",void 0,void 0,RangeError);let f=this.getFileByFdOrThrow(e);if(f.node.isSymlink())throw(0,_.createError)(Qa,"read",f.link.getPath());return f.read(i,Number(o),Number(a),c===-1||typeof c!="number"?void 0:c)}readSync(e,i,o,a,c){return(0,_.validateFd)(e),this.readBase(e,i,o,a,c)}read(e,i,o,a,c,f){if((0,_.validateCallback)(f),a===0)return(0,yr.default)(()=>{f&&f(null,0,i)});(0,Jt.default)(()=>{try{let g=this.readBase(e,i,o,a,c);f(null,g,i)}catch(g){f(g)}})}readvBase(e,i,o){let a=this.getFileByFdOrThrow(e),c=o??void 0;c===-1&&(c=void 0);let f=0;for(let g of i){let w=a.read(g,0,g.byteLength,c);if(c=void 0,f+=w,w<g.byteLength)break}return f}readv(e,i,o,a){let c=o,f=a;typeof o=="function"&&(c=null,f=o),(0,_.validateCallback)(f),(0,Jt.default)(()=>{try{let g=this.readvBase(e,i,c);f(null,g,i)}catch(g){f(g)}})}readvSync(e,i,o){return(0,_.validateFd)(e),this.readvBase(e,i,o)}readFileBase(e,i,o){let a,f=typeof e=="number"&&(0,_.isFd)(e),g;if(f)g=e;else{let w=(0,_.pathToFilename)(e),l=this.getResolvedLinkOrThrow(w,"open");if(l.getNode().isDirectory())throw(0,_.createError)(lo,"open",l.getPath());g=this.openSync(e,i)}try{a=(0,_.bufferToEncoding)(this.getFileByFdOrThrow(g).getBuffer(),o)}finally{f||this.closeSync(g)}return a}readFileSync(e,i){let o=(0,U.getReadFileOptions)(i),a=(0,_.flagsToNumber)(o.flag);return this.readFileBase(e,a,o.encoding)}readFile(e,i,o){let[a,c]=(0,U.optsAndCbGenerator)(U.getReadFileOptions)(i,o),f=(0,_.flagsToNumber)(a.flag);this.wrapAsync(this.readFileBase,[e,f,a.encoding],c)}writeBase(e,i,o,a,c){let f=this.getFileByFdOrThrow(e,"write");if(f.node.isSymlink())throw(0,_.createError)(li,"write",f.link.getPath());return f.write(i,o,a,c===-1||typeof c!="number"?void 0:c)}writeSync(e,i,o,a,c){let[,f,g,w,l]=(0,_.getWriteSyncArgs)(e,i,o,a,c);return this.writeBase(e,f,g,w,l)}write(e,i,o,a,c,f){let[,g,w,l,h,v,I]=(0,_.getWriteArgs)(e,i,o,a,c,f);(0,Jt.default)(()=>{try{let A=this.writeBase(e,w,l,h,v);g?I(null,A,i):I(null,A,w)}catch(A){I(A)}})}writevBase(e,i,o){let a=this.getFileByFdOrThrow(e),c=o??void 0;c===-1&&(c=void 0);let f=0;for(let g of i){let w=Ct.Buffer.from(g.buffer,g.byteOffset,g.byteLength),l=a.write(w,0,w.byteLength,c);if(c=void 0,f+=l,l<w.byteLength)break}return f}writev(e,i,o,a){let c=o,f=a;typeof o=="function"&&(c=null,f=o),(0,_.validateCallback)(f),(0,Jt.default)(()=>{try{let g=this.writevBase(e,i,c);f(null,g,i)}catch(g){f(g)}})}writevSync(e,i,o){return(0,_.validateFd)(e),this.writevBase(e,i,o)}writeFileBase(e,i,o,a){let c=typeof e=="number",f;c?f=e:f=this.openBase((0,_.pathToFilename)(e),o,a);let g=0,w=i.length,l=o&Ha?void 0:0;try{for(;w>0;){let h=this.writeSync(f,i,g,w,l);g+=h,w-=h,l!==void 0&&(l+=h)}}finally{c||this.closeSync(f)}}writeFileSync(e,i,o){let a=(0,U.getWriteFileOptions)(o),c=(0,_.flagsToNumber)(a.flag),f=(0,_.modeToNumber)(a.mode),g=(0,_.dataToBuffer)(i,a.encoding);this.writeFileBase(e,g,c,f)}writeFile(e,i,o,a){let c=o,f=a;typeof o=="function"&&(c=U.writeFileDefaults,f=o);let g=(0,_.validateCallback)(f),w=(0,U.getWriteFileOptions)(c),l=(0,_.flagsToNumber)(w.flag),h=(0,_.modeToNumber)(w.mode),v=(0,_.dataToBuffer)(i,w.encoding);this.wrapAsync(this.writeFileBase,[e,v,l,h],g)}linkBase(e,i){let o;try{o=this.getLinkOrThrow(e,"link")}catch(w){throw w.code&&(w=(0,_.createError)(w.code,"link",e,i)),w}let a=vt.dirname(i),c;try{c=this.getLinkOrThrow(a,"link")}catch(w){throw w.code&&(w=(0,_.createError)(w.code,"link",e,i)),w}let f=vt.basename(i);if(c.getChild(f))throw(0,_.createError)(Mt,"link",e,i);let g=o.getNode();g.nlink++,c.createChild(f,g)}copyFileBase(e,i,o){let a=this.readFileSync(e);if(o&Ya&&this.existsSync(i))throw(0,_.createError)(Mt,"copyFile",e,i);if(o&Ga)throw(0,_.createError)(ic,"copyFile",e,i);this.writeFileBase(i,a,me.FLAGS.w,438)}copyFileSync(e,i,o){let a=(0,_.pathToFilename)(e),c=(0,_.pathToFilename)(i);return this.copyFileBase(a,c,(o||0)|0)}copyFile(e,i,o,a){let c=(0,_.pathToFilename)(e),f=(0,_.pathToFilename)(i),g,w;typeof o=="function"?(g=0,w=o):(g=o,w=a),(0,_.validateCallback)(w),this.wrapAsync(this.copyFileBase,[c,f,g],w)}linkSync(e,i){let o=(0,_.pathToFilename)(e),a=(0,_.pathToFilename)(i);this.linkBase(o,a)}link(e,i,o){let a=(0,_.pathToFilename)(e),c=(0,_.pathToFilename)(i);this.wrapAsync(this.linkBase,[a,c],o)}unlinkBase(e){let i=this.getLinkOrThrow(e,"unlink");if(i.length)throw Error("Dir not empty...");this.deleteLink(i);let o=i.getNode();o.nlink--,o.nlink<=0&&this.deleteNode(o)}unlinkSync(e){let i=(0,_.pathToFilename)(e);this.unlinkBase(i)}unlink(e,i){let o=(0,_.pathToFilename)(e);this.wrapAsync(this.unlinkBase,[o],i)}symlinkBase(e,i){let o=bt(i),a;try{a=this.getLinkParentAsDirOrThrow(o)}catch(w){throw w.code&&(w=(0,_.createError)(w.code,"symlink",e,i)),w}let c=o[o.length-1];if(a.getChild(c))throw(0,_.createError)(Mt,"symlink",e,i);let f=a.getNode();if(!f.canExecute()||!f.canWrite())throw(0,_.createError)(wt,"symlink",e,i);let g=a.createChild(c);return g.getNode().makeSymlink(bt(e)),g}symlinkSync(e,i,o){let a=(0,_.pathToFilename)(e),c=(0,_.pathToFilename)(i);this.symlinkBase(a,c)}symlink(e,i,o,a){let c=(0,_.validateCallback)(typeof o=="function"?o:a),f=(0,_.pathToFilename)(e),g=(0,_.pathToFilename)(i);this.wrapAsync(this.symlinkBase,[f,g],c)}realpathBase(e,i){debugger;let o=this.getResolvedLinkOrThrow(e,"realpath");return(0,Lt.strToEncoding)(o.getPath()||"/",i)}realpathSync(e,i){return this.realpathBase((0,_.pathToFilename)(e),(0,U.getRealpathOptions)(i).encoding)}realpath(e,i,o){let[a,c]=(0,U.getRealpathOptsAndCb)(i,o),f=(0,_.pathToFilename)(e);this.wrapAsync(this.realpathBase,[f,a.encoding],c)}lstatBase(e,i=!1,o=!1){let a;try{a=this.getLinkOrThrow(e,"lstat")}catch(c){if(c.code===At&&!o)return;throw c}return pi.default.build(a.getNode(),i)}lstatSync(e,i){let{throwIfNoEntry:o=!0,bigint:a=!1}=(0,U.getStatOptions)(i);return this.lstatBase((0,_.pathToFilename)(e),a,o)}lstat(e,i,o){let[{throwIfNoEntry:a=!0,bigint:c=!1},f]=(0,U.getStatOptsAndCb)(i,o);this.wrapAsync(this.lstatBase,[(0,_.pathToFilename)(e),c,a],f)}statBase(e,i=!1,o=!0){let a;try{a=this.getResolvedLinkOrThrow(e,"stat")}catch(c){if(c.code===At&&!o)return;throw c}return pi.default.build(a.getNode(),i)}statSync(e,i){let{bigint:o=!0,throwIfNoEntry:a=!0}=(0,U.getStatOptions)(i);return this.statBase((0,_.pathToFilename)(e),o,a)}stat(e,i,o){let[{bigint:a=!1,throwIfNoEntry:c=!0},f]=(0,U.getStatOptsAndCb)(i,o);this.wrapAsync(this.statBase,[(0,_.pathToFilename)(e),a,c],f)}fstatBase(e,i=!1){let o=this.getFileByFd(e);if(!o)throw(0,_.createError)(li,"fstat");return pi.default.build(o.node,i)}fstatSync(e,i){return this.fstatBase(e,(0,U.getStatOptions)(i).bigint)}fstat(e,i,o){let[a,c]=(0,U.getStatOptsAndCb)(i,o);this.wrapAsync(this.fstatBase,[e,a.bigint],c)}renameBase(e,i){let o;try{o=this.getResolvedLinkOrThrow(e)}catch(l){throw l.code&&(l=(0,_.createError)(l.code,"rename",e,i)),l}let a;try{a=this.getLinkParentAsDirOrThrow(i)}catch(l){throw l.code&&(l=(0,_.createError)(l.code,"rename",e,i)),l}let c=o.parent,f=c.getNode(),g=a.getNode();if(!f.canExecute()||!f.canWrite()||!g.canExecute()||!g.canWrite())throw(0,_.createError)(wt,"rename",e,i);c.deleteChild(o);let w=vt.basename(i);o.name=w,o.steps=[...a.steps,w],a.setChild(o.getName(),o)}renameSync(e,i){let o=(0,_.pathToFilename)(e),a=(0,_.pathToFilename)(i);this.renameBase(o,a)}rename(e,i,o){let a=(0,_.pathToFilename)(e),c=(0,_.pathToFilename)(i);this.wrapAsync(this.renameBase,[a,c],o)}existsBase(e){return!!this.statBase(e)}existsSync(e){try{return this.existsBase((0,_.pathToFilename)(e))}catch{return!1}}exists(e,i){let o=(0,_.pathToFilename)(e);if(typeof i!="function")throw Error(me.ERRSTR.CB);(0,Jt.default)(()=>{try{i(this.existsBase(o))}catch{i(!1)}})}accessBase(e,i){let o=this.getLinkOrThrow(e,"access")}accessSync(e,i=uo){let o=(0,_.pathToFilename)(e);i=i|0,this.accessBase(o,i)}access(e,i,o){let a=uo,c;typeof i!="function"?(a=i|0,c=(0,_.validateCallback)(o)):c=i;let f=(0,_.pathToFilename)(e);this.wrapAsync(this.accessBase,[f,a],c)}appendFileSync(e,i,o){let a=(0,U.getAppendFileOpts)(o);(!a.flag||(0,_.isFd)(e))&&(a.flag="a"),this.writeFileSync(e,i,a)}appendFile(e,i,o,a){let[c,f]=(0,U.getAppendFileOptsAndCb)(o,a);(!c.flag||(0,_.isFd)(e))&&(c.flag="a"),this.writeFile(e,i,c,f)}readdirBase(e,i){let o=bt(e),a=this.getResolvedLinkOrThrow(e,"scandir"),c=a.getNode();if(!c.isDirectory())throw(0,_.createError)(It,"scandir",e);if(!c.canRead())throw(0,_.createError)(wt,"scandir",e);let f=[];for(let w of a.children.keys()){let l=a.getChild(w);if(!(!l||w==="."||w==="..")&&(f.push(Ba.default.build(l,i.encoding)),i.recursive&&l.children.size)){let h=Object.assign(Object.assign({},i),{recursive:!0,withFileTypes:!0}),v=this.readdirBase(l.getPath(),h);f.push(...v)}}if(!_.isWin&&i.encoding!=="buffer"&&f.sort((w,l)=>w.name<l.name?-1:w.name>l.name?1:0),i.withFileTypes)return f;let g=e;return _.isWin&&(g=g.replace(/\\/g,"/")),f.map(w=>{if(i.recursive){let l=vt.join(w.parentPath,w.name.toString());return _.isWin&&(l=l.replace(/\\/g,"/")),l.replace(g+vt.posix.sep,"")}return w.name})}readdirSync(e,i){let o=(0,U.getReaddirOptions)(i),a=(0,_.pathToFilename)(e);return this.readdirBase(a,o)}readdir(e,i,o){let[a,c]=(0,U.getReaddirOptsAndCb)(i,o),f=(0,_.pathToFilename)(e);this.wrapAsync(this.readdirBase,[f,a],c)}readlinkBase(e,i){let a=this.getLinkOrThrow(e,"readlink").getNode();if(!a.isSymlink())throw(0,_.createError)(tc,"readlink",e);let c=lt+a.symlink.join(lt);return(0,Lt.strToEncoding)(c,i)}readlinkSync(e,i){let o=(0,U.getDefaultOpts)(i),a=(0,_.pathToFilename)(e);return this.readlinkBase(a,o.encoding)}readlink(e,i,o){let[a,c]=(0,U.getDefaultOptsAndCb)(i,o),f=(0,_.pathToFilename)(e);this.wrapAsync(this.readlinkBase,[f,a.encoding],c)}fsyncBase(e){this.getFileByFdOrThrow(e,"fsync")}fsyncSync(e){this.fsyncBase(e)}fsync(e,i){this.wrapAsync(this.fsyncBase,[e],i)}fdatasyncBase(e){this.getFileByFdOrThrow(e,"fdatasync")}fdatasyncSync(e){this.fdatasyncBase(e)}fdatasync(e,i){this.wrapAsync(this.fdatasyncBase,[e],i)}ftruncateBase(e,i){this.getFileByFdOrThrow(e,"ftruncate").truncate(i)}ftruncateSync(e,i){this.ftruncateBase(e,i)}ftruncate(e,i,o){let a=typeof i=="number"?i:0,c=(0,_.validateCallback)(typeof i=="number"?o:i);this.wrapAsync(this.ftruncateBase,[e,a],c)}truncateBase(e,i){let o=this.openSync(e,"r+");try{this.ftruncateSync(o,i)}finally{this.closeSync(o)}}truncateSync(e,i){if((0,_.isFd)(e))return this.ftruncateSync(e,i);this.truncateBase(e,i)}truncate(e,i,o){let a=typeof i=="number"?i:0,c=(0,_.validateCallback)(typeof i=="number"?o:i);if((0,_.isFd)(e))return this.ftruncate(e,a,c);this.wrapAsync(this.truncateBase,[e,a],c)}futimesBase(e,i,o){let c=this.getFileByFdOrThrow(e,"futimes").node;c.atime=new Date(i*1e3),c.mtime=new Date(o*1e3)}futimesSync(e,i,o){this.futimesBase(e,at(i),at(o))}futimes(e,i,o,a){this.wrapAsync(this.futimesBase,[e,at(i),at(o)],a)}utimesBase(e,i,o,a=!0){let f=(a?this.getResolvedLinkOrThrow(e,"utimes"):this.getLinkOrThrow(e,"lutimes")).getNode();f.atime=new Date(i*1e3),f.mtime=new Date(o*1e3)}utimesSync(e,i,o){this.utimesBase((0,_.pathToFilename)(e),at(i),at(o),!0)}utimes(e,i,o,a){this.wrapAsync(this.utimesBase,[(0,_.pathToFilename)(e),at(i),at(o),!0],a)}lutimesSync(e,i,o){this.utimesBase((0,_.pathToFilename)(e),at(i),at(o),!1)}lutimes(e,i,o,a){this.wrapAsync(this.utimesBase,[(0,_.pathToFilename)(e),at(i),at(o),!1],a)}mkdirBase(e,i){let o=bt(e);if(!o.length)throw(0,_.createError)(Mt,"mkdir",e);let a=this.getLinkParentAsDirOrThrow(e,"mkdir"),c=o[o.length-1];if(a.getChild(c))throw(0,_.createError)(Mt,"mkdir",e);let f=a.getNode();if(!f.canWrite()||!f.canExecute())throw(0,_.createError)(wt,"mkdir",e);a.createChild(c,this.createNode(!0,i))}mkdirpBase(e,i){let o=!1,a=bt(e),c=null,f=a.length;for(f=a.length;f>=0&&(c=this.getResolvedLink(a.slice(0,f)),!c);f--);for(c||(c=this.root,f=0),c=this.getResolvedLinkOrThrow(lt+a.slice(0,f).join(lt),"mkdir"),f;f<a.length;f++){let g=c.getNode();if(g.isDirectory()){if(!g.canExecute()||!g.canWrite())throw(0,_.createError)(wt,"mkdir",e)}else throw(0,_.createError)(It,"mkdir",e);o=!0,c=c.createChild(a[f],this.createNode(!0,i))}return o?e:void 0}mkdirSync(e,i){let o=(0,U.getMkdirOptions)(i),a=(0,_.modeToNumber)(o.mode,511),c=(0,_.pathToFilename)(e);if(o.recursive)return this.mkdirpBase(c,a);this.mkdirBase(c,a)}mkdir(e,i,o){let a=(0,U.getMkdirOptions)(i),c=(0,_.validateCallback)(typeof i=="function"?i:o),f=(0,_.modeToNumber)(a.mode,511),g=(0,_.pathToFilename)(e);a.recursive?this.wrapAsync(this.mkdirpBase,[g,f],c):this.wrapAsync(this.mkdirBase,[g,f],c)}mkdtempBase(e,i,o=5){let a=e+(0,_.genRndStr6)();try{return this.mkdirBase(a,511),(0,Lt.strToEncoding)(a,i)}catch(c){if(c.code===Mt){if(o>1)return this.mkdtempBase(e,i,o-1);throw Error("Could not create temp dir.")}else throw c}}mkdtempSync(e,i){let{encoding:o}=(0,U.getDefaultOpts)(i);if(!e||typeof e!="string")throw new TypeError("filename prefix is required");return(0,_.nullCheck)(e),this.mkdtempBase(e,o)}mkdtemp(e,i,o){let[{encoding:a},c]=(0,U.getDefaultOptsAndCb)(i,o);if(!e||typeof e!="string")throw new TypeError("filename prefix is required");(0,_.nullCheck)(e)&&this.wrapAsync(this.mkdtempBase,[e,a],c)}rmdirBase(e,i){let o=(0,U.getRmdirOptions)(i),a=this.getLinkAsDirOrThrow(e,"rmdir");if(a.length&&!o.recursive)throw(0,_.createError)(rc,"rmdir",e);this.deleteLink(a)}rmdirSync(e,i){this.rmdirBase((0,_.pathToFilename)(e),i)}rmdir(e,i,o){let a=(0,U.getRmdirOptions)(i),c=(0,_.validateCallback)(typeof i=="function"?i:o);this.wrapAsync(this.rmdirBase,[(0,_.pathToFilename)(e),a],c)}rmBase(e,i={}){let o;try{o=this.getResolvedLinkOrThrow(e,"stat")}catch(a){if(a.code===At&&i.force)return;throw a}if(o.getNode().isDirectory()&&!i.recursive)throw(0,_.createError)(nc,"rm",e);if(!o.parent.getNode().canWrite())throw(0,_.createError)(wt,"rm",e);this.deleteLink(o)}rmSync(e,i){this.rmBase((0,_.pathToFilename)(e),i)}rm(e,i,o){let[a,c]=(0,U.getRmOptsAndCb)(i,o);this.wrapAsync(this.rmBase,[(0,_.pathToFilename)(e),a],c)}fchmodBase(e,i){this.getFileByFdOrThrow(e,"fchmod").chmod(i)}fchmodSync(e,i){this.fchmodBase(e,(0,_.modeToNumber)(i))}fchmod(e,i,o){this.wrapAsync(this.fchmodBase,[e,(0,_.modeToNumber)(i)],o)}chmodBase(e,i,o=!0){(o?this.getResolvedLinkOrThrow(e,"chmod"):this.getLinkOrThrow(e,"chmod")).getNode().chmod(i)}chmodSync(e,i){let o=(0,_.modeToNumber)(i),a=(0,_.pathToFilename)(e);this.chmodBase(a,o,!0)}chmod(e,i,o){let a=(0,_.modeToNumber)(i),c=(0,_.pathToFilename)(e);this.wrapAsync(this.chmodBase,[c,a],o)}lchmodBase(e,i){this.chmodBase(e,i,!1)}lchmodSync(e,i){let o=(0,_.modeToNumber)(i),a=(0,_.pathToFilename)(e);this.lchmodBase(a,o)}lchmod(e,i,o){let a=(0,_.modeToNumber)(i),c=(0,_.pathToFilename)(e);this.wrapAsync(this.lchmodBase,[c,a],o)}fchownBase(e,i,o){this.getFileByFdOrThrow(e,"fchown").chown(i,o)}fchownSync(e,i,o){Xt(i),Zt(o),this.fchownBase(e,i,o)}fchown(e,i,o,a){Xt(i),Zt(o),this.wrapAsync(this.fchownBase,[e,i,o],a)}chownBase(e,i,o){this.getResolvedLinkOrThrow(e,"chown").getNode().chown(i,o)}chownSync(e,i,o){Xt(i),Zt(o),this.chownBase((0,_.pathToFilename)(e),i,o)}chown(e,i,o,a){Xt(i),Zt(o),this.wrapAsync(this.chownBase,[(0,_.pathToFilename)(e),i,o],a)}lchownBase(e,i,o){this.getLinkOrThrow(e,"lchown").getNode().chown(i,o)}lchownSync(e,i,o){Xt(i),Zt(o),this.lchownBase((0,_.pathToFilename)(e),i,o)}lchown(e,i,o,a){Xt(i),Zt(o),this.wrapAsync(this.lchownBase,[(0,_.pathToFilename)(e),i,o],a)}watchFile(e,i,o){let a=(0,_.pathToFilename)(e),c=i,f=o;if(typeof c=="function"&&(f=i,c=null),typeof f!="function")throw Error('"watchFile()" requires a listener function');let g=5007,w=!0;c&&typeof c=="object"&&(typeof c.interval=="number"&&(g=c.interval),typeof c.persistent=="boolean"&&(w=c.persistent));let l=this.statWatchers[a];return l||(l=new this.StatWatcher,l.start(a,w,g),this.statWatchers[a]=l),l.addListener("change",f),l}unwatchFile(e,i){let o=(0,_.pathToFilename)(e),a=this.statWatchers[o];a&&(typeof i=="function"?a.removeListener("change",i):a.removeAllListeners("change"),a.listenerCount("change")===0&&(a.stop(),delete this.statWatchers[o]))}createReadStream(e,i){return new this.ReadStream(e,i)}createWriteStream(e,i){return new this.WriteStream(e,i)}watch(e,i,o){let a=(0,_.pathToFilename)(e),c=i;typeof i=="function"&&(o=i,c=null);let{persistent:f,recursive:g,encoding:w}=(0,U.getDefaultOpts)(c);f===void 0&&(f=!0),g===void 0&&(g=!1);let l=new this.FSWatcher;return l.start(a,f,g,w),o&&l.addListener("change",o),l}opendirBase(e,i){let o=this.getResolvedLinkOrThrow(e,"scandir");if(!o.getNode().isDirectory())throw(0,_.createError)(It,"scandir",e);return new Wa.Dir(o,i)}opendirSync(e,i){let o=(0,U.getOpendirOptions)(i),a=(0,_.pathToFilename)(e);return this.opendirBase(a,o)}opendir(e,i,o){let[a,c]=(0,U.getOpendirOptsAndCb)(i,o),f=(0,_.pathToFilename)(e);this.wrapAsync(this.opendirBase,[f,a],c)}};it.Volume=hr;hr.fd=2147483647;function pc(s){s.emit("stop")}var fr=class extends fo.EventEmitter{constructor(e){super(),this.onInterval=()=>{try{let i=this.vol.statSync(this.filename);this.hasChanged(i)&&(this.emit("change",i,this.prev),this.prev=i)}finally{this.loop()}},this.vol=e}loop(){this.timeoutRef=this.setTimeout(this.onInterval,this.interval)}hasChanged(e){return e.mtimeMs>this.prev.mtimeMs||e.nlink!==this.prev.nlink}start(e,i=!0,o=5007){this.filename=(0,_.pathToFilename)(e),this.setTimeout=i?setTimeout.bind(typeof globalThis<"u"?globalThis:global):Da.default,this.interval=o,this.prev=this.vol.statSync(this.filename),this.loop()}stop(){clearTimeout(this.timeoutRef),(0,yr.default)(()=>{pc.call(this,this)})}};it.StatWatcher=fr;var ht;function uc(s){ht=(0,Ct.bufferAllocUnsafe)(s),ht.used=0}yo.inherits(_t,gr.Readable);it.ReadStream=_t;function _t(s,e,i){if(!(this instanceof _t))return new _t(s,e,i);if(this._vol=s,i=Object.assign({},(0,U.getOptions)(i,{})),i.highWaterMark===void 0&&(i.highWaterMark=64*1024),gr.Readable.call(this,i),this.path=(0,_.pathToFilename)(e),this.fd=i.fd===void 0?null:i.fd,this.flags=i.flags===void 0?"r":i.flags,this.mode=i.mode===void 0?438:i.mode,this.start=i.start,this.end=i.end,this.autoClose=i.autoClose===void 0?!0:i.autoClose,this.pos=void 0,this.bytesRead=0,this.start!==void 0){if(typeof this.start!="number")throw new TypeError('"start" option must be a Number');if(this.end===void 0)this.end=1/0;else if(typeof this.end!="number")throw new TypeError('"end" option must be a Number');if(this.start>this.end)throw new Error('"start" option must be <= "end" option');this.pos=this.start}typeof this.fd!="number"&&this.open(),this.on("end",function(){this.autoClose&&this.destroy&&this.destroy()})}_t.prototype.open=function(){var s=this;this._vol.open(this.path,this.flags,this.mode,(e,i)=>{if(e){s.autoClose&&s.destroy&&s.destroy(),s.emit("error",e);return}s.fd=i,s.emit("open",i),s.read()})};_t.prototype._read=function(s){if(typeof this.fd!="number")return this.once("open",function(){this._read(s)});if(this.destroyed)return;(!ht||ht.length-ht.used<Za)&&uc(this._readableState.highWaterMark);var e=ht,i=Math.min(ht.length-ht.used,s),o=ht.used;if(this.pos!==void 0&&(i=Math.min(this.end-this.pos+1,i)),i<=0)return this.push(null);var a=this;this._vol.read(this.fd,ht,ht.used,i,this.pos,c),this.pos!==void 0&&(this.pos+=i),ht.used+=i;function c(f,g){if(f)a.autoClose&&a.destroy&&a.destroy(),a.emit("error",f);else{var w=null;g>0&&(a.bytesRead+=g,w=e.slice(o,o+g)),a.push(w)}}};_t.prototype._destroy=function(s,e){this.close(i=>{e(s||i)})};_t.prototype.close=function(s){var e;if(s&&this.once("close",s),this.closed||typeof this.fd!="number"){if(typeof this.fd!="number"){this.once("open",go);return}return(0,yr.default)(()=>this.emit("close"))}typeof((e=this._readableState)===null||e===void 0?void 0:e.closed)=="boolean"?this._readableState.closed=!0:this.closed=!0,this._vol.close(this.fd,i=>{i?this.emit("error",i):this.emit("close")}),this.fd=null};function go(s){this.close()}yo.inherits(ft,gr.Writable);it.WriteStream=ft;function ft(s,e,i){if(!(this instanceof ft))return new ft(s,e,i);if(this._vol=s,i=Object.assign({},(0,U.getOptions)(i,{})),gr.Writable.call(this,i),this.path=(0,_.pathToFilename)(e),this.fd=i.fd===void 0?null:i.fd,this.flags=i.flags===void 0?"w":i.flags,this.mode=i.mode===void 0?438:i.mode,this.start=i.start,this.autoClose=i.autoClose===void 0?!0:!!i.autoClose,this.pos=void 0,this.bytesWritten=0,this.pending=!0,this.start!==void 0){if(typeof this.start!="number")throw new TypeError('"start" option must be a Number');if(this.start<0)throw new Error('"start" must be >= zero');this.pos=this.start}i.encoding&&this.setDefaultEncoding(i.encoding),typeof this.fd!="number"&&this.open(),this.once("finish",function(){this.autoClose&&this.close()})}ft.prototype.open=function(){this._vol.open(this.path,this.flags,this.mode,function(s,e){if(s){this.autoClose&&this.destroy&&this.destroy(),this.emit("error",s);return}this.fd=e,this.pending=!1,this.emit("open",e)}.bind(this))};ft.prototype._write=function(s,e,i){if(!(s instanceof Ct.Buffer||s instanceof Uint8Array))return this.emit("error",new Error("Invalid data"));if(typeof this.fd!="number")return this.once("open",function(){this._write(s,e,i)});var o=this;this._vol.write(this.fd,s,0,s.length,this.pos,(a,c)=>{if(a)return o.autoClose&&o.destroy&&o.destroy(),i(a);o.bytesWritten+=c,i()}),this.pos!==void 0&&(this.pos+=s.length)};ft.prototype._writev=function(s,e){if(typeof this.fd!="number")return this.once("open",function(){this._writev(s,e)});let i=this,o=s.length,a=new Array(o);for(var c=0,f=0;f<o;f++){var g=s[f].chunk;a[f]=g,c+=g.length}let w=Ct.Buffer.concat(a);this._vol.write(this.fd,w,0,w.length,this.pos,(l,h)=>{if(l)return i.destroy&&i.destroy(),e(l);i.bytesWritten+=h,e()}),this.pos!==void 0&&(this.pos+=c)};ft.prototype.close=function(s){var e;if(s&&this.once("close",s),this.closed||typeof this.fd!="number"){if(typeof this.fd!="number"){this.once("open",go);return}return(0,yr.default)(()=>this.emit("close"))}typeof((e=this._writableState)===null||e===void 0?void 0:e.closed)=="boolean"?this._writableState.closed=!0:this.closed=!0,this._vol.close(this.fd,i=>{i?this.emit("error",i):this.emit("close")}),this.fd=null};ft.prototype._destroy=_t.prototype._destroy;ft.prototype.destroySoon=ft.prototype.end;var dr=class extends fo.EventEmitter{constructor(e){super(),this._filename="",this._filenameEncoded="",this._recursive=!1,this._encoding=Lt.ENCODING_UTF8,this._listenerRemovers=new Map,this._onParentChild=i=>{i.getName()===this._getName()&&this._emit("rename")},this._emit=i=>{this.emit("change",i,this._filenameEncoded)},this._persist=()=>{this._timer=setTimeout(this._persist,1e6)},this._vol=e}_getName(){return this._steps[this._steps.length-1]}start(e,i=!0,o=!1,a=Lt.ENCODING_UTF8){this._filename=(0,_.pathToFilename)(e),this._steps=bt(this._filename),this._filenameEncoded=(0,Lt.strToEncoding)(this._filename),this._recursive=o,this._encoding=a;try{this._link=this._vol.getLinkOrThrow(this._filename,"FSWatcher")}catch(w){let l=new Error(`watch ${this._filename} ${w.code}`);throw l.code=w.code,l.errno=w.code,l}let c=w=>{var l;let h=w.getPath(),v=w.getNode(),I=()=>{let D=be(this._filename,h);return D||(D=this._getName()),this.emit("change","change",D)};v.on("change",I);let A=(l=this._listenerRemovers.get(v.ino))!==null&&l!==void 0?l:[];A.push(()=>v.removeListener("change",I)),this._listenerRemovers.set(v.ino,A)},f=w=>{var l;let h=w.getNode(),v=D=>{this.emit("change","rename",be(this._filename,D.getPath())),setTimeout(()=>{c(D),f(D)})},I=D=>{let L=F=>{let m=F.getNode().ino,T=this._listenerRemovers.get(m);T&&(T.forEach(N=>N()),this._listenerRemovers.delete(m));for(let[N,$]of F.children.entries())$&&N!=="."&&N!==".."&&L($)};L(D),this.emit("change","rename",be(this._filename,D.getPath()))};for(let[D,L]of w.children.entries())L&&D!=="."&&D!==".."&&c(L);if(w.on("child:add",v),w.on("child:delete",I),((l=this._listenerRemovers.get(h.ino))!==null&&l!==void 0?l:[]).push(()=>{w.removeListener("child:add",v),w.removeListener("child:delete",I)}),o)for(let[D,L]of w.children.entries())L&&D!=="."&&D!==".."&&f(L)};c(this._link),f(this._link);let g=this._link.parent;g&&(g.setMaxListeners(g.getMaxListeners()+1),g.on("child:delete",this._onParentChild)),i&&this._persist()}close(){clearTimeout(this._timer),this._listenerRemovers.forEach(i=>{i.forEach(o=>o())}),this._listenerRemovers.clear();let e=this._link.parent;e&&e.removeListener("child:delete",this._onParentChild)}};it.FSWatcher=dr});var bo=H(mr=>{"use strict";Object.defineProperty(mr,"__esModule",{value:!0});mr.fsSynchronousApiList=void 0;mr.fsSynchronousApiList=["accessSync","appendFileSync","chmodSync","chownSync","closeSync","copyFileSync","existsSync","fchmodSync","fchownSync","fdatasyncSync","fstatSync","fsyncSync","ftruncateSync","futimesSync","lchmodSync","lchownSync","linkSync","lstatSync","mkdirSync","mkdtempSync","openSync","readdirSync","readFileSync","readlinkSync","readSync","readvSync","realpathSync","renameSync","rmdirSync","rmSync","statSync","symlinkSync","truncateSync","unlinkSync","utimesSync","lutimesSync","writeFileSync","writeSync","writevSync"]});var wo=H(br=>{"use strict";Object.defineProperty(br,"__esModule",{value:!0});br.fsCallbackApiList=void 0;br.fsCallbackApiList=["access","appendFile","chmod","chown","close","copyFile","createReadStream","createWriteStream","exists","fchmod","fchown","fdatasync","fstat","fsync","ftruncate","futimes","lchmod","lchown","link","lstat","mkdir","mkdtemp","open","read","readv","readdir","readFile","readlink","realpath","rename","rm","rmdir","stat","symlink","truncate","unlink","unwatchFile","utimes","lutimes","watch","watchFile","write","writev","writeFile"]});var _o=H((nt,wr)=>{"use strict";Object.defineProperty(nt,"__esModule",{value:!0});nt.memfs=nt.fs=nt.vol=nt.Volume=void 0;nt.createFsFromVolume=fi;var lc=Me(),hc=$e(),hi=mo(),vo=Tt(),fc=bo(),dc=wo(),{F_OK:yc,R_OK:gc,W_OK:mc,X_OK:bc}=vo.constants;nt.Volume=hi.Volume;nt.vol=new hi.Volume;function fi(s){let e={F_OK:yc,R_OK:gc,W_OK:mc,X_OK:bc,constants:vo.constants,Stats:lc.default,Dirent:hc.default};for(let i of fc.fsSynchronousApiList)typeof s[i]=="function"&&(e[i]=s[i].bind(s));for(let i of dc.fsCallbackApiList)typeof s[i]=="function"&&(e[i]=s[i].bind(s));return e.StatWatcher=s.StatWatcher,e.FSWatcher=s.FSWatcher,e.WriteStream=s.WriteStream,e.ReadStream=s.ReadStream,e.promises=s.promises,e._toUnixTimestamp=hi.toUnixTimestamp,e.__vol=s,e}nt.fs=fi(nt.vol);var wc=(s={},e="/")=>{let i=nt.Volume.fromNestedJSON(s,e);return{fs:fi(i),vol:i}};nt.memfs=wc;wr.exports=Object.assign(Object.assign({},wr.exports),nt.fs);wr.exports.semantic=!0});var xo=H(kr=>{"use strict";Object.defineProperty(kr,"__esModule",{value:!0});var Nc=mt("stream"),vi=function(s,e){return vi=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(i,o){i.__proto__=o}||function(i,o){for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(i[a]=o[a])},vi(s,e)};function bi(s,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function i(){this.constructor=s}vi(s,e),s.prototype=e===null?Object.create(e):(i.prototype=e.prototype,new i)}function Pc(s,e,i,o){return new(i||(i=Promise))(function(a,c){function f(l){try{w(o.next(l))}catch(h){c(h)}}function g(l){try{w(o.throw(l))}catch(h){c(h)}}function w(l){var h;l.done?a(l.value):(h=l.value,h instanceof i?h:new i(function(v){v(h)})).then(f,g)}w((o=o.apply(s,e||[])).next())})}function Ac(s,e){var i,o,a,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]},f=Object.create((typeof Iterator=="function"?Iterator:Object).prototype);return f.next=g(0),f.throw=g(1),f.return=g(2),typeof Symbol=="function"&&(f[Symbol.iterator]=function(){return this}),f;function g(w){return function(l){return function(h){if(i)throw new TypeError("Generator is already executing.");for(;f&&(f=0,h[0]&&(c=0)),c;)try{if(i=1,o&&(a=2&h[0]?o.return:h[0]?o.throw||((a=o.return)&&a.call(o),0):o.next)&&!(a=a.call(o,h[1])).done)return a;switch(o=0,a&&(h=[2&h[0],a.value]),h[0]){case 0:case 1:a=h;break;case 4:return c.label++,{value:h[1],done:!1};case 5:c.label++,o=h[1],h=[0];continue;case 7:h=c.ops.pop(),c.trys.pop();continue;default:if(a=c.trys,!((a=a.length>0&&a[a.length-1])||h[0]!==6&&h[0]!==2)){c=0;continue}if(h[0]===3&&(!a||h[1]>a[0]&&h[1]<a[3])){c.label=h[1];break}if(h[0]===6&&c.label<a[1]){c.label=a[1],a=h;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(h);break}a[2]&&c.ops.pop(),c.trys.pop();continue}h=e.call(s,c)}catch(v){h=[6,v],o=0}finally{i=a=0}if(5&h[0])throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}([w,l])}}}function Ic(s){var e=typeof Symbol=="function"&&Symbol.iterator,i=e&&s[e],o=0;if(i)return i.call(s);if(s&&typeof s.length=="number")return{next:function(){return s&&o>=s.length&&(s=void 0),{value:s&&s[o++],done:!s}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function Cc(s){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,i=s[Symbol.asyncIterator];return i?i.call(s):(s=Ic(s),e={},o("next"),o("throw"),o("return"),e[Symbol.asyncIterator]=function(){return this},e);function o(a){e[a]=s[a]&&function(c){return new Promise(function(f,g){(function(w,l,h,v){Promise.resolve(v).then(function(I){w({value:I,done:h})},l)})(f,g,(c=s[a](c)).done,c.value)})}}}function wi(s,e,i,o){if(i==="a"&&!o)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?s!==e||!o:!e.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?o:i==="a"?o.call(s):o?o.value:e.get(s)}var _i=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};(function(){function s(F,m){if(!(F instanceof m))throw new TypeError("Cannot call a class as a function")}function e(F,m){for(var T=0;T<m.length;T++){var N=m[T];N.enumerable=N.enumerable||!1,N.configurable=!0,"value"in N&&(N.writable=!0),Object.defineProperty(F,N.key,N)}}function i(F,m,T){return m&&e(F.prototype,m),T&&e(F,T),Object.defineProperty(F,"prototype",{writable:!1}),F}function o(F,m){if(typeof m!="function"&&m!==null)throw new TypeError("Super expression must either be null or a function");F.prototype=Object.create(m&&m.prototype,{constructor:{value:F,writable:!0,configurable:!0}}),Object.defineProperty(F,"prototype",{writable:!1}),m&&c(F,m)}function a(F){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(m){return m.__proto__||Object.getPrototypeOf(m)},a(F)}function c(F,m){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(T,N){return T.__proto__=N,T},c(F,m)}function f(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function g(F){if(F===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return F}function w(F,m){if(m&&(typeof m=="object"||typeof m=="function"))return m;if(m!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return g(F)}function l(F){var m=f();return function(){var T,N=a(F);if(m){var $=a(this).constructor;T=Reflect.construct(N,arguments,$)}else T=N.apply(this,arguments);return w(this,T)}}function h(F,m){for(;!Object.prototype.hasOwnProperty.call(F,m)&&(F=a(F))!==null;);return F}function v(){return v=typeof Reflect<"u"&&Reflect.get?Reflect.get.bind():function(F,m,T){var N=h(F,m);if(N){var $=Object.getOwnPropertyDescriptor(N,m);return $.get?$.get.call(arguments.length<3?F:T):$.value}},v.apply(this,arguments)}var I=function(){function F(){s(this,F),Object.defineProperty(this,"listeners",{value:{},writable:!0,configurable:!0})}return i(F,[{key:"addEventListener",value:function(m,T,N){m in this.listeners||(this.listeners[m]=[]),this.listeners[m].push({callback:T,options:N})}},{key:"removeEventListener",value:function(m,T){if(m in this.listeners){for(var N=this.listeners[m],$=0,P=N.length;$<P;$++)if(N[$].callback===T)return void N.splice($,1)}}},{key:"dispatchEvent",value:function(m){if(m.type in this.listeners){for(var T=this.listeners[m.type].slice(),N=0,$=T.length;N<$;N++){var P=T[N];try{P.callback.call(this,m)}catch(dt){Promise.resolve().then(function(){throw dt})}P.options&&P.options.once&&this.removeEventListener(m.type,P.callback)}return!m.defaultPrevented}}}]),F}(),A=function(F){o(T,F);var m=l(T);function T(){var N;return s(this,T),(N=m.call(this)).listeners||I.call(g(N)),Object.defineProperty(g(N),"aborted",{value:!1,writable:!0,configurable:!0}),Object.defineProperty(g(N),"onabort",{value:null,writable:!0,configurable:!0}),Object.defineProperty(g(N),"reason",{value:void 0,writable:!0,configurable:!0}),N}return i(T,[{key:"toString",value:function(){return"[object AbortSignal]"}},{key:"dispatchEvent",value:function(N){N.type==="abort"&&(this.aborted=!0,typeof this.onabort=="function"&&this.onabort.call(this,N)),v(a(T.prototype),"dispatchEvent",this).call(this,N)}}]),T}(I),D=function(){function F(){s(this,F),Object.defineProperty(this,"signal",{value:new A,writable:!0,configurable:!0})}return i(F,[{key:"abort",value:function(m){var T;try{T=new Event("abort")}catch{typeof document<"u"?document.createEvent?(T=document.createEvent("Event")).initEvent("abort",!1,!1):(T=document.createEventObject()).type="abort":T={type:"abort",bubbles:!1,cancelable:!1}}var N=m;if(N===void 0)if(typeof document>"u")(N=new Error("This operation was aborted")).name="AbortError";else try{N=new DOMException("signal is aborted without reason")}catch{(N=new Error("This operation was aborted")).name="AbortError"}this.signal.reason=N,this.signal.dispatchEvent(T)}},{key:"toString",value:function(){return"[object AbortController]"}}]),F}();function L(F){return F.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL?(console.log("__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill"),!0):typeof F.Request=="function"&&!F.Request.prototype.hasOwnProperty("signal")||!F.AbortController}typeof Symbol<"u"&&Symbol.toStringTag&&(D.prototype[Symbol.toStringTag]="AbortController",A.prototype[Symbol.toStringTag]="AbortSignal"),function(F){L(F)&&(F.AbortController=D,F.AbortSignal=A)}(typeof self<"u"?self:_i)})();var Tr,M={};(function(s){var e=typeof Object.defineProperties=="function"?Object.defineProperty:function(t,r,n){t!=Array.prototype&&t!=Object.prototype&&(t[r]=n.value)},i=(typeof window<"u",_i);function o(){o=function(){},i.Symbol||(i.Symbol=f)}function a(t,r){this.a=t,e(this,"description",{configurable:!0,writable:!0,value:r})}a.prototype.toString=function(){return this.a};var c,f=(c=0,function t(r){if(this instanceof t)throw new TypeError("Symbol is not a constructor");return new a("jscomp_symbol_"+(r||"")+"_"+c++,r)});function g(){o();var t=i.Symbol.iterator;t||(t=i.Symbol.iterator=i.Symbol("Symbol.iterator")),typeof Array.prototype[t]!="function"&&e(Array.prototype,t,{configurable:!0,writable:!0,value:function(){return function(r){return g(),r={next:r},r[i.Symbol.iterator]=function(){return this},r}(function(r){var n=0;return function(){return n<r.length?{done:!1,value:r[n++]}:{done:!0}}}(this))}}),g=function(){}}(function(t,r){if(r){var n=i;t=t.split(".");for(var p=0;p<t.length-1;p++){var y=t[p];y in n||(n[y]={}),n=n[y]}(r=r(p=n[t=t[t.length-1]]))!=p&&r!=null&&e(n,t,{configurable:!0,writable:!0,value:r})}})("Array.prototype.entries",function(t){return t||function(){return function(r,n){g(),r instanceof String&&(r+="");var p=0,y={next:function(){if(p<r.length){var b=p++;return{value:n(b,r[b]),done:!1}}return y.next=function(){return{done:!0,value:void 0}},y.next()}};return y[Symbol.iterator]=function(){return y},y}(this,function(r,n){return[r,n]})}});var w=_i||self;function l(t,r,n){t=t.split("."),n=n||w,t[0]in n||n.execScript===void 0||n.execScript("var "+t[0]);for(var p;t.length&&(p=t.shift());)t.length||r===void 0?n=n[p]&&n[p]!==Object.prototype[p]?n[p]:n[p]={}:n[p]=r}function h(t){var r=typeof t;if(r=="object"){if(!t)return"null";if(t instanceof Array)return"array";if(t instanceof Object)return r;var n=Object.prototype.toString.call(t);if(n=="[object Window]")return"object";if(n=="[object Array]"||typeof t.length=="number"&&t.splice!==void 0&&t.propertyIsEnumerable!==void 0&&!t.propertyIsEnumerable("splice"))return"array";if(n=="[object Function]"||t.call!==void 0&&t.propertyIsEnumerable!==void 0&&!t.propertyIsEnumerable("call"))return"function"}else if(r=="function"&&t.call===void 0)return"object";return r}function v(t){var r=typeof t;return r=="object"&&t!=null||r=="function"}var I="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),A=Array.prototype.forEach?function(t,r){Array.prototype.forEach.call(t,r,void 0)}:function(t,r){for(var n=t.length,p=typeof t=="string"?t.split(""):t,y=0;y<n;y++)y in p&&r.call(void 0,p[y],y,t)},D=Array.prototype.map?function(t,r){return Array.prototype.map.call(t,r,void 0)}:function(t,r){for(var n=t.length,p=Array(n),y=typeof t=="string"?t.split(""):t,b=0;b<n;b++)b in y&&(p[b]=r.call(void 0,y[b],b,t));return p};function L(t,r,n){return 2>=arguments.length?Array.prototype.slice.call(t,r):Array.prototype.slice.call(t,r,n)}function F(t,r,n,p){var y="Assertion failed";if(n){y+=": "+n;var b=p}else t&&(y+=": "+t,b=r);throw Error(y,b||[])}function m(t,r,n){for(var p=[],y=2;y<arguments.length;++y)p[y-2]=arguments[y];return t||F("",null,r,p),t}function T(t,r){for(var n=[],p=1;p<arguments.length;++p)n[p-1]=arguments[p];throw Error("Failure"+(t?": "+t:""),n)}function N(t,r,n,p){for(var y=[],b=3;b<arguments.length;++b)y[b-3]=arguments[b];t instanceof r||F("Expected instanceof %s but got %s.",[$(r),$(t)],n,y)}function $(t){return t instanceof Function?t.displayName||t.name||"unknown type name":t instanceof Object?t.constructor.displayName||t.constructor.name||Object.prototype.toString.call(t):t===null?"null":typeof t}function P(t,r){if(this.c=t,this.b=r,this.a={},this.arrClean=!0,0<this.c.length){for(t=0;t<this.c.length;t++){var n=(r=this.c[t])[0];this.a[n.toString()]=new ot(n,r[1])}this.arrClean=!0}}function dt(t){this.a=0,this.b=t}function J(t,r){return t.b?(r.a||(r.a=new t.b(r.value)),r.a):r.value}function X(t){t=t.a;var r,n=[];for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&n.push(r);return n}function ot(t,r){this.key=t,this.value=r,this.a=void 0}function St(t){if(8192>=t.length)return String.fromCharCode.apply(null,t);for(var r="",n=0;n<t.length;n+=8192)r+=String.fromCharCode.apply(null,L(t,n,n+8192));return r}l("jspb.Map",P,void 0),P.prototype.g=function(){if(this.arrClean){if(this.b){var t,r=this.a;for(t in r)if(Object.prototype.hasOwnProperty.call(r,t)){var n=r[t].a;n&&n.g()}}}else{for(this.c.length=0,(r=X(this)).sort(),t=0;t<r.length;t++){var p=this.a[r[t]];(n=p.a)&&n.g(),this.c.push([p.key,p.value])}this.arrClean=!0}return this.c},P.prototype.toArray=P.prototype.g,P.prototype.Mc=function(t,r){for(var n=this.g(),p=[],y=0;y<n.length;y++){var b=this.a[n[y][0].toString()];J(this,b);var O=b.a;O?(m(r),p.push([b.key,r(t,O)])):p.push([b.key,b.value])}return p},P.prototype.toObject=P.prototype.Mc,P.fromObject=function(t,r,n){r=new P([],r);for(var p=0;p<t.length;p++){var y=t[p][0],b=n(t[p][1]);r.set(y,b)}return r},dt.prototype.next=function(){return this.a<this.b.length?{done:!1,value:this.b[this.a++]}:{done:!0,value:void 0}},typeof Symbol<"u"&&(dt.prototype[Symbol.iterator]=function(){return this}),P.prototype.Jb=function(){return X(this).length},P.prototype.getLength=P.prototype.Jb,P.prototype.clear=function(){this.a={},this.arrClean=!1},P.prototype.clear=P.prototype.clear,P.prototype.Cb=function(t){t=t.toString();var r=this.a.hasOwnProperty(t);return delete this.a[t],this.arrClean=!1,r},P.prototype.del=P.prototype.Cb,P.prototype.Eb=function(){var t=[],r=X(this);r.sort();for(var n=0;n<r.length;n++){var p=this.a[r[n]];t.push([p.key,p.value])}return t},P.prototype.getEntryList=P.prototype.Eb,P.prototype.entries=function(){var t=[],r=X(this);r.sort();for(var n=0;n<r.length;n++){var p=this.a[r[n]];t.push([p.key,J(this,p)])}return new dt(t)},P.prototype.entries=P.prototype.entries,P.prototype.keys=function(){var t=[],r=X(this);r.sort();for(var n=0;n<r.length;n++)t.push(this.a[r[n]].key);return new dt(t)},P.prototype.keys=P.prototype.keys,P.prototype.values=function(){var t=[],r=X(this);r.sort();for(var n=0;n<r.length;n++)t.push(J(this,this.a[r[n]]));return new dt(t)},P.prototype.values=P.prototype.values,P.prototype.forEach=function(t,r){var n=X(this);n.sort();for(var p=0;p<n.length;p++){var y=this.a[n[p]];t.call(r,J(this,y),y.key,this)}},P.prototype.forEach=P.prototype.forEach,P.prototype.set=function(t,r){var n=new ot(t);return this.b?(n.a=r,n.value=r.g()):n.value=r,this.a[t.toString()]=n,this.arrClean=!1,this},P.prototype.set=P.prototype.set,P.prototype.get=function(t){if(t=this.a[t.toString()])return J(this,t)},P.prototype.get=P.prototype.get,P.prototype.has=function(t){return t.toString()in this.a},P.prototype.has=P.prototype.has,P.prototype.Jc=function(t,r,n,p,y){var b=X(this);b.sort();for(var O=0;O<b.length;O++){var B=this.a[b[O]];r.Va(t),n.call(r,1,B.key),this.b?p.call(r,2,J(this,B),y):p.call(r,2,B.value),r.Ya()}},P.prototype.serializeBinary=P.prototype.Jc,P.deserializeBinary=function(t,r,n,p,y,b,O){for(;r.oa()&&!r.bb();){var B=r.c;B==1?b=n.call(r):B==2&&(t.b?(m(y),O||(O=new t.b),p.call(r,O,y)):O=p.call(r))}m(b!=null),m(O!=null),t.set(b,O)};var ct={"\0":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t","\v":"\\x0B",'"':'\\"',"\\":"\\\\","<":"\\u003C"},_e={"'":"\\'"},Si={},ee=null;function Ei(t,r){r===void 0&&(r=0),Ri(),r=Si[r];for(var n=[],p=0;p<t.length;p+=3){var y=t[p],b=p+1<t.length,O=b?t[p+1]:0,B=p+2<t.length,Q=B?t[p+2]:0,gt=y>>2;y=(3&y)<<4|O>>4,O=(15&O)<<2|Q>>6,Q&=63,B||(Q=64,b||(O=64)),n.push(r[gt],r[y],r[O]||"",r[Q]||"")}return n.join("")}function Oi(t){var r=t.length,n=3*r/4;n%3?n=Math.floor(n):"=.".indexOf(t[r-1])!=-1&&(n="=.".indexOf(t[r-2])!=-1?n-2:n-1);var p=new Uint8Array(n),y=0;return function(b,O){function B(Ie){for(;Q<b.length;){var Ft=b.charAt(Q++),Gi=ee[Ft];if(Gi!=null)return Gi;if(!/^[\s\xa0]*$/.test(Ft))throw Error("Unknown base64 encoding at char: "+Ft)}return Ie}Ri();for(var Q=0;;){var gt=B(-1),$t=B(0),le=B(64),Ae=B(64);if(Ae===64&&gt===-1)break;O(gt<<2|$t>>4),le!=64&&(O($t<<4&240|le>>2),Ae!=64&&O(le<<6&192|Ae))}}(t,function(b){p[y++]=b}),p.subarray(0,y)}function Ri(){if(!ee){ee={};for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),r=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var p=t.concat(r[n].split(""));Si[n]=p;for(var y=0;y<p.length;y++){var b=p[y];ee[b]===void 0&&(ee[b]=y)}}}}l("jspb.ConstBinaryMessage",function(){},void 0),l("jspb.BinaryMessage",function(){},void 0),l("jspb.BinaryConstants.FieldType",{yb:-1,ee:1,FLOAT:2,ke:3,te:4,je:5,xb:6,wb:7,BOOL:8,re:9,ie:10,le:11,ce:12,se:13,ge:14,me:15,ne:16,oe:17,pe:18,he:30,ve:31},void 0),l("jspb.BinaryConstants.WireType",{yb:-1,ue:0,xb:1,de:2,qe:3,fe:4,wb:5},void 0),l("jspb.BinaryConstants.FieldTypeToWireType",function(t){switch(t){case 5:case 3:case 13:case 4:case 17:case 18:case 8:case 14:case 31:return 0;case 1:case 6:case 16:case 30:return 1;case 9:case 11:case 12:return 2;case 2:case 7:case 15:return 5;default:return-1}},void 0),l("jspb.BinaryConstants.INVALID_FIELD_NUMBER",-1,void 0),l("jspb.BinaryConstants.FLOAT32_EPS",1401298464324817e-60,void 0),l("jspb.BinaryConstants.FLOAT32_MIN",11754943508222875e-54,void 0),l("jspb.BinaryConstants.FLOAT32_MAX",34028234663852886e22,void 0),l("jspb.BinaryConstants.FLOAT64_EPS",5e-324,void 0),l("jspb.BinaryConstants.FLOAT64_MIN",22250738585072014e-324,void 0),l("jspb.BinaryConstants.FLOAT64_MAX",17976931348623157e292,void 0),l("jspb.BinaryConstants.TWO_TO_20",1048576,void 0),l("jspb.BinaryConstants.TWO_TO_23",8388608,void 0),l("jspb.BinaryConstants.TWO_TO_31",2147483648,void 0),l("jspb.BinaryConstants.TWO_TO_32",4294967296,void 0),l("jspb.BinaryConstants.TWO_TO_52",4503599627370496,void 0),l("jspb.BinaryConstants.TWO_TO_63",9223372036854776e3,void 0),l("jspb.BinaryConstants.TWO_TO_64",18446744073709552e3,void 0),l("jspb.BinaryConstants.ZERO_HASH","\0\0\0\0\0\0\0\0",void 0);var W=0,V=0;function Pr(t){var r=t>>>0;t=Math.floor((t-r)/4294967296)>>>0,W=r,V=t}function re(t){var r=0>t,n=(t=Math.abs(t))>>>0;t=Math.floor((t-n)/4294967296),t>>>=0,r&&(t=~t>>>0,4294967295<(n=1+(~n>>>0))&&(n=0,4294967295<++t&&(t=0))),W=n,V=t}function Fi(t){var r=0>t;Pr(t=2*Math.abs(t)),t=W;var n=V;r&&(t==0?n==0?n=t=4294967295:(n--,t=4294967295):t--),W=t,V=n}function Ti(t){var r=0>t?1:0;if((t=r?-t:t)===0)0<1/t?W=V=0:(V=0,W=2147483648);else if(isNaN(t))V=0,W=2147483647;else if(34028234663852886e22<t)V=0,W=(r<<31|2139095040)>>>0;else if(11754943508222875e-54>t)t=Math.round(t/Math.pow(2,-149)),V=0,W=(r<<31|t)>>>0;else{var n=Math.floor(Math.log(t)/Math.LN2);t*=Math.pow(2,-n),16777216<=(t=Math.round(8388608*t))&&++n,V=0,W=(r<<31|n+127<<23|8388607&t)>>>0}}function ki(t){var r=0>t?1:0;if((t=r?-t:t)===0)V=0<1/t?0:2147483648,W=0;else if(isNaN(t))V=2147483647,W=4294967295;else if(17976931348623157e292<t)V=(r<<31|2146435072)>>>0,W=0;else if(22250738585072014e-324>t)t/=Math.pow(2,-1074),V=(r<<31|t/4294967296)>>>0,W=t>>>0;else{var n=t,p=0;if(2<=n)for(;2<=n&&1023>p;)p++,n/=2;else for(;1>n&&-1022<p;)n*=2,p--;t*=Math.pow(2,-p),V=(r<<31|p+1023<<20|1048576*t&1048575)>>>0,W=4503599627370496*t>>>0}}function Rt(t){var r=t.charCodeAt(4),n=t.charCodeAt(5),p=t.charCodeAt(6),y=t.charCodeAt(7);W=t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)>>>0,V=r+(n<<8)+(p<<16)+(y<<24)>>>0}function Ut(t,r){return 4294967296*r+(t>>>0)}function ie(t,r){var n=2147483648&r;return n&&(r=~r>>>0,(t=1+~t>>>0)==0&&(r=r+1>>>0)),t=Ut(t,r),n?-t:t}function Se(t,r,n){var p=r>>31;return n(t<<1^p,(r<<1|t>>>31)^p)}function Ni(t,r){return Ee(t,r,ie)}function Ee(t,r,n){var p=-(1&t);return n((t>>>1|r<<31)^p,r>>>1^p)}function Pi(t){var r=2*(t>>31)+1,n=t>>>23&255;return t&=8388607,n==255?t?NaN:1/0*r:n==0?r*Math.pow(2,-149)*t:r*Math.pow(2,n-150)*(t+Math.pow(2,23))}function Ai(t,r){var n=2*(r>>31)+1,p=r>>>20&2047;return t=4294967296*(1048575&r)+t,p==2047?t?NaN:1/0*n:p==0?n*Math.pow(2,-1074)*t:n*Math.pow(2,p-1075)*(t+4503599627370496)}function Oe(t,r){return String.fromCharCode(t>>>0&255,t>>>8&255,t>>>16&255,t>>>24&255,r>>>0&255,r>>>8&255,r>>>16&255,r>>>24&255)}function ne(t,r){function n(y,b){return y=y?String(y):"",b?"0000000".slice(y.length)+y:y}if(2097151>=r)return""+Ut(t,r);var p=(t>>>24|r<<8)>>>0&16777215;return t=(16777215&t)+6777216*p+6710656*(r=r>>16&65535),p+=8147497*r,r*=2,1e7<=t&&(p+=Math.floor(t/1e7),t%=1e7),1e7<=p&&(r+=Math.floor(p/1e7),p%=1e7),n(r,0)+n(p,r)+n(t,1)}function oe(t,r){var n=2147483648&r;return n&&(r=~r+((t=1+~t>>>0)==0?1:0)>>>0),t=ne(t,r),n?"-"+t:t}function Ii(t,r){Rt(t),t=W;var n=V;return r?oe(t,n):ne(t,n)}function se(t){function r(b,O){for(var B=0;8>B&&(b!==1||0<O);B++)O=b*p[B]+O,p[B]=255&O,O>>>=8}m(0<t.length);var n=!1;t[0]==="-"&&(n=!0,t=t.slice(1));for(var p=[0,0,0,0,0,0,0,0],y=0;y<t.length;y++)r(10,t.charCodeAt(y)-48);return n&&(function(){for(var b=0;8>b;b++)p[b]=255&~p[b]}(),r(1,1)),St(p)}function Ci(t){return String.fromCharCode(10>t?48+t:87+t)}function xi(t){return 97<=t?t-97+10:t-48}function Bi(t,r,n,p,y){var b=0;if(128>p)for(;r<n&&t[r++]==p;)b++,r+=y;else for(;r<n;){for(var O=p;128<O;){if(t[r++]!=(127&O|128))return b;O>>=7}if(t[r++]!=O)break;b++,r+=y}return b}function Re(t){return t.constructor===Uint8Array?t:t.constructor===ArrayBuffer||t.constructor===Array?new Uint8Array(t):t.constructor===String?Oi(t):t instanceof Uint8Array?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):(T("Type not convertible to Uint8Array."),new Uint8Array(0))}function S(t,r,n){this.b=null,this.a=this.c=this.h=0,this.v=!1,t&&this.H(t,r,n)}l("jspb.utils.getSplit64Low",function(){return W},void 0),l("jspb.utils.getSplit64High",function(){return V},void 0),l("jspb.utils.splitUint64",Pr,void 0),l("jspb.utils.splitInt64",re,void 0),l("jspb.utils.splitZigzag64",Fi,void 0),l("jspb.utils.splitFloat32",Ti,void 0),l("jspb.utils.splitFloat64",ki,void 0),l("jspb.utils.splitHash64",Rt,void 0),l("jspb.utils.joinUint64",Ut,void 0),l("jspb.utils.joinInt64",ie,void 0),l("jspb.utils.toZigzag64",Se,void 0),l("jspb.utils.joinZigzag64",Ni,void 0),l("jspb.utils.fromZigzag64",Ee,void 0),l("jspb.utils.joinFloat32",Pi,void 0),l("jspb.utils.joinFloat64",Ai,void 0),l("jspb.utils.joinHash64",Oe,void 0),l("jspb.utils.DIGITS","0123456789abcdef".split(""),void 0),l("jspb.utils.joinUnsignedDecimalString",ne,void 0),l("jspb.utils.joinSignedDecimalString",oe,void 0),l("jspb.utils.hash64ToDecimalString",Ii,void 0),l("jspb.utils.hash64ArrayToDecimalStrings",function(t,r){for(var n=Array(t.length),p=0;p<t.length;p++)n[p]=Ii(t[p],r);return n},void 0),l("jspb.utils.decimalStringToHash64",se,void 0),l("jspb.utils.splitDecimalString",function(t){Rt(se(t))},void 0),l("jspb.utils.hash64ToHexString",function(t){var r=Array(18);r[0]="0",r[1]="x";for(var n=0;8>n;n++){var p=t.charCodeAt(7-n);r[2*n+2]=Ci(p>>4),r[2*n+3]=Ci(15&p)}return r.join("")},void 0),l("jspb.utils.hexStringToHash64",function(t){m((t=t.toLowerCase()).length==18),m(t[0]=="0"),m(t[1]=="x");for(var r="",n=0;8>n;n++)r=String.fromCharCode(16*xi(t.charCodeAt(2*n+2))+xi(t.charCodeAt(2*n+3)))+r;return r},void 0),l("jspb.utils.hash64ToNumber",function(t,r){Rt(t),t=W;var n=V;return r?ie(t,n):Ut(t,n)},void 0),l("jspb.utils.numberToHash64",function(t){return re(t),Oe(W,V)},void 0),l("jspb.utils.countVarints",function(t,r,n){for(var p=0,y=r;y<n;y++)p+=t[y]>>7;return n-r-p},void 0),l("jspb.utils.countVarintFields",function(t,r,n,p){var y=0;if(128>(p*=8))for(;r<n&&t[r++]==p;)for(y++;;){var b=t[r++];if(!(128&b))break}else for(;r<n;){for(b=p;128<b;){if(t[r]!=(127&b|128))return y;r++,b>>=7}if(t[r++]!=b)break;for(y++;128&(b=t[r++]););}return y},void 0),l("jspb.utils.countFixed32Fields",function(t,r,n,p){return Bi(t,r,n,8*p+5,4)},void 0),l("jspb.utils.countFixed64Fields",function(t,r,n,p){return Bi(t,r,n,8*p+1,8)},void 0),l("jspb.utils.countDelimitedFields",function(t,r,n,p){var y=0;for(p=8*p+2;r<n;){for(var b=p;128<b;){if(t[r++]!=(127&b|128))return y;b>>=7}if(t[r++]!=b)break;y++;for(var O=0,B=1;O+=(127&(b=t[r++]))*B,B*=128,128&b;);r+=O}return y},void 0),l("jspb.utils.debugBytesToTextFormat",function(t){var r='"';if(t){t=Re(t);for(var n=0;n<t.length;n++)r+="\\x",16>t[n]&&(r+="0"),r+=t[n].toString(16)}return r+'"'},void 0),l("jspb.utils.debugScalarToTextFormat",function(t){if(typeof t=="string"){t=String(t);for(var r=['"'],n=0;n<t.length;n++){var p,y=t.charAt(n),b=y.charCodeAt(0),O=n+1;(p=ct[y])||(31<b&&127>b||((b=y)in _e?y=_e[b]:b in ct?y=_e[b]=ct[b]:(31<(p=b.charCodeAt(0))&&127>p?y=b:(256>p?(y="\\x",(16>p||256<p)&&(y+="0")):(y="\\u",4096>p&&(y+="0")),y+=p.toString(16).toUpperCase()),y=_e[b]=y)),p=y),r[O]=p}r.push('"'),t=r.join("")}else t=t.toString();return t},void 0),l("jspb.utils.stringToByteArray",function(t){for(var r=new Uint8Array(t.length),n=0;n<t.length;n++){var p=t.charCodeAt(n);if(255<p)throw Error("Conversion error: string contains codepoint outside of byte range");r[n]=p}return r},void 0),l("jspb.utils.byteSourceToUint8Array",Re,void 0),l("jspb.BinaryDecoder",S,void 0);var ae=[];function Fe(t,r,n){if(ae.length){var p=ae.pop();return t&&p.H(t,r,n),p}return new S(t,r,n)}function d(t,r,n){this.a=Fe(t,r,n),this.O=this.a.B(),this.b=this.c=-1,this.h=!1,this.v=null}S.getInstanceCacheLength=function(){return ae.length},S.alloc=Fe,S.prototype.Ca=function(){this.clear(),100>ae.length&&ae.push(this)},S.prototype.free=S.prototype.Ca,S.prototype.clone=function(){return Fe(this.b,this.h,this.c-this.h)},S.prototype.clone=S.prototype.clone,S.prototype.clear=function(){this.b=null,this.a=this.c=this.h=0,this.v=!1},S.prototype.clear=S.prototype.clear,S.prototype.Y=function(){return this.b},S.prototype.getBuffer=S.prototype.Y,S.prototype.H=function(t,r,n){this.b=Re(t),this.h=r!==void 0?r:0,this.c=n!==void 0?this.h+n:this.b.length,this.a=this.h},S.prototype.setBlock=S.prototype.H,S.prototype.Db=function(){return this.c},S.prototype.getEnd=S.prototype.Db,S.prototype.setEnd=function(t){this.c=t},S.prototype.setEnd=S.prototype.setEnd,S.prototype.reset=function(){this.a=this.h},S.prototype.reset=S.prototype.reset,S.prototype.B=function(){return this.a},S.prototype.getCursor=S.prototype.B,S.prototype.Ma=function(t){this.a=t},S.prototype.setCursor=S.prototype.Ma,S.prototype.advance=function(t){this.a+=t,m(this.a<=this.c)},S.prototype.advance=S.prototype.advance,S.prototype.ya=function(){return this.a==this.c},S.prototype.atEnd=S.prototype.ya,S.prototype.Qb=function(){return this.a>this.c},S.prototype.pastEnd=S.prototype.Qb,S.prototype.getError=function(){return this.v||0>this.a||this.a>this.c},S.prototype.getError=S.prototype.getError,S.prototype.w=function(t){for(var r=128,n=0,p=0,y=0;4>y&&128<=r;y++)n|=(127&(r=this.b[this.a++]))<<7*y;if(128<=r&&(n|=(127&(r=this.b[this.a++]))<<28,p|=(127&r)>>4),128<=r)for(y=0;5>y&&128<=r;y++)p|=(127&(r=this.b[this.a++]))<<7*y+3;if(128>r)return t(n>>>0,p>>>0);T("Failed to read varint, encoding is invalid."),this.v=!0},S.prototype.readSplitVarint64=S.prototype.w,S.prototype.ea=function(t){return this.w(function(r,n){return Ee(r,n,t)})},S.prototype.readSplitZigzagVarint64=S.prototype.ea,S.prototype.ta=function(t){var r=this.b,n=this.a;this.a+=8;for(var p=0,y=0,b=n+7;b>=n;b--)p=p<<8|r[b],y=y<<8|r[b+4];return t(p,y)},S.prototype.readSplitFixed64=S.prototype.ta,S.prototype.kb=function(){for(;128&this.b[this.a];)this.a++;this.a++},S.prototype.skipVarint=S.prototype.kb,S.prototype.mb=function(t){for(;128<t;)this.a--,t>>>=7;this.a--},S.prototype.unskipVarint=S.prototype.mb,S.prototype.o=function(){var t=this.b,r=t[this.a],n=127&r;return 128>r?(this.a+=1,m(this.a<=this.c),n):(n|=(127&(r=t[this.a+1]))<<7,128>r?(this.a+=2,m(this.a<=this.c),n):(n|=(127&(r=t[this.a+2]))<<14,128>r?(this.a+=3,m(this.a<=this.c),n):(n|=(127&(r=t[this.a+3]))<<21,128>r?(this.a+=4,m(this.a<=this.c),n):(n|=(15&(r=t[this.a+4]))<<28,128>r?(this.a+=5,m(this.a<=this.c),n>>>0):(this.a+=5,128<=t[this.a++]&&128<=t[this.a++]&&128<=t[this.a++]&&128<=t[this.a++]&&128<=t[this.a++]&&m(!1),m(this.a<=this.c),n)))))},S.prototype.readUnsignedVarint32=S.prototype.o,S.prototype.da=function(){return~~this.o()},S.prototype.readSignedVarint32=S.prototype.da,S.prototype.O=function(){return this.o().toString()},S.prototype.Ea=function(){return this.da().toString()},S.prototype.readSignedVarint32String=S.prototype.Ea,S.prototype.Ia=function(){var t=this.o();return t>>>1^-(1&t)},S.prototype.readZigzagVarint32=S.prototype.Ia,S.prototype.Ga=function(){return this.w(Ut)},S.prototype.readUnsignedVarint64=S.prototype.Ga,S.prototype.Ha=function(){return this.w(ne)},S.prototype.readUnsignedVarint64String=S.prototype.Ha,S.prototype.sa=function(){return this.w(ie)},S.prototype.readSignedVarint64=S.prototype.sa,S.prototype.Fa=function(){return this.w(oe)},S.prototype.readSignedVarint64String=S.prototype.Fa,S.prototype.Ja=function(){return this.w(Ni)},S.prototype.readZigzagVarint64=S.prototype.Ja,S.prototype.fb=function(){return this.ea(Oe)},S.prototype.readZigzagVarintHash64=S.prototype.fb,S.prototype.Ka=function(){return this.ea(oe)},S.prototype.readZigzagVarint64String=S.prototype.Ka,S.prototype.Gc=function(){var t=this.b[this.a];return this.a+=1,m(this.a<=this.c),t},S.prototype.readUint8=S.prototype.Gc,S.prototype.Ec=function(){var t=this.b[this.a],r=this.b[this.a+1];return this.a+=2,m(this.a<=this.c),t|r<<8},S.prototype.readUint16=S.prototype.Ec,S.prototype.m=function(){var t=this.b[this.a],r=this.b[this.a+1],n=this.b[this.a+2],p=this.b[this.a+3];return this.a+=4,m(this.a<=this.c),(t|r<<8|n<<16|p<<24)>>>0},S.prototype.readUint32=S.prototype.m,S.prototype.ga=function(){return Ut(this.m(),this.m())},S.prototype.readUint64=S.prototype.ga,S.prototype.ha=function(){return ne(this.m(),this.m())},S.prototype.readUint64String=S.prototype.ha,S.prototype.Xb=function(){var t=this.b[this.a];return this.a+=1,m(this.a<=this.c),t<<24>>24},S.prototype.readInt8=S.prototype.Xb,S.prototype.Vb=function(){var t=this.b[this.a],r=this.b[this.a+1];return this.a+=2,m(this.a<=this.c),(t|r<<8)<<16>>16},S.prototype.readInt16=S.prototype.Vb,S.prototype.P=function(){var t=this.b[this.a],r=this.b[this.a+1],n=this.b[this.a+2],p=this.b[this.a+3];return this.a+=4,m(this.a<=this.c),t|r<<8|n<<16|p<<24},S.prototype.readInt32=S.prototype.P,S.prototype.ba=function(){return ie(this.m(),this.m())},S.prototype.readInt64=S.prototype.ba,S.prototype.ca=function(){return oe(this.m(),this.m())},S.prototype.readInt64String=S.prototype.ca,S.prototype.aa=function(){return Pi(this.m())},S.prototype.readFloat=S.prototype.aa,S.prototype.Z=function(){return Ai(this.m(),this.m())},S.prototype.readDouble=S.prototype.Z,S.prototype.pa=function(){return!!this.b[this.a++]},S.prototype.readBool=S.prototype.pa,S.prototype.ra=function(){return this.da()},S.prototype.readEnum=S.prototype.ra,S.prototype.fa=function(t){var r=this.b,n=this.a;t=n+t;for(var p=[],y="";n<t;){var b=r[n++];if(128>b)p.push(b);else{if(192>b)continue;if(224>b){var O=r[n++];p.push((31&b)<<6|63&O)}else if(240>b){O=r[n++];var B=r[n++];p.push((15&b)<<12|(63&O)<<6|63&B)}else 248>b&&(b=(7&b)<<18|(63&(O=r[n++]))<<12|(63&(B=r[n++]))<<6|63&r[n++],b-=65536,p.push(55296+(b>>10&1023),56320+(1023&b)))}8192<=p.length&&(y+=String.fromCharCode.apply(null,p),p.length=0)}return y+=St(p),this.a=n,y},S.prototype.readString=S.prototype.fa,S.prototype.Dc=function(){var t=this.o();return this.fa(t)},S.prototype.readStringWithLength=S.prototype.Dc,S.prototype.qa=function(t){if(0>t||this.a+t>this.b.length)return this.v=!0,T("Invalid byte length!"),new Uint8Array(0);var r=this.b.subarray(this.a,this.a+t);return this.a+=t,m(this.a<=this.c),r},S.prototype.readBytes=S.prototype.qa,S.prototype.ia=function(){return this.w(Oe)},S.prototype.readVarintHash64=S.prototype.ia,S.prototype.$=function(){var t=this.b,r=this.a,n=t[r],p=t[r+1],y=t[r+2],b=t[r+3],O=t[r+4],B=t[r+5],Q=t[r+6];return t=t[r+7],this.a+=8,String.fromCharCode(n,p,y,b,O,B,Q,t)},S.prototype.readFixedHash64=S.prototype.$,l("jspb.BinaryReader",d,void 0);var Wt=[];function Di(t,r,n){if(Wt.length){var p=Wt.pop();return t&&p.a.H(t,r,n),p}return new d(t,r,n)}function K(t,r){m(t.b==2);var n=t.a.o();n=t.a.B()+n;for(var p=[];t.a.B()<n;)p.push(r.call(t.a));return p}function ce(t,r,n,p,y){this.ma=t,this.Ba=r,this.la=n,this.Na=p,this.na=y}function ji(t,r,n,p,y,b){this.Za=t,this.za=r,this.Aa=n,this.Wa=p,this.Ab=y,this.Nb=b}function R(){}d.clearInstanceCache=function(){Wt=[]},d.getInstanceCacheLength=function(){return Wt.length},d.alloc=Di,d.prototype.zb=Di,d.prototype.alloc=d.prototype.zb,d.prototype.Ca=function(){this.a.clear(),this.b=this.c=-1,this.h=!1,this.v=null,100>Wt.length&&Wt.push(this)},d.prototype.free=d.prototype.Ca,d.prototype.Fb=function(){return this.O},d.prototype.getFieldCursor=d.prototype.Fb,d.prototype.B=function(){return this.a.B()},d.prototype.getCursor=d.prototype.B,d.prototype.Y=function(){return this.a.Y()},d.prototype.getBuffer=d.prototype.Y,d.prototype.Hb=function(){return this.c},d.prototype.getFieldNumber=d.prototype.Hb,d.prototype.Lb=function(){return this.b},d.prototype.getWireType=d.prototype.Lb,d.prototype.Mb=function(){return this.b==2},d.prototype.isDelimited=d.prototype.Mb,d.prototype.bb=function(){return this.b==4},d.prototype.isEndGroup=d.prototype.bb,d.prototype.getError=function(){return this.h||this.a.getError()},d.prototype.getError=d.prototype.getError,d.prototype.H=function(t,r,n){this.a.H(t,r,n),this.b=this.c=-1},d.prototype.setBlock=d.prototype.H,d.prototype.reset=function(){this.a.reset(),this.b=this.c=-1},d.prototype.reset=d.prototype.reset,d.prototype.advance=function(t){this.a.advance(t)},d.prototype.advance=d.prototype.advance,d.prototype.oa=function(){if(this.a.ya())return!1;if(this.getError())return T("Decoder hit an error"),!1;this.O=this.a.B();var t=this.a.o(),r=t>>>3;return(t&=7)!=0&&t!=5&&t!=1&&t!=2&&t!=3&&t!=4?(T("Invalid wire type: %s (at position %s)",t,this.O),this.h=!0,!1):(this.c=r,this.b=t,!0)},d.prototype.nextField=d.prototype.oa,d.prototype.Oa=function(){this.a.mb(this.c<<3|this.b)},d.prototype.unskipHeader=d.prototype.Oa,d.prototype.Lc=function(){var t=this.c;for(this.Oa();this.oa()&&this.c==t;)this.C();this.a.ya()||this.Oa()},d.prototype.skipMatchingFields=d.prototype.Lc,d.prototype.lb=function(){this.b!=0?(T("Invalid wire type for skipVarintField"),this.C()):this.a.kb()},d.prototype.skipVarintField=d.prototype.lb,d.prototype.gb=function(){if(this.b!=2)T("Invalid wire type for skipDelimitedField"),this.C();else{var t=this.a.o();this.a.advance(t)}},d.prototype.skipDelimitedField=d.prototype.gb,d.prototype.hb=function(){this.b!=5?(T("Invalid wire type for skipFixed32Field"),this.C()):this.a.advance(4)},d.prototype.skipFixed32Field=d.prototype.hb,d.prototype.ib=function(){this.b!=1?(T("Invalid wire type for skipFixed64Field"),this.C()):this.a.advance(8)},d.prototype.skipFixed64Field=d.prototype.ib,d.prototype.jb=function(){for(var t=this.c;;){if(!this.oa()){T("Unmatched start-group tag: stream EOF"),this.h=!0;break}if(this.b==4){this.c!=t&&(T("Unmatched end-group tag"),this.h=!0);break}this.C()}},d.prototype.skipGroup=d.prototype.jb,d.prototype.C=function(){switch(this.b){case 0:this.lb();break;case 1:this.ib();break;case 2:this.gb();break;case 5:this.hb();break;case 3:this.jb();break;default:T("Invalid wire encoding for field.")}},d.prototype.skipField=d.prototype.C,d.prototype.Hc=function(t,r){this.v===null&&(this.v={}),m(!this.v[t]),this.v[t]=r},d.prototype.registerReadCallback=d.prototype.Hc,d.prototype.Ic=function(t){return m(this.v!==null),m(t=this.v[t]),t(this)},d.prototype.runReadCallback=d.prototype.Ic,d.prototype.Yb=function(t,r){m(this.b==2);var n=this.a.c,p=this.a.o();p=this.a.B()+p,this.a.setEnd(p),r(t,this),this.a.Ma(p),this.a.setEnd(n)},d.prototype.readMessage=d.prototype.Yb,d.prototype.Ub=function(t,r,n){m(this.b==3),m(this.c==t),n(r,this),this.h||this.b==4||(T("Group submessage did not end with an END_GROUP tag"),this.h=!0)},d.prototype.readGroup=d.prototype.Ub,d.prototype.Gb=function(){m(this.b==2);var t=this.a.o(),r=this.a.B(),n=r+t;return t=Fe(this.a.Y(),r,t),this.a.Ma(n),t},d.prototype.getFieldDecoder=d.prototype.Gb,d.prototype.P=function(){return m(this.b==0),this.a.da()},d.prototype.readInt32=d.prototype.P,d.prototype.Wb=function(){return m(this.b==0),this.a.Ea()},d.prototype.readInt32String=d.prototype.Wb,d.prototype.ba=function(){return m(this.b==0),this.a.sa()},d.prototype.readInt64=d.prototype.ba,d.prototype.ca=function(){return m(this.b==0),this.a.Fa()},d.prototype.readInt64String=d.prototype.ca,d.prototype.m=function(){return m(this.b==0),this.a.o()},d.prototype.readUint32=d.prototype.m,d.prototype.Fc=function(){return m(this.b==0),this.a.O()},d.prototype.readUint32String=d.prototype.Fc,d.prototype.ga=function(){return m(this.b==0),this.a.Ga()},d.prototype.readUint64=d.prototype.ga,d.prototype.ha=function(){return m(this.b==0),this.a.Ha()},d.prototype.readUint64String=d.prototype.ha,d.prototype.zc=function(){return m(this.b==0),this.a.Ia()},d.prototype.readSint32=d.prototype.zc,d.prototype.Ac=function(){return m(this.b==0),this.a.Ja()},d.prototype.readSint64=d.prototype.Ac,d.prototype.Bc=function(){return m(this.b==0),this.a.Ka()},d.prototype.readSint64String=d.prototype.Bc,d.prototype.Rb=function(){return m(this.b==5),this.a.m()},d.prototype.readFixed32=d.prototype.Rb,d.prototype.Sb=function(){return m(this.b==1),this.a.ga()},d.prototype.readFixed64=d.prototype.Sb,d.prototype.Tb=function(){return m(this.b==1),this.a.ha()},d.prototype.readFixed64String=d.prototype.Tb,d.prototype.vc=function(){return m(this.b==5),this.a.P()},d.prototype.readSfixed32=d.prototype.vc,d.prototype.wc=function(){return m(this.b==5),this.a.P().toString()},d.prototype.readSfixed32String=d.prototype.wc,d.prototype.xc=function(){return m(this.b==1),this.a.ba()},d.prototype.readSfixed64=d.prototype.xc,d.prototype.yc=function(){return m(this.b==1),this.a.ca()},d.prototype.readSfixed64String=d.prototype.yc,d.prototype.aa=function(){return m(this.b==5),this.a.aa()},d.prototype.readFloat=d.prototype.aa,d.prototype.Z=function(){return m(this.b==1),this.a.Z()},d.prototype.readDouble=d.prototype.Z,d.prototype.pa=function(){return m(this.b==0),!!this.a.o()},d.prototype.readBool=d.prototype.pa,d.prototype.ra=function(){return m(this.b==0),this.a.sa()},d.prototype.readEnum=d.prototype.ra,d.prototype.fa=function(){m(this.b==2);var t=this.a.o();return this.a.fa(t)},d.prototype.readString=d.prototype.fa,d.prototype.qa=function(){m(this.b==2);var t=this.a.o();return this.a.qa(t)},d.prototype.readBytes=d.prototype.qa,d.prototype.ia=function(){return m(this.b==0),this.a.ia()},d.prototype.readVarintHash64=d.prototype.ia,d.prototype.Cc=function(){return m(this.b==0),this.a.fb()},d.prototype.readSintHash64=d.prototype.Cc,d.prototype.w=function(t){return m(this.b==0),this.a.w(t)},d.prototype.readSplitVarint64=d.prototype.w,d.prototype.ea=function(t){return m(this.b==0),this.a.w(function(r,n){return Ee(r,n,t)})},d.prototype.readSplitZigzagVarint64=d.prototype.ea,d.prototype.$=function(){return m(this.b==1),this.a.$()},d.prototype.readFixedHash64=d.prototype.$,d.prototype.ta=function(t){return m(this.b==1),this.a.ta(t)},d.prototype.readSplitFixed64=d.prototype.ta,d.prototype.gc=function(){return K(this,this.a.da)},d.prototype.readPackedInt32=d.prototype.gc,d.prototype.hc=function(){return K(this,this.a.Ea)},d.prototype.readPackedInt32String=d.prototype.hc,d.prototype.ic=function(){return K(this,this.a.sa)},d.prototype.readPackedInt64=d.prototype.ic,d.prototype.jc=function(){return K(this,this.a.Fa)},d.prototype.readPackedInt64String=d.prototype.jc,d.prototype.qc=function(){return K(this,this.a.o)},d.prototype.readPackedUint32=d.prototype.qc,d.prototype.rc=function(){return K(this,this.a.O)},d.prototype.readPackedUint32String=d.prototype.rc,d.prototype.sc=function(){return K(this,this.a.Ga)},d.prototype.readPackedUint64=d.prototype.sc,d.prototype.tc=function(){return K(this,this.a.Ha)},d.prototype.readPackedUint64String=d.prototype.tc,d.prototype.nc=function(){return K(this,this.a.Ia)},d.prototype.readPackedSint32=d.prototype.nc,d.prototype.oc=function(){return K(this,this.a.Ja)},d.prototype.readPackedSint64=d.prototype.oc,d.prototype.pc=function(){return K(this,this.a.Ka)},d.prototype.readPackedSint64String=d.prototype.pc,d.prototype.bc=function(){return K(this,this.a.m)},d.prototype.readPackedFixed32=d.prototype.bc,d.prototype.cc=function(){return K(this,this.a.ga)},d.prototype.readPackedFixed64=d.prototype.cc,d.prototype.dc=function(){return K(this,this.a.ha)},d.prototype.readPackedFixed64String=d.prototype.dc,d.prototype.kc=function(){return K(this,this.a.P)},d.prototype.readPackedSfixed32=d.prototype.kc,d.prototype.lc=function(){return K(this,this.a.ba)},d.prototype.readPackedSfixed64=d.prototype.lc,d.prototype.mc=function(){return K(this,this.a.ca)},d.prototype.readPackedSfixed64String=d.prototype.mc,d.prototype.fc=function(){return K(this,this.a.aa)},d.prototype.readPackedFloat=d.prototype.fc,d.prototype.$b=function(){return K(this,this.a.Z)},d.prototype.readPackedDouble=d.prototype.$b,d.prototype.Zb=function(){return K(this,this.a.pa)},d.prototype.readPackedBool=d.prototype.Zb,d.prototype.ac=function(){return K(this,this.a.ra)},d.prototype.readPackedEnum=d.prototype.ac,d.prototype.uc=function(){return K(this,this.a.ia)},d.prototype.readPackedVarintHash64=d.prototype.uc,d.prototype.ec=function(){return K(this,this.a.$)},d.prototype.readPackedFixedHash64=d.prototype.ec,l("jspb.ExtensionFieldInfo",ce,void 0),l("jspb.ExtensionFieldBinaryInfo",ji,void 0),ce.prototype.F=function(){return!!this.la},ce.prototype.isMessageType=ce.prototype.F,l("jspb.Message",R,void 0),R.GENERATE_TO_OBJECT=!0,R.GENERATE_FROM_OBJECT=!0;var Te=typeof Uint8Array=="function";R.prototype.Ib=function(){return this.b},R.prototype.getJsPbMessageId=R.prototype.Ib,R.initialize=function(t,r,n,p,y,b){if(t.f=null,r||(r=n?[n]:[]),t.b=n?String(n):void 0,t.D=n===0?-1:0,t.u=r,r=-1,!(n=t.u.length)||(r=n-1,(n=t.u[r])===null||typeof n!="object"||Array.isArray(n)||Te&&n instanceof Uint8Array)?-1<p?(t.G=Math.max(p,r+1-t.D),t.i=null):t.G=Number.MAX_VALUE:(t.G=r-t.D,t.i=n),t.a={},y)for(p=0;p<y.length;p++)(r=y[p])<t.G?(r+=t.D,t.u[r]=t.u[r]||pe):(ke(t),t.i[r]=t.i[r]||pe);if(b&&b.length)for(p=0;p<b.length;p++)Ar(t,b[p])};var pe=Object.freeze?Object.freeze([]):[];function ke(t){var r=t.G+t.D;t.u[r]||(t.i=t.u[r]={})}function Mi(t,r,n){for(var p=[],y=0;y<t.length;y++)p[y]=r.call(t[y],n,t[y]);return p}function st(t,r){if(r<t.G){r+=t.D;var n=t.u[r];return n===pe?t.u[r]=[]:n}if(t.i)return(n=t.i[r])===pe?t.i[r]=[]:n}function Li(t,r){return(t=st(t,r))==null?t:+t}function Ui(t,r){return(t=st(t,r))==null?t:!!t}function Wi(t){return t==null||typeof t=="string"?t:Te&&t instanceof Uint8Array?Ei(t):(T("Cannot coerce to b64 string: "+h(t)),null)}function qi(t){return t==null||t instanceof Uint8Array?t:typeof t=="string"?Oi(t):(T("Cannot coerce to Uint8Array: "+h(t)),null)}function $i(t){if(t&&1<t.length){var r=h(t[0]);A(t,function(n){h(n)!=r&&T("Inconsistent type in JSPB repeated field array. Got "+h(n)+" expected "+r)})}}function Vi(t,r,n){return(t=st(t,r))==null?n:t}function Et(t,r,n){return N(t,R),r<t.G?t.u[r+t.D]=n:(ke(t),t.i[r]=n),t}function Bt(t,r,n,p){return N(t,R),n!==p?Et(t,r,n):r<t.G?t.u[r+t.D]=null:(ke(t),delete t.i[r]),t}function zi(t,r,n,p){return N(t,R),(n=Ar(t,n))&&n!==r&&p!==void 0&&(t.f&&n in t.f&&(t.f[n]=void 0),Et(t,n,void 0)),Et(t,r,p)}function Ar(t,r){for(var n,p,y=0;y<r.length;y++){var b=r[y],O=st(t,b);O!=null&&(n=b,p=O,Et(t,b,void 0))}return n?(Et(t,n,p),n):0}function Hi(t,r,n){if(t.f||(t.f={}),!t.f[n]){for(var p=st(t,n),y=[],b=0;b<p.length;b++)y[b]=new r(p[b]);t.f[n]=y}}function Ki(t){if(t.f)for(var r in t.f){var n=t.f[r];if(Array.isArray(n))for(var p=0;p<n.length;p++)n[p]&&n[p].g();else n&&n.g()}}function Ir(t,r){t=t||{},r=r||{};var n,p={};for(n in t)p[n]=0;for(n in r)p[n]=0;for(n in p)if(!ue(t[n],r[n]))return!1;return!0}function ue(t,r){if(t==r)return!0;if(!v(t)||!v(r))return!!(typeof t=="number"&&isNaN(t)||typeof r=="number"&&isNaN(r))&&String(t)==String(r);if(t.constructor!=r.constructor)return!1;if(Te&&t.constructor===Uint8Array){if(t.length!=r.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!=r[n])return!1;return!0}if(t.constructor===Array){var p=void 0,y=void 0,b=Math.max(t.length,r.length);for(n=0;n<b;n++){var O=t[n],B=r[n];if(O&&O.constructor==Object&&(m(p===void 0),m(n===t.length-1),p=O,O=void 0),B&&B.constructor==Object&&(m(y===void 0),m(n===r.length-1),y=B,B=void 0),!ue(O,B))return!1}return!p&&!y||Ir(p=p||{},y=y||{})}if(t.constructor===Object)return Ir(t,r);throw Error("Invalid type in JSPB array")}function Ne(t){return new t.constructor(Cr(t.g()))}function Cr(t){if(Array.isArray(t)){for(var r=Array(t.length),n=0;n<t.length;n++){var p=t[n];p!=null&&(r[n]=typeof p=="object"?Cr(m(p)):p)}return r}if(Te&&t instanceof Uint8Array)return new Uint8Array(t);for(n in r={},t)(p=t[n])!=null&&(r[n]=typeof p=="object"?Cr(m(p)):p);return r}R.toObjectList=Mi,R.toObjectExtension=function(t,r,n,p,y){for(var b in n){var O=n[b],B=p.call(t,O);if(B!=null){for(var Q in O.Ba)if(O.Ba.hasOwnProperty(Q))break;r[Q]=O.Na?O.na?Mi(B,O.Na,y):O.Na(y,B):B}}},R.serializeBinaryExtensions=function(t,r,n,p){for(var y in n){var b=n[y],O=b.Za;if(!b.Aa)throw Error("Message extension present that was generated without binary serialization support");var B=p.call(t,O);if(B!=null)if(O.F()){if(!b.Wa)throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");b.Aa.call(r,O.ma,B,b.Wa)}else b.Aa.call(r,O.ma,B)}},R.readBinaryExtension=function(t,r,n,p,y){var b=n[r.c];if(b){if(n=b.Za,!b.za)throw Error("Deserializing extension whose generated code does not support binary format");if(n.F()){var O=new n.la;b.za.call(r,O,b.Ab)}else O=b.za.call(r);n.na&&!b.Nb?(r=p.call(t,n))?r.push(O):y.call(t,n,[O]):y.call(t,n,O)}else r.C()},R.getField=st,R.getRepeatedField=function(t,r){return st(t,r)},R.getOptionalFloatingPointField=Li,R.getBooleanField=Ui,R.getRepeatedFloatingPointField=function(t,r){var n=st(t,r);if(t.a||(t.a={}),!t.a[r]){for(var p=0;p<n.length;p++)n[p]=+n[p];t.a[r]=!0}return n},R.getRepeatedBooleanField=function(t,r){var n=st(t,r);if(t.a||(t.a={}),!t.a[r]){for(var p=0;p<n.length;p++)n[p]=!!n[p];t.a[r]=!0}return n},R.bytesAsB64=Wi,R.bytesAsU8=qi,R.bytesListAsB64=function(t){return $i(t),t.length&&typeof t[0]!="string"?D(t,Wi):t},R.bytesListAsU8=function(t){return $i(t),!t.length||t[0]instanceof Uint8Array?t:D(t,qi)},R.getFieldWithDefault=Vi,R.getBooleanFieldWithDefault=function(t,r,n){return(t=Ui(t,r))==null?n:t},R.getFloatingPointFieldWithDefault=function(t,r,n){return(t=Li(t,r))==null?n:t},R.getFieldProto3=Vi,R.getMapField=function(t,r,n,p){if(t.f||(t.f={}),r in t.f)return t.f[r];var y=st(t,r);if(!y){if(n)return;Et(t,r,y=[])}return t.f[r]=new P(y,p)},R.setField=Et,R.setProto3IntField=function(t,r,n){return Bt(t,r,n,0)},R.setProto3FloatField=function(t,r,n){return Bt(t,r,n,0)},R.setProto3BooleanField=function(t,r,n){return Bt(t,r,n,!1)},R.setProto3StringField=function(t,r,n){return Bt(t,r,n,"")},R.setProto3BytesField=function(t,r,n){return Bt(t,r,n,"")},R.setProto3EnumField=function(t,r,n){return Bt(t,r,n,0)},R.setProto3StringIntField=function(t,r,n){return Bt(t,r,n,"0")},R.addToRepeatedField=function(t,r,n,p){return N(t,R),r=st(t,r),p!=null?r.splice(p,0,n):r.push(n),t},R.setOneofField=zi,R.computeOneofCase=Ar,R.getWrapperField=function(t,r,n,p){if(t.f||(t.f={}),!t.f[n]){var y=st(t,n);(p||y)&&(t.f[n]=new r(y))}return t.f[n]},R.getRepeatedWrapperField=function(t,r,n){return Hi(t,r,n),(r=t.f[n])==pe&&(r=t.f[n]=[]),r},R.setWrapperField=function(t,r,n){N(t,R),t.f||(t.f={});var p=n&&n.g();return t.f[r]=n,Et(t,r,p)},R.setOneofWrapperField=function(t,r,n,p){N(t,R),t.f||(t.f={});var y=p&&p.g();return t.f[r]=p,zi(t,r,n,y)},R.setRepeatedWrapperField=function(t,r,n){N(t,R),t.f||(t.f={}),n=n||[];for(var p=[],y=0;y<n.length;y++)p[y]=n[y].g();return t.f[r]=n,Et(t,r,p)},R.addToRepeatedWrapperField=function(t,r,n,p,y){Hi(t,p,r);var b=t.f[r];return b||(b=t.f[r]=[]),n=n||new p,t=st(t,r),y!=null?(b.splice(y,0,n),t.splice(y,0,n.g())):(b.push(n),t.push(n.g())),n},R.toMap=function(t,r,n,p){for(var y={},b=0;b<t.length;b++)y[r.call(t[b])]=n?n.call(t[b],p,t[b]):t[b];return y},R.prototype.g=function(){return Ki(this),this.u},R.prototype.toArray=R.prototype.g,R.prototype.toString=function(){return Ki(this),this.u.toString()},R.prototype.getExtension=function(t){if(this.i){this.f||(this.f={});var r=t.ma;if(t.na){if(t.F())return this.f[r]||(this.f[r]=D(this.i[r]||[],function(n){return new t.la(n)})),this.f[r]}else if(t.F())return!this.f[r]&&this.i[r]&&(this.f[r]=new t.la(this.i[r])),this.f[r];return this.i[r]}},R.prototype.getExtension=R.prototype.getExtension,R.prototype.Kc=function(t,r){this.f||(this.f={}),ke(this);var n=t.ma;return t.na?(r=r||[],t.F()?(this.f[n]=r,this.i[n]=D(r,function(p){return p.g()})):this.i[n]=r):t.F()?(this.f[n]=r,this.i[n]=r&&r.g()):this.i[n]=r,this},R.prototype.setExtension=R.prototype.Kc,R.difference=function(t,r){if(!(t instanceof r.constructor))throw Error("Messages have different types.");var n=t.g();r=r.g();var p=[],y=0,b=n.length>r.length?n.length:r.length;for(t.b&&(p[0]=t.b,y=1);y<b;y++)ue(n[y],r[y])||(p[y]=r[y]);return new t.constructor(p)},R.equals=function(t,r){return t==r||!(!t||!r)&&t instanceof r.constructor&&ue(t.g(),r.g())},R.compareExtensions=Ir,R.compareFields=ue,R.prototype.Bb=function(){return Ne(this)},R.prototype.cloneMessage=R.prototype.Bb,R.prototype.clone=function(){return Ne(this)},R.prototype.clone=R.prototype.clone,R.clone=function(t){return Ne(t)},R.copyInto=function(t,r){N(t,R),N(r,R),m(t.constructor==r.constructor,"Copy source and target message should have the same type."),t=Ne(t);for(var n=r.g(),p=t.g(),y=n.length=0;y<p.length;y++)n[y]=p[y];r.f=t.f,r.i=t.i},R.registerMessageType=function(t,r){r.we=t};var yt={dump:function(t){return N(t,R,"jspb.Message instance expected"),m(t.getExtension,"Only unobfuscated and unoptimized compilation modes supported."),yt.X(t)}};function E(){this.a=[]}function C(t,r){this.lo=t,this.hi=r}function xr(t,r){var n=65535&t,p=65535&r,y=r>>>16;for(r=n*p+65536*(n*y&65535)+65536*((t>>>=16)*p&65535),n=t*y+(n*y>>>16)+(t*p>>>16);4294967296<=r;)r-=4294967296,n+=1;return new C(r>>>0,n>>>0)}function qt(t){for(var r=new C(0,0),n=new C(0,0),p=0;p<t.length;p++){if("0">t[p]||"9"<t[p])return null;n.lo=parseInt(t[p],10),r=r.eb(10).add(n)}return r}function Z(t,r){this.lo=t,this.hi=r}function Pe(t){var r=0<t.length&&t[0]=="-";return r&&(t=t.substring(1)),(t=qt(t))===null?null:(r&&(t=new C(0,0).sub(t)),new Z(t.lo,t.hi))}function u(){this.c=[],this.b=0,this.a=new E,this.h=[]}function Yi(t,r){var n=t.a.end();t.c.push(n),t.c.push(r),t.b+=n.length+r.length}function Y(t,r){return j(t,r,2),r=t.a.end(),t.c.push(r),t.b+=r.length,r.push(t.b),r}function G(t,r){var n=r.pop();for(m(0<=(n=t.b+t.a.length()-n));127<n;)r.push(127&n|128),n>>>=7,t.b++;r.push(n),t.b++}function j(t,r,n){m(1<=r&&r==Math.floor(r)),t.a.j(8*r+n)}function Br(t,r,n){n!=null&&(j(t,r,0),t.a.j(n))}function Dr(t,r,n){n!=null&&(j(t,r,0),t.a.M(n))}l("jspb.debug.dump",yt.dump,void 0),yt.X=function(t){var r=h(t);if(r=="number"||r=="string"||r=="boolean"||r=="null"||r=="undefined"||typeof Uint8Array<"u"&&t instanceof Uint8Array)return t;if(r=="array")return function($t,le,Ae){for(var Ie=[],Ft=2;Ft<arguments.length;++Ft)Ie[Ft-2]=arguments[Ft];Array.isArray($t)||F("Expected array but got %s: %s.",[h($t),$t],le,Ie)}(t),D(t,yt.X);if(t instanceof P){for(var n={},p=(t=t.entries()).next();!p.done;p=t.next())n[p.value[0]]=yt.X(p.value[1]);return n}N(t,R,"Only messages expected: "+t);var y={$name:(r=t.constructor).name||r.displayName};for(B in r.prototype){var b=/^get([A-Z]\w*)/.exec(B);if(b&&B!="getExtension"&&B!="getJsPbMessageId"){var O="has"+b[1];t[O]&&!t[O]()||(O=t[B](),y[yt.$a(b[1])]=yt.X(O))}}if(t.extensionObject_)return y.$extensions="Recursive dumping of extensions not supported in compiled code. Switch to uncompiled or dump extension object directly",y;for(p in r.extensions)if(/^\d+$/.test(p)){O=r.extensions[p];var B=t.getExtension(O);b=void 0,O=O.Ba;var Q=[],gt=0;for(b in O)Q[gt++]=b;b=Q[0],B!=null&&(n||(n=y.$extensions={}),n[yt.$a(b)]=yt.X(B))}return y},yt.$a=function(t){return t.replace(/^[A-Z]/,function(r){return r.toLowerCase()})},l("jspb.BinaryEncoder",E,void 0),E.prototype.length=function(){return this.a.length},E.prototype.length=E.prototype.length,E.prototype.end=function(){var t=this.a;return this.a=[],t},E.prototype.end=E.prototype.end,E.prototype.l=function(t,r){for(m(t==Math.floor(t)),m(r==Math.floor(r)),m(0<=t&&4294967296>t),m(0<=r&&4294967296>r);0<r||127<t;)this.a.push(127&t|128),t=(t>>>7|r<<25)>>>0,r>>>=7;this.a.push(t)},E.prototype.writeSplitVarint64=E.prototype.l,E.prototype.A=function(t,r){m(t==Math.floor(t)),m(r==Math.floor(r)),m(0<=t&&4294967296>t),m(0<=r&&4294967296>r),this.s(t),this.s(r)},E.prototype.writeSplitFixed64=E.prototype.A,E.prototype.j=function(t){for(m(t==Math.floor(t)),m(0<=t&&4294967296>t);127<t;)this.a.push(127&t|128),t>>>=7;this.a.push(t)},E.prototype.writeUnsignedVarint32=E.prototype.j,E.prototype.M=function(t){if(m(t==Math.floor(t)),m(-2147483648<=t&&2147483648>t),0<=t)this.j(t);else{for(var r=0;9>r;r++)this.a.push(127&t|128),t>>=7;this.a.push(1)}},E.prototype.writeSignedVarint32=E.prototype.M,E.prototype.va=function(t){m(t==Math.floor(t)),m(0<=t&&18446744073709552e3>t),re(t),this.l(W,V)},E.prototype.writeUnsignedVarint64=E.prototype.va,E.prototype.ua=function(t){m(t==Math.floor(t)),m(-9223372036854776e3<=t&&9223372036854776e3>t),re(t),this.l(W,V)},E.prototype.writeSignedVarint64=E.prototype.ua,E.prototype.wa=function(t){m(t==Math.floor(t)),m(-2147483648<=t&&2147483648>t),this.j((t<<1^t>>31)>>>0)},E.prototype.writeZigzagVarint32=E.prototype.wa,E.prototype.xa=function(t){m(t==Math.floor(t)),m(-9223372036854776e3<=t&&9223372036854776e3>t),Fi(t),this.l(W,V)},E.prototype.writeZigzagVarint64=E.prototype.xa,E.prototype.Ta=function(t){this.W(se(t))},E.prototype.writeZigzagVarint64String=E.prototype.Ta,E.prototype.W=function(t){var r=this;Rt(t),Se(W,V,function(n,p){r.l(n>>>0,p>>>0)})},E.prototype.writeZigzagVarintHash64=E.prototype.W,E.prototype.be=function(t){m(t==Math.floor(t)),m(0<=t&&256>t),this.a.push(t>>>0&255)},E.prototype.writeUint8=E.prototype.be,E.prototype.ae=function(t){m(t==Math.floor(t)),m(0<=t&&65536>t),this.a.push(t>>>0&255),this.a.push(t>>>8&255)},E.prototype.writeUint16=E.prototype.ae,E.prototype.s=function(t){m(t==Math.floor(t)),m(0<=t&&4294967296>t),this.a.push(t>>>0&255),this.a.push(t>>>8&255),this.a.push(t>>>16&255),this.a.push(t>>>24&255)},E.prototype.writeUint32=E.prototype.s,E.prototype.V=function(t){m(t==Math.floor(t)),m(0<=t&&18446744073709552e3>t),Pr(t),this.s(W),this.s(V)},E.prototype.writeUint64=E.prototype.V,E.prototype.Qc=function(t){m(t==Math.floor(t)),m(-128<=t&&128>t),this.a.push(t>>>0&255)},E.prototype.writeInt8=E.prototype.Qc,E.prototype.Pc=function(t){m(t==Math.floor(t)),m(-32768<=t&&32768>t),this.a.push(t>>>0&255),this.a.push(t>>>8&255)},E.prototype.writeInt16=E.prototype.Pc,E.prototype.S=function(t){m(t==Math.floor(t)),m(-2147483648<=t&&2147483648>t),this.a.push(t>>>0&255),this.a.push(t>>>8&255),this.a.push(t>>>16&255),this.a.push(t>>>24&255)},E.prototype.writeInt32=E.prototype.S,E.prototype.T=function(t){m(t==Math.floor(t)),m(-9223372036854776e3<=t&&9223372036854776e3>t),re(t),this.A(W,V)},E.prototype.writeInt64=E.prototype.T,E.prototype.ka=function(t){m(t==Math.floor(t)),m(-9223372036854776e3<=+t&&9223372036854776e3>+t),Rt(se(t)),this.A(W,V)},E.prototype.writeInt64String=E.prototype.ka,E.prototype.L=function(t){m(t===1/0||t===-1/0||isNaN(t)||-34028234663852886e22<=t&&34028234663852886e22>=t),Ti(t),this.s(W)},E.prototype.writeFloat=E.prototype.L,E.prototype.J=function(t){m(t===1/0||t===-1/0||isNaN(t)||-17976931348623157e292<=t&&17976931348623157e292>=t),ki(t),this.s(W),this.s(V)},E.prototype.writeDouble=E.prototype.J,E.prototype.I=function(t){m(typeof t=="boolean"||typeof t=="number"),this.a.push(t?1:0)},E.prototype.writeBool=E.prototype.I,E.prototype.R=function(t){m(t==Math.floor(t)),m(-2147483648<=t&&2147483648>t),this.M(t)},E.prototype.writeEnum=E.prototype.R,E.prototype.ja=function(t){this.a.push.apply(this.a,t)},E.prototype.writeBytes=E.prototype.ja,E.prototype.N=function(t){Rt(t),this.l(W,V)},E.prototype.writeVarintHash64=E.prototype.N,E.prototype.K=function(t){Rt(t),this.s(W),this.s(V)},E.prototype.writeFixedHash64=E.prototype.K,E.prototype.U=function(t){var r=this.a.length;(function(b,O,B){for(var Q=[],gt=2;gt<arguments.length;++gt)Q[gt-2]=arguments[gt];typeof b!="string"&&F("Expected string but got %s: %s.",[h(b),b],O,Q)})(t);for(var n=0;n<t.length;n++){var p=t.charCodeAt(n);if(128>p)this.a.push(p);else if(2048>p)this.a.push(p>>6|192),this.a.push(63&p|128);else if(65536>p)if(55296<=p&&56319>=p&&n+1<t.length){var y=t.charCodeAt(n+1);56320<=y&&57343>=y&&(p=1024*(p-55296)+y-56320+65536,this.a.push(p>>18|240),this.a.push(p>>12&63|128),this.a.push(p>>6&63|128),this.a.push(63&p|128),n++)}else this.a.push(p>>12|224),this.a.push(p>>6&63|128),this.a.push(63&p|128)}return this.a.length-r},E.prototype.writeString=E.prototype.U,l("jspb.arith.UInt64",C,void 0),C.prototype.cmp=function(t){return this.hi<t.hi||this.hi==t.hi&&this.lo<t.lo?-1:this.hi==t.hi&&this.lo==t.lo?0:1},C.prototype.cmp=C.prototype.cmp,C.prototype.La=function(){return new C((this.lo>>>1|(1&this.hi)<<31)>>>0,this.hi>>>1>>>0)},C.prototype.rightShift=C.prototype.La,C.prototype.Da=function(){return new C(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)},C.prototype.leftShift=C.prototype.Da,C.prototype.cb=function(){return!!(2147483648&this.hi)},C.prototype.msb=C.prototype.cb,C.prototype.Ob=function(){return!!(1&this.lo)},C.prototype.lsb=C.prototype.Ob,C.prototype.Ua=function(){return this.lo==0&&this.hi==0},C.prototype.zero=C.prototype.Ua,C.prototype.add=function(t){return new C((this.lo+t.lo&4294967295)>>>0>>>0,((this.hi+t.hi&4294967295)>>>0)+(4294967296<=this.lo+t.lo?1:0)>>>0)},C.prototype.add=C.prototype.add,C.prototype.sub=function(t){return new C((this.lo-t.lo&4294967295)>>>0>>>0,((this.hi-t.hi&4294967295)>>>0)-(0>this.lo-t.lo?1:0)>>>0)},C.prototype.sub=C.prototype.sub,C.mul32x32=xr,C.prototype.eb=function(t){var r=xr(this.lo,t);return(t=xr(this.hi,t)).hi=t.lo,t.lo=0,r.add(t)},C.prototype.mul=C.prototype.eb,C.prototype.Xa=function(t){if(t==0)return[];var r=new C(0,0),n=new C(this.lo,this.hi);t=new C(t,0);for(var p=new C(1,0);!t.cb();)t=t.Da(),p=p.Da();for(;!p.Ua();)0>=t.cmp(n)&&(r=r.add(p),n=n.sub(t)),t=t.La(),p=p.La();return[r,n]},C.prototype.div=C.prototype.Xa,C.prototype.toString=function(){for(var t="",r=this;!r.Ua();){var n=(r=r.Xa(10))[0];t=r[1].lo+t,r=n}return t==""&&(t="0"),t},C.prototype.toString=C.prototype.toString,C.fromString=qt,C.prototype.clone=function(){return new C(this.lo,this.hi)},C.prototype.clone=C.prototype.clone,l("jspb.arith.Int64",Z,void 0),Z.prototype.add=function(t){return new Z((this.lo+t.lo&4294967295)>>>0>>>0,((this.hi+t.hi&4294967295)>>>0)+(4294967296<=this.lo+t.lo?1:0)>>>0)},Z.prototype.add=Z.prototype.add,Z.prototype.sub=function(t){return new Z((this.lo-t.lo&4294967295)>>>0>>>0,((this.hi-t.hi&4294967295)>>>0)-(0>this.lo-t.lo?1:0)>>>0)},Z.prototype.sub=Z.prototype.sub,Z.prototype.clone=function(){return new Z(this.lo,this.hi)},Z.prototype.clone=Z.prototype.clone,Z.prototype.toString=function(){var t=!!(2147483648&this.hi),r=new C(this.lo,this.hi);return t&&(r=new C(0,0).sub(r)),(t?"-":"")+r.toString()},Z.prototype.toString=Z.prototype.toString,Z.fromString=Pe,l("jspb.BinaryWriter",u,void 0),u.prototype.pb=function(t,r,n){Yi(this,t.subarray(r,n))},u.prototype.writeSerializedMessage=u.prototype.pb,u.prototype.Pb=function(t,r,n){t!=null&&r!=null&&n!=null&&this.pb(t,r,n)},u.prototype.maybeWriteSerializedMessage=u.prototype.Pb,u.prototype.reset=function(){this.c=[],this.a.end(),this.b=0,this.h=[]},u.prototype.reset=u.prototype.reset,u.prototype.ab=function(){m(this.h.length==0);for(var t=new Uint8Array(this.b+this.a.length()),r=this.c,n=r.length,p=0,y=0;y<n;y++){var b=r[y];t.set(b,p),p+=b.length}return r=this.a.end(),t.set(r,p),m((p+=r.length)==t.length),this.c=[t],t},u.prototype.getResultBuffer=u.prototype.ab,u.prototype.Kb=function(t){return Ei(this.ab(),t)},u.prototype.getResultBase64String=u.prototype.Kb,u.prototype.Va=function(t){this.h.push(Y(this,t))},u.prototype.beginSubMessage=u.prototype.Va,u.prototype.Ya=function(){m(0<=this.h.length),G(this,this.h.pop())},u.prototype.endSubMessage=u.prototype.Ya,u.prototype.Nc=function(t,r,n){switch(t){case 1:this.J(r,n);break;case 2:this.L(r,n);break;case 3:this.T(r,n);break;case 4:this.V(r,n);break;case 5:this.S(r,n);break;case 6:this.Qa(r,n);break;case 7:this.Pa(r,n);break;case 8:this.I(r,n);break;case 9:this.U(r,n);break;case 10:T("Group field type not supported in writeAny()");break;case 11:T("Message field type not supported in writeAny()");break;case 12:this.ja(r,n);break;case 13:this.s(r,n);break;case 14:this.R(r,n);break;case 15:this.Ra(r,n);break;case 16:this.Sa(r,n);break;case 17:this.rb(r,n);break;case 18:this.sb(r,n);break;case 30:this.K(r,n);break;case 31:this.N(r,n);break;default:T("Invalid field type in writeAny()")}},u.prototype.writeAny=u.prototype.Nc,u.prototype.S=function(t,r){r!=null&&(m(-2147483648<=r&&2147483648>r),Dr(this,t,r))},u.prototype.writeInt32=u.prototype.S,u.prototype.ob=function(t,r){r!=null&&(m(-2147483648<=(r=parseInt(r,10))&&2147483648>r),Dr(this,t,r))},u.prototype.writeInt32String=u.prototype.ob,u.prototype.T=function(t,r){r!=null&&(m(-9223372036854776e3<=r&&9223372036854776e3>r),r!=null&&(j(this,t,0),this.a.ua(r)))},u.prototype.writeInt64=u.prototype.T,u.prototype.ka=function(t,r){r!=null&&(r=Pe(r),j(this,t,0),this.a.l(r.lo,r.hi))},u.prototype.writeInt64String=u.prototype.ka,u.prototype.s=function(t,r){r!=null&&(m(0<=r&&4294967296>r),Br(this,t,r))},u.prototype.writeUint32=u.prototype.s,u.prototype.ub=function(t,r){r!=null&&(m(0<=(r=parseInt(r,10))&&4294967296>r),Br(this,t,r))},u.prototype.writeUint32String=u.prototype.ub,u.prototype.V=function(t,r){r!=null&&(m(0<=r&&18446744073709552e3>r),r!=null&&(j(this,t,0),this.a.va(r)))},u.prototype.writeUint64=u.prototype.V,u.prototype.vb=function(t,r){r!=null&&(r=qt(r),j(this,t,0),this.a.l(r.lo,r.hi))},u.prototype.writeUint64String=u.prototype.vb,u.prototype.rb=function(t,r){r!=null&&(m(-2147483648<=r&&2147483648>r),r!=null&&(j(this,t,0),this.a.wa(r)))},u.prototype.writeSint32=u.prototype.rb,u.prototype.sb=function(t,r){r!=null&&(m(-9223372036854776e3<=r&&9223372036854776e3>r),r!=null&&(j(this,t,0),this.a.xa(r)))},u.prototype.writeSint64=u.prototype.sb,u.prototype.$d=function(t,r){r!=null&&r!=null&&(j(this,t,0),this.a.W(r))},u.prototype.writeSintHash64=u.prototype.$d,u.prototype.Zd=function(t,r){r!=null&&r!=null&&(j(this,t,0),this.a.Ta(r))},u.prototype.writeSint64String=u.prototype.Zd,u.prototype.Pa=function(t,r){r!=null&&(m(0<=r&&4294967296>r),j(this,t,5),this.a.s(r))},u.prototype.writeFixed32=u.prototype.Pa,u.prototype.Qa=function(t,r){r!=null&&(m(0<=r&&18446744073709552e3>r),j(this,t,1),this.a.V(r))},u.prototype.writeFixed64=u.prototype.Qa,u.prototype.nb=function(t,r){r!=null&&(r=qt(r),j(this,t,1),this.a.A(r.lo,r.hi))},u.prototype.writeFixed64String=u.prototype.nb,u.prototype.Ra=function(t,r){r!=null&&(m(-2147483648<=r&&2147483648>r),j(this,t,5),this.a.S(r))},u.prototype.writeSfixed32=u.prototype.Ra,u.prototype.Sa=function(t,r){r!=null&&(m(-9223372036854776e3<=r&&9223372036854776e3>r),j(this,t,1),this.a.T(r))},u.prototype.writeSfixed64=u.prototype.Sa,u.prototype.qb=function(t,r){r!=null&&(r=Pe(r),j(this,t,1),this.a.A(r.lo,r.hi))},u.prototype.writeSfixed64String=u.prototype.qb,u.prototype.L=function(t,r){r!=null&&(j(this,t,5),this.a.L(r))},u.prototype.writeFloat=u.prototype.L,u.prototype.J=function(t,r){r!=null&&(j(this,t,1),this.a.J(r))},u.prototype.writeDouble=u.prototype.J,u.prototype.I=function(t,r){r!=null&&(m(typeof r=="boolean"||typeof r=="number"),j(this,t,0),this.a.I(r))},u.prototype.writeBool=u.prototype.I,u.prototype.R=function(t,r){r!=null&&(m(-2147483648<=r&&2147483648>r),j(this,t,0),this.a.M(r))},u.prototype.writeEnum=u.prototype.R,u.prototype.U=function(t,r){r!=null&&(t=Y(this,t),this.a.U(r),G(this,t))},u.prototype.writeString=u.prototype.U,u.prototype.ja=function(t,r){r!=null&&(r=Re(r),j(this,t,2),this.a.j(r.length),Yi(this,r))},u.prototype.writeBytes=u.prototype.ja,u.prototype.Rc=function(t,r,n){r!=null&&(t=Y(this,t),n(r,this),G(this,t))},u.prototype.writeMessage=u.prototype.Rc,u.prototype.Sc=function(t,r,n){r!=null&&(j(this,1,3),j(this,2,0),this.a.M(t),t=Y(this,3),n(r,this),G(this,t),j(this,1,4))},u.prototype.writeMessageSet=u.prototype.Sc,u.prototype.Oc=function(t,r,n){r!=null&&(j(this,t,3),n(r,this),j(this,t,4))},u.prototype.writeGroup=u.prototype.Oc,u.prototype.K=function(t,r){r!=null&&(m(r.length==8),j(this,t,1),this.a.K(r))},u.prototype.writeFixedHash64=u.prototype.K,u.prototype.N=function(t,r){r!=null&&(m(r.length==8),j(this,t,0),this.a.N(r))},u.prototype.writeVarintHash64=u.prototype.N,u.prototype.A=function(t,r,n){j(this,t,1),this.a.A(r,n)},u.prototype.writeSplitFixed64=u.prototype.A,u.prototype.l=function(t,r,n){j(this,t,0),this.a.l(r,n)},u.prototype.writeSplitVarint64=u.prototype.l,u.prototype.tb=function(t,r,n){j(this,t,0);var p=this.a;Se(r,n,function(y,b){p.l(y>>>0,b>>>0)})},u.prototype.writeSplitZigzagVarint64=u.prototype.tb,u.prototype.Ed=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)Dr(this,t,r[n])},u.prototype.writeRepeatedInt32=u.prototype.Ed,u.prototype.Fd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.ob(t,r[n])},u.prototype.writeRepeatedInt32String=u.prototype.Fd,u.prototype.Gd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++){var p=r[n];p!=null&&(j(this,t,0),this.a.ua(p))}},u.prototype.writeRepeatedInt64=u.prototype.Gd,u.prototype.Qd=function(t,r,n,p){if(r!=null)for(var y=0;y<r.length;y++)this.A(t,n(r[y]),p(r[y]))},u.prototype.writeRepeatedSplitFixed64=u.prototype.Qd,u.prototype.Rd=function(t,r,n,p){if(r!=null)for(var y=0;y<r.length;y++)this.l(t,n(r[y]),p(r[y]))},u.prototype.writeRepeatedSplitVarint64=u.prototype.Rd,u.prototype.Sd=function(t,r,n,p){if(r!=null)for(var y=0;y<r.length;y++)this.tb(t,n(r[y]),p(r[y]))},u.prototype.writeRepeatedSplitZigzagVarint64=u.prototype.Sd,u.prototype.Hd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.ka(t,r[n])},u.prototype.writeRepeatedInt64String=u.prototype.Hd,u.prototype.Ud=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)Br(this,t,r[n])},u.prototype.writeRepeatedUint32=u.prototype.Ud,u.prototype.Vd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.ub(t,r[n])},u.prototype.writeRepeatedUint32String=u.prototype.Vd,u.prototype.Wd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++){var p=r[n];p!=null&&(j(this,t,0),this.a.va(p))}},u.prototype.writeRepeatedUint64=u.prototype.Wd,u.prototype.Xd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.vb(t,r[n])},u.prototype.writeRepeatedUint64String=u.prototype.Xd,u.prototype.Md=function(t,r){if(r!=null)for(var n=0;n<r.length;n++){var p=r[n];p!=null&&(j(this,t,0),this.a.wa(p))}},u.prototype.writeRepeatedSint32=u.prototype.Md,u.prototype.Nd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++){var p=r[n];p!=null&&(j(this,t,0),this.a.xa(p))}},u.prototype.writeRepeatedSint64=u.prototype.Nd,u.prototype.Od=function(t,r){if(r!=null)for(var n=0;n<r.length;n++){var p=r[n];p!=null&&(j(this,t,0),this.a.Ta(p))}},u.prototype.writeRepeatedSint64String=u.prototype.Od,u.prototype.Pd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++){var p=r[n];p!=null&&(j(this,t,0),this.a.W(p))}},u.prototype.writeRepeatedSintHash64=u.prototype.Pd,u.prototype.yd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.Pa(t,r[n])},u.prototype.writeRepeatedFixed32=u.prototype.yd,u.prototype.zd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.Qa(t,r[n])},u.prototype.writeRepeatedFixed64=u.prototype.zd,u.prototype.Ad=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.nb(t,r[n])},u.prototype.writeRepeatedFixed64String=u.prototype.Ad,u.prototype.Jd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.Ra(t,r[n])},u.prototype.writeRepeatedSfixed32=u.prototype.Jd,u.prototype.Kd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.Sa(t,r[n])},u.prototype.writeRepeatedSfixed64=u.prototype.Kd,u.prototype.Ld=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.qb(t,r[n])},u.prototype.writeRepeatedSfixed64String=u.prototype.Ld,u.prototype.Cd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.L(t,r[n])},u.prototype.writeRepeatedFloat=u.prototype.Cd,u.prototype.wd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.J(t,r[n])},u.prototype.writeRepeatedDouble=u.prototype.wd,u.prototype.ud=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.I(t,r[n])},u.prototype.writeRepeatedBool=u.prototype.ud,u.prototype.xd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.R(t,r[n])},u.prototype.writeRepeatedEnum=u.prototype.xd,u.prototype.Td=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.U(t,r[n])},u.prototype.writeRepeatedString=u.prototype.Td,u.prototype.vd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.ja(t,r[n])},u.prototype.writeRepeatedBytes=u.prototype.vd,u.prototype.Id=function(t,r,n){if(r!=null)for(var p=0;p<r.length;p++){var y=Y(this,t);n(r[p],this),G(this,y)}},u.prototype.writeRepeatedMessage=u.prototype.Id,u.prototype.Dd=function(t,r,n){if(r!=null)for(var p=0;p<r.length;p++)j(this,t,3),n(r[p],this),j(this,t,4)},u.prototype.writeRepeatedGroup=u.prototype.Dd,u.prototype.Bd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.K(t,r[n])},u.prototype.writeRepeatedFixedHash64=u.prototype.Bd,u.prototype.Yd=function(t,r){if(r!=null)for(var n=0;n<r.length;n++)this.N(t,r[n])},u.prototype.writeRepeatedVarintHash64=u.prototype.Yd,u.prototype.ad=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.M(r[n]);G(this,t)}},u.prototype.writePackedInt32=u.prototype.ad,u.prototype.bd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.M(parseInt(r[n],10));G(this,t)}},u.prototype.writePackedInt32String=u.prototype.bd,u.prototype.cd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.ua(r[n]);G(this,t)}},u.prototype.writePackedInt64=u.prototype.cd,u.prototype.md=function(t,r,n,p){if(r!=null){t=Y(this,t);for(var y=0;y<r.length;y++)this.a.A(n(r[y]),p(r[y]));G(this,t)}},u.prototype.writePackedSplitFixed64=u.prototype.md,u.prototype.nd=function(t,r,n,p){if(r!=null){t=Y(this,t);for(var y=0;y<r.length;y++)this.a.l(n(r[y]),p(r[y]));G(this,t)}},u.prototype.writePackedSplitVarint64=u.prototype.nd,u.prototype.od=function(t,r,n,p){if(r!=null){t=Y(this,t);for(var y=this.a,b=0;b<r.length;b++)Se(n(r[b]),p(r[b]),function(O,B){y.l(O>>>0,B>>>0)});G(this,t)}},u.prototype.writePackedSplitZigzagVarint64=u.prototype.od,u.prototype.dd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++){var p=Pe(r[n]);this.a.l(p.lo,p.hi)}G(this,t)}},u.prototype.writePackedInt64String=u.prototype.dd,u.prototype.pd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.j(r[n]);G(this,t)}},u.prototype.writePackedUint32=u.prototype.pd,u.prototype.qd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.j(parseInt(r[n],10));G(this,t)}},u.prototype.writePackedUint32String=u.prototype.qd,u.prototype.rd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.va(r[n]);G(this,t)}},u.prototype.writePackedUint64=u.prototype.rd,u.prototype.sd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++){var p=qt(r[n]);this.a.l(p.lo,p.hi)}G(this,t)}},u.prototype.writePackedUint64String=u.prototype.sd,u.prototype.hd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.wa(r[n]);G(this,t)}},u.prototype.writePackedSint32=u.prototype.hd,u.prototype.jd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.xa(r[n]);G(this,t)}},u.prototype.writePackedSint64=u.prototype.jd,u.prototype.kd=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.W(se(r[n]));G(this,t)}},u.prototype.writePackedSint64String=u.prototype.kd,u.prototype.ld=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.W(r[n]);G(this,t)}},u.prototype.writePackedSintHash64=u.prototype.ld,u.prototype.Wc=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(4*r.length),t=0;t<r.length;t++)this.a.s(r[t])},u.prototype.writePackedFixed32=u.prototype.Wc,u.prototype.Xc=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(8*r.length),t=0;t<r.length;t++)this.a.V(r[t])},u.prototype.writePackedFixed64=u.prototype.Xc,u.prototype.Yc=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(8*r.length),t=0;t<r.length;t++){var n=qt(r[t]);this.a.A(n.lo,n.hi)}},u.prototype.writePackedFixed64String=u.prototype.Yc,u.prototype.ed=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(4*r.length),t=0;t<r.length;t++)this.a.S(r[t])},u.prototype.writePackedSfixed32=u.prototype.ed,u.prototype.fd=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(8*r.length),t=0;t<r.length;t++)this.a.T(r[t])},u.prototype.writePackedSfixed64=u.prototype.fd,u.prototype.gd=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(8*r.length),t=0;t<r.length;t++)this.a.ka(r[t])},u.prototype.writePackedSfixed64String=u.prototype.gd,u.prototype.$c=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(4*r.length),t=0;t<r.length;t++)this.a.L(r[t])},u.prototype.writePackedFloat=u.prototype.$c,u.prototype.Uc=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(8*r.length),t=0;t<r.length;t++)this.a.J(r[t])},u.prototype.writePackedDouble=u.prototype.Uc,u.prototype.Tc=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(r.length),t=0;t<r.length;t++)this.a.I(r[t])},u.prototype.writePackedBool=u.prototype.Tc,u.prototype.Vc=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.R(r[n]);G(this,t)}},u.prototype.writePackedEnum=u.prototype.Vc,u.prototype.Zc=function(t,r){if(r!=null&&r.length)for(j(this,t,2),this.a.j(8*r.length),t=0;t<r.length;t++)this.a.K(r[t])},u.prototype.writePackedFixedHash64=u.prototype.Zc,u.prototype.td=function(t,r){if(r!=null&&r.length){t=Y(this,t);for(var n=0;n<r.length;n++)this.a.N(r[n]);G(this,t)}},u.prototype.writePackedVarintHash64=u.prototype.td,s.debug=yt,s.Map=P,s.Message=R,s.BinaryReader=d,s.BinaryWriter=u,s.ExtensionFieldInfo=ce,s.ExtensionFieldBinaryInfo=ji,s.exportSymbol=function(t,r,n){l(t,r,n)},s.inherits=function(t,r){function n(){}n.prototype=r.prototype,t.prototype=new n,t.prototype.constructor=t},s.object={extend:function(t,r){for(var n,p,y=1;y<arguments.length;y++){for(n in p=arguments[y])t[n]=p[n];for(var b=0;b<I.length;b++)n=I[b],Object.prototype.hasOwnProperty.call(p,n)&&(t[n]=p[n])}}},s.typeOf=h})(M),function(s){(function(e){var i,o,a,c=function(w){function l(h){var v=w.call(this)||this;return i.set(v,[]),M.Message.initialize(v,Array.isArray(h)?h:[],0,-1,[],wi(v,i,"f")),Array.isArray(h)||typeof h!="object"||("path"in h&&h.path!=null&&(v.path=h.path),"digest"in h&&h.digest!=null&&(v.digest=h.digest)),v}return bi(l,w),Object.defineProperty(l.prototype,"path",{get:function(){return M.Message.getFieldWithDefault(this,1,"")},set:function(h){M.Message.setField(this,1,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"digest",{get:function(){return M.Message.getFieldWithDefault(this,2,new Uint8Array(0))},set:function(h){M.Message.setField(this,2,h)},enumerable:!1,configurable:!0}),l.fromObject=function(h){var v=new l({});return h.path!=null&&(v.path=h.path),h.digest!=null&&(v.digest=h.digest),v},l.prototype.toObject=function(){var h={};return this.path!=null&&(h.path=this.path),this.digest!=null&&(h.digest=this.digest),h},l.prototype.serialize=function(h){var v=h||new M.BinaryWriter;if(this.path.length&&v.writeString(1,this.path),this.digest.length&&v.writeBytes(2,this.digest),!h)return v.getResultBuffer()},l.deserialize=function(h){for(var v=h instanceof M.BinaryReader?h:new M.BinaryReader(h),I=new l;v.nextField()&&!v.isEndGroup();)switch(v.getFieldNumber()){case 1:I.path=v.readString();break;case 2:I.digest=v.readBytes();break;default:v.skipField()}return I},l.prototype.serializeBinary=function(){return this.serialize()},l.deserializeBinary=function(h){return l.deserialize(h)},l}(M.Message);i=new WeakMap,e.Input=c;var f=function(w){function l(h){var v=w.call(this)||this;return o.set(v,[]),M.Message.initialize(v,Array.isArray(h)?h:[],0,-1,[1,2],wi(v,o,"f")),Array.isArray(h)||typeof h!="object"||("arguments"in h&&h.arguments!=null&&(v.arguments=h.arguments),"inputs"in h&&h.inputs!=null&&(v.inputs=h.inputs),"request_id"in h&&h.request_id!=null&&(v.request_id=h.request_id),"cancel"in h&&h.cancel!=null&&(v.cancel=h.cancel),"verbosity"in h&&h.verbosity!=null&&(v.verbosity=h.verbosity),"sandbox_dir"in h&&h.sandbox_dir!=null&&(v.sandbox_dir=h.sandbox_dir)),v}return bi(l,w),Object.defineProperty(l.prototype,"arguments",{get:function(){return M.Message.getFieldWithDefault(this,1,[])},set:function(h){M.Message.setField(this,1,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"inputs",{get:function(){return M.Message.getRepeatedWrapperField(this,c,2)},set:function(h){M.Message.setRepeatedWrapperField(this,2,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"request_id",{get:function(){return M.Message.getFieldWithDefault(this,3,0)},set:function(h){M.Message.setField(this,3,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"cancel",{get:function(){return M.Message.getFieldWithDefault(this,4,!1)},set:function(h){M.Message.setField(this,4,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"verbosity",{get:function(){return M.Message.getFieldWithDefault(this,5,0)},set:function(h){M.Message.setField(this,5,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"sandbox_dir",{get:function(){return M.Message.getFieldWithDefault(this,6,"")},set:function(h){M.Message.setField(this,6,h)},enumerable:!1,configurable:!0}),l.fromObject=function(h){var v=new l({});return h.arguments!=null&&(v.arguments=h.arguments),h.inputs!=null&&(v.inputs=h.inputs.map(function(I){return c.fromObject(I)})),h.request_id!=null&&(v.request_id=h.request_id),h.cancel!=null&&(v.cancel=h.cancel),h.verbosity!=null&&(v.verbosity=h.verbosity),h.sandbox_dir!=null&&(v.sandbox_dir=h.sandbox_dir),v},l.prototype.toObject=function(){var h={};return this.arguments!=null&&(h.arguments=this.arguments),this.inputs!=null&&(h.inputs=this.inputs.map(function(v){return v.toObject()})),this.request_id!=null&&(h.request_id=this.request_id),this.cancel!=null&&(h.cancel=this.cancel),this.verbosity!=null&&(h.verbosity=this.verbosity),this.sandbox_dir!=null&&(h.sandbox_dir=this.sandbox_dir),h},l.prototype.serialize=function(h){var v=h||new M.BinaryWriter;if(this.arguments.length&&v.writeRepeatedString(1,this.arguments),this.inputs.length&&v.writeRepeatedMessage(2,this.inputs,function(I){return I.serialize(v)}),this.request_id!=0&&v.writeInt32(3,this.request_id),this.cancel!=0&&v.writeBool(4,this.cancel),this.verbosity!=0&&v.writeInt32(5,this.verbosity),this.sandbox_dir.length&&v.writeString(6,this.sandbox_dir),!h)return v.getResultBuffer()},l.deserialize=function(h){for(var v=h instanceof M.BinaryReader?h:new M.BinaryReader(h),I=new l;v.nextField()&&!v.isEndGroup();)switch(v.getFieldNumber()){case 1:M.Message.addToRepeatedField(I,1,v.readString());break;case 2:v.readMessage(I.inputs,function(){return M.Message.addToRepeatedWrapperField(I,2,c.deserialize(v),c)});break;case 3:I.request_id=v.readInt32();break;case 4:I.cancel=v.readBool();break;case 5:I.verbosity=v.readInt32();break;case 6:I.sandbox_dir=v.readString();break;default:v.skipField()}return I},l.prototype.serializeBinary=function(){return this.serialize()},l.deserializeBinary=function(h){return l.deserialize(h)},l}(M.Message);o=new WeakMap,e.WorkRequest=f;var g=function(w){function l(h){var v=w.call(this)||this;return a.set(v,[]),M.Message.initialize(v,Array.isArray(h)?h:[],0,-1,[],wi(v,a,"f")),Array.isArray(h)||typeof h!="object"||("exit_code"in h&&h.exit_code!=null&&(v.exit_code=h.exit_code),"output"in h&&h.output!=null&&(v.output=h.output),"request_id"in h&&h.request_id!=null&&(v.request_id=h.request_id),"was_cancelled"in h&&h.was_cancelled!=null&&(v.was_cancelled=h.was_cancelled)),v}return bi(l,w),Object.defineProperty(l.prototype,"exit_code",{get:function(){return M.Message.getFieldWithDefault(this,1,0)},set:function(h){M.Message.setField(this,1,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"output",{get:function(){return M.Message.getFieldWithDefault(this,2,"")},set:function(h){M.Message.setField(this,2,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"request_id",{get:function(){return M.Message.getFieldWithDefault(this,3,0)},set:function(h){M.Message.setField(this,3,h)},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,"was_cancelled",{get:function(){return M.Message.getFieldWithDefault(this,4,!1)},set:function(h){M.Message.setField(this,4,h)},enumerable:!1,configurable:!0}),l.fromObject=function(h){var v=new l({});return h.exit_code!=null&&(v.exit_code=h.exit_code),h.output!=null&&(v.output=h.output),h.request_id!=null&&(v.request_id=h.request_id),h.was_cancelled!=null&&(v.was_cancelled=h.was_cancelled),v},l.prototype.toObject=function(){var h={};return this.exit_code!=null&&(h.exit_code=this.exit_code),this.output!=null&&(h.output=this.output),this.request_id!=null&&(h.request_id=this.request_id),this.was_cancelled!=null&&(h.was_cancelled=this.was_cancelled),h},l.prototype.serialize=function(h){var v=h||new M.BinaryWriter;if(this.exit_code!=0&&v.writeInt32(1,this.exit_code),this.output.length&&v.writeString(2,this.output),this.request_id!=0&&v.writeInt32(3,this.request_id),this.was_cancelled!=0&&v.writeBool(4,this.was_cancelled),!h)return v.getResultBuffer()},l.deserialize=function(h){for(var v=h instanceof M.BinaryReader?h:new M.BinaryReader(h),I=new l;v.nextField()&&!v.isEndGroup();)switch(v.getFieldNumber()){case 1:I.exit_code=v.readInt32();break;case 2:I.output=v.readString();break;case 3:I.request_id=v.readInt32();break;case 4:I.was_cancelled=v.readBool();break;default:v.skipField()}return I},l.prototype.serializeBinary=function(){return this.serialize()},l.deserializeBinary=function(h){return l.deserialize(h)},l}(M.Message);a=new WeakMap,e.WorkResponse=g})(s.worker||(s.worker={}))}(Tr||(Tr={})),kr.enterWorkerLoop=function(s){var e,i,o,a,c;return Pc(this,void 0,void 0,function(){var f,g,w,l,h,v,I;return Ac(this,function(A){switch(A.label){case 0:f=new Map,g=Buffer.alloc(0),A.label=1;case 1:A.trys.push([1,6,7,12]),w=function(){a=v.value,l=!1;try{var D=a,L=Buffer.concat([g,D]),F=void 0,m=function(J){for(var X,ot=0,St=0,ct=0;ct<5&&(ot|=(127&(X=J[St++]))<<7*ct,128&X);ct++);return{size:ot,headerSize:St}}(L);if(!(m.size<=L.length+m.headerSize))return g=L,"continue";F=(L=L.slice(m.headerSize)).slice(0,m.size),g=L.slice(m.size);var T=Tr.worker.WorkRequest.deserialize(F);if(T.cancel)return(c=f.get(T.request_id))===null||c===void 0||c.abort(),"continue";var N=new AbortController;f.set(T.request_id,N);var $=new Tr.worker.WorkResponse({request_id:T.request_id}),P=new Array,dt=new Nc.Writable({write:function(J,X,ot){P.push(Buffer.from(J,X)),ot?.(void 0)},defaultEncoding:"utf-8"});s({arguments:T.arguments,inputs:T.inputs,request_id:T.request_id,verbosity:T.verbosity,sandbox_dir:T.sandbox_dir,signal:N.signal,output:dt}).then(function(J){$.exit_code=J}).catch(function(J){var X;$.exit_code=1,X=String(typeof J=="object"&&"stack"in J?J.stack:J),dt.write(X),T.verbosity>0&&console.error(X)}).finally(function(){f.delete(T.request_id),dt.end(),$.was_cancelled=N.signal.aborted,$.output=Buffer.concat(P).toString("utf-8");var J=$.serialize(),X=function(ot){for(var St=Buffer.alloc(10),ct=0;ot>127;)St[ct]=127&ot|128,ot>>>=7,ct++;return St[ct]=ot,St.slice(0,ct+1)}(J.byteLength);process.stdout.write(Buffer.concat([X,J]))})}finally{l=!0}},l=!0,h=Cc(process.stdin),A.label=2;case 2:return[4,h.next()];case 3:if(v=A.sent(),e=v.done)return[3,5];w(),A.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return I=A.sent(),i={error:I},[3,12];case 7:return A.trys.push([7,,10,11]),l||e||!(o=h.return)?[3,9]:[4,o.call(h)];case 8:A.sent(),A.label=9;case 9:return[3,11];case 10:if(i)throw i.error;return[7];case 11:return[7];case 12:return[2]}})})},kr.isPersistentWorker=function(s){return s.indexOf("--persistent_worker")!==-1}});var xe=class{name;map=new Map;constructor(e){this.name=e}set(e,i){this.map.set(e,i)}get(e,i=!0){let o=this.map.get(e);return i&&o&&(this.map.delete(e),this.map.set(e,o)),o}delete(e){this.map.delete(e)}evict(e=2){let i=this.map.size,o=Math.ceil(i/e);if(o===0)return 0;for(let c of this.map.keys()){if(o===0)break;this.map.delete(c),o--}return i-this.map.size}keys(){return this.map.keys()}};var $o=1024*(1<<20),Be=class{fileCache=new xe("file");lastDigests=new Map;cannotEvict=!1;maxMemoryUsage=$o;updateCache(e){this.lastDigests=new Map;for(let[i,o]of e.entries()){this.lastDigests.set(i,o);let a=this.fileCache.get(i,!1);a&&!jr(a.digest,o)&&(console.error("evicting",i),this.fileCache.delete(i))}this.cannotEvict=!1}getLastDigest(e){return this.lastDigests.get(e)}getCache(e){let i=this.fileCache.get(e,!0);if(i)return i.value}putCache(e,i){this.maybeFreeMemory(),this.fileCache.set(e,i)}inCache(e){return!!this.getCache(e)}shouldFreeMemory=e=>e>this.maxMemoryUsage;maybeFreeMemory(){if(this.cannotEvict)return 0;let e=process.memoryUsage().heapUsed;if(!this.shouldFreeMemory(e))return 0;let i=this.fileCache.evict();return i===0&&(this.cannotEvict=!0),i}};function jr(s,e){if(s.length!==e.length)return!1;for(let i=0;i<s.length;i++)if(s[i]!==e[i])return!1;return!0}import*as xt from"@angular/compiler-cli";import Fr from"typescript";var Oo=Xi(_o(),1);import we from"fs";import ve from"path";import*as So from"@angular/compiler-cli";var vr=class extends So.NodeJSFileSystem{removeFile(e){throw new Error("Not implemented.")}symlink(e,i){throw new Error("Not implemented.")}copyFile(e,i){throw new Error("Not implemented.")}moveFile(e,i){throw new Error("Not implemented.")}chdir(e){throw new Error("Not implemented.")}removeDeep(){throw new Error("Not implemented")}};import vc from"path";var Qt=vc.join(process.cwd(),"../../../"),di=process.argv.includes("--vanilla-ts"),Eo=process.env.DEBUG_WORKER==="1";var _c="@@READ--FROM-DISK@@",Sc=0,_r=class extends vr{id=Sc++;_vol=new Oo.Volume;_diskCwd=process.cwd();_virtualCwd=`/${ve.relative(Qt,this._diskCwd)}`;constructor(e){super();for(let i of e)this.addFile(i)}resolve(...e){return ve.resolve(this._virtualCwd,...e)}pwd(){return this._virtualCwd}readdir(e){return this._vol.readdirSync(e)}stat(e){return this._vol.statSync(e)}lstat(e){return this._vol.lstatSync(e)}addFile(e){if(this.exists(e))return;let i=ve.dirname(e);this._vol.mkdirSync(i,{recursive:!0});let o=this.diskLstat(e);if(o?.isSymbolicLink()){let a=this.diskReadlink(e);this.addFile(a),this._vol.symlinkSync(a,e)}else o?.isDirectory()?this._vol.mkdirSync(e):this._vol.writeFileSync(e,_c,{encoding:"utf8"})}readFile(e){return we.readFileSync(this.toDiskPath(e),{encoding:"utf8"})}writeFile(e,i,o){we.writeFileSync(this.toDiskPath(e),i,o?{flag:"wx"}:void 0)}ensureDir(e){we.mkdirSync(this.toDiskPath(e),{recursive:!0})}exists(e){return this._vol.existsSync(e)}realpath(e){return this._vol.realpathSync(this.resolve(e),{encoding:"utf8"})}diskLstat(e){try{return we.lstatSync(this.toDiskPath(e))}catch{return null}}diskReadlink(e){return this.fromDiskPath(we.readlinkSync(this.toDiskPath(e)))}toDiskPath(e){return ve.join(Qt,this.resolve(e))}fromDiskPath(e){let i=ve.relative(Qt,e);if(i.startsWith(".."))throw new Error(`Unexpected disk path that cannot be part of execroot: ${e}`);return`/${i}`}};import Ec from"typescript";import*as Ro from"@angular/compiler-cli";import*as Fo from"fs";function To(s,e,i,o){let a=new Ro.NgtscCompilerHost(i,s),c=a.getSourceFile,f=a.getDefaultLibLocation?.();if(f===void 0)throw new Error("Could not determine default TypeScript lib location.");return o!==null&&(a.getModifiedResourceFiles=()=>o),a.readResource=g=>{let w=e.getCache(g);if(w!==void 0&&typeof w=="string")return w;let l=i.readFile(i.resolve(g));if(l===void 0)throw new Error(`Could not read resource file: ${g}`);let h=e.getLastDigest(g);if(h===void 0)throw new Error(`No digest found for resource file: ${g}`);return e.putCache(g,{digest:h,value:l}),l},a.getSourceFile=function(g,w,l,h){let v=e.getCache(g);if(v!==void 0&&typeof v!="string")return v;let I=f!==void 0&&g.startsWith(f),A;if(I?A=Ec.createSourceFile(g,Fo.readFileSync(g,"utf8"),w,!1):A=c.call(this,g,w,l,h),A!==void 0){let D=I?new Uint8Array:e.getLastDigest(g);if(D===void 0)throw new Error(`No digest found for source file: ${g}`);e.putCache(g,{digest:D,value:A})}return A},a}function ko(s){return{isCancellationRequested:()=>s.aborted,throwIfCancellationRequested:()=>{if(s.aborted)throw new Error(s.reason)}}}var Oc=/\.(css|html)$/;function No(s){return Oc.test(s)}function Po(s,e){let i=new Set;for(let[o,a]of s.entries()){if(!No(o))continue;let c=e.get(o);if(c===void 0||!jr(a,c)){i.add(o);continue}e.has(o)||i.add(o)}for(let o of e.keys())No(o)&&(s.has(o)||i.add(o));return i}import Fc from"assert";var Sr=class{program;lastInputs;constructor(e,i){this.program=e,this.lastInputs=i}};var te=class{rootNames;options;host;oldProgram;constructor(e,i,o,a){this.rootNames=e,this.options=i,this.host=o,this.oldProgram=a}};import*as Ao from"@angular/compiler-cli";import yi from"assert";var Er=class s extends te{_ngtscProgram=null;async init(){this._ngtscProgram=new Ao.NgtscProgram(this.rootNames,this.options,this.host,this.oldProgram instanceof s?this.oldProgram._ngtscProgram??void 0:void 0),await this._ngtscProgram.loadNgStructureAsync()}getPreEmitDiagnostics(e){return yi(this._ngtscProgram,"Expected ngtsc program to be initialized."),[...this._ngtscProgram.getTsSyntacticDiagnostics(void 0,e),...this._ngtscProgram.getTsSemanticDiagnostics(void 0,e),...this._ngtscProgram.getTsProgram().getGlobalDiagnostics(e),...this._ngtscProgram.getNgStructuralDiagnostics(e),...this._ngtscProgram.getNgSemanticDiagnostics(void 0,e)]}emit(e){return yi(this._ngtscProgram,"Expected ngtsc program to be initialized."),this._ngtscProgram.emit({cancellationToken:e,forceEmit:!0})}isStructureReused(){return yi(this._ngtscProgram,"Expected ngtsc program to be initialized."),(this._ngtscProgram?.getTsProgram()).structureIsReused}};import Rc from"typescript";import gi from"assert";var Or=class s extends te{_tsProgram=null;async init(){this._tsProgram=Rc.createProgram({rootNames:this.rootNames,options:this.options,host:this.host,oldProgram:this.oldProgram instanceof s?this.oldProgram._tsProgram??void 0:void 0})}getPreEmitDiagnostics(e){return gi(this._tsProgram,"Expected TS program to be initialized."),[...this._tsProgram.getSyntacticDiagnostics(void 0,e),...this._tsProgram.getSemanticDiagnostics(void 0,e),...this._tsProgram.getGlobalDiagnostics(e)]}emit(e){return gi(this._tsProgram,"Expected TS program to be initialized."),this._tsProgram.emit(void 0,void 0,e,!1,void 0)}isStructureReused(){return gi(this._tsProgram,"Expected ngtsc program to be initialized."),this._tsProgram.structureIsReused}};var Rr;(function(s){s[s.Not=0]="Not",s[s.SafeModules=1]="SafeModules",s[s.Completely=2]="Completely"})(Rr||(Rr={}));var Tc=0;async function mi(s,e){let i=s[s.indexOf("--project")+1],o=s[s.lastIndexOf("--outDir")+1],a=s[s.lastIndexOf("--declarationDir")+1],c=s[s.lastIndexOf("--rootDir")+1],f=`${i} @ ${o} @ ${a} @ ${c}`,g=e?.programCache.get(f),w=null;e!==null&&(w=new Map(e.req.inputs.map(P=>[`/${P.path}`,P.digest])));let l=Fr.parseCommandLine(s),h=w!==null?new _r(Array.from(w.keys())):new xt.NodeJSFileSystem;xt.setFileSystem(h);let v=g!==void 0&&w!==null?Po(w,g.lastInputs):null;e!==null&&(Fc(w,"Expected inputs when using persistent file cache."),e.fileCache.updateCache(w));let I=xt.readConfiguration(l.options.project,l.options,h),A=I.options,D={getCanonicalFileName:P=>P,getCurrentDirectory:()=>h.pwd(),getNewLine:()=>`
`};if(I.errors.length)return console.error(`Config parsing errors:
`),console.error(Fr.formatDiagnosticsWithColorAndContext(I.errors,D)),1;let L;e!==null?L=To(A,e.fileCache,h,v):L=new xt.NgtscCompilerHost(h,A);let F=di?Or:Er,m=new F(I.rootNames,A,L,g?.program);w!==null&&(g!==void 0?(g.program=m,g.lastInputs=w):e?.programCache.set(f,new Sr(m,w)));let T=e!==null?ko(e.req.signal):void 0;await m.init(),Eo&&(console.error(`Worker re-use, number of previous runs: ${Tc++}`),console.error(`Re-using program & host: ${!!g}`),console.error(`Vanilla TS: ${di}`),console.error(`Modified resources: ${v?.size}`),console.error("Structure reused",Rr[m.isStructureReused()]));let N=m.getPreEmitDiagnostics(T);if(N.length!==0)return console.error(`Pre-emit diagnostics:
`),console.error(Fr.formatDiagnosticsWithColorAndContext(N,D)),1;let $=m.emit(T);return $.diagnostics.length!==0?(console.error(`Emit diagnostics:
`),console.error(Fr.formatDiagnosticsWithColorAndContext($.diagnostics,D)),1):$.emitSkipped?1:0}import*as Io from"fs";import kc from"path";function Co(){let s=process.argv.slice(2);if(s[0].startsWith("@")){let e=s[0].split("@")[1],i=kc.join(Qt,e);return Io.readFileSync(i,"utf8").trim().split(`
`)}throw new Error("Could not find params flag file.")}var Nr=Xi(xo(),1);if(!Nr.default.isPersistentWorker(process.argv)){if(!process.cwd().startsWith("/b/f/w/")&&!process.cwd().includes("sandbox"))throw new Error("It's disallowed to compile outside of sandbox/or outside of a worker.");let e=await mi(Co(),null);process.exitCode=e}if(Nr.default.isPersistentWorker(process.argv)){let s=new Be,e=new Map;Nr.default.enterWorkerLoop(async i=>{if(i.inputs===void 0)throw new Error("No inputs specified in `WorkRequest`.");return console.error=(...o)=>{i.output.write(`${o.join(" ")}
`)},await mi(i.arguments,{fileCache:s,programCache:e,req:i})})}
//# sourceMappingURL=data:application/json;base64,
